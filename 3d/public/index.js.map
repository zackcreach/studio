{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/object-assign/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/right-now/browser.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/is-promise/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/is-dom/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/util.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/repeat-string/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/deep-equal/lib/keys.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/deep-equal/lib/is_arguments.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/deep-equal/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/dateformat/lib/dateformat.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/pad-left/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/save.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/accessibility.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/paper-sizes.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/distances.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/resizeCanvas.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/node_modules/get-canvas-context/index.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/createCanvas.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/SketchManager.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/core/keyboardShortcuts.js","node_modules/canvas-sketch/dist/node_modules/canvas-sketch/lib/canvas-sketch.js","node_modules/convert-length/convert-length.js","node_modules/defined/index.js","node_modules/three/build/three.js","node_modules/three/examples/js/controls/OrbitControls.js","canvas-sketch-cli/injected/storage-key.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","global","THREE","canvasSketch","context","renderer","WebGLRenderer","setClearColor","camera","PerspectiveCamera","position","set","lookAt","Vector3","controls","OrbitControls","canvas","scene","Scene","index","material","LineBasicMaterial","color","geometry","Geometry","vertices","push","line","Line","add","AmbientLight","light","PointLight","multiplyScalar","[object Object]","pixelRatio","viewportWidth","viewportHeight","setPixelRatio","setSize","aspect","updateProjectionMatrix","time","update","rotation","x","render","dispose","animate","attributes","antialias","getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","objectAssign","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","TypeError","toObject","s","arguments","key","browser","commonjsGlobal","performance","now","Date","isPromise_1","obj","then","isDom","window","Node","nodeType","nodeName","getClientAPI","defined","arguments$1","isBrowser","document","cache","shim","supportsArgumentsClass","toString","supported","object","unsupported","pSlice","Array","slice","deepEqual","actual","expected","opts","getTime","strict","b","isUndefinedOrNull","is_arguments","isBuffer","ka","kb","sort","objEquiv","value","copy","token","timezone","timezoneClip","dateFormat","date","mask","utc","gmt","undefined","isArray","toLowerCase","test","isNaN","maskSlice","masks","_","d","D","m","y","H","M","L","getTimezoneOffset","W","targetThursday","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","setHours","getHours","Math","floor","getWeek","N","dow","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","pop","replace","abs","S","len","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","res","repeatString","str","num","max","substr","link","padLeft","ch","noop","defaultExts","extension","prefix","suffix","supportedEncodings","stream","isStart","Promise","resolve","reject","filename","resolveFilename","frame","func","client","output","ev","saveDataURL","dataURL","splitIndex","indexOf","base64","byteString","atob","type","mimeMatch","exec","mime","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Blob","createBlobFromDataURL","blob","saveBlob","createElement","style","visibility","download","href","URL","createObjectURL","body","appendChild","onclick","setTimeout","revokeObjectURL","parentElement","removeChild","removeAttribute","click","opt","file","totalFrames","layerStr","isFinite","totalLayers","layer","filter","Boolean","name","timeStamp","hash","commonTypos","dimension","animated","animating","unit","P5","pixellated","looping","pixelPerInch","allKeys","checkSettings","settings","console","warn","includes","paperSizes","reduce","dict","preset","item","units","dimensions","convertDistance","unitsFrom","unitsTo","pixelsPerInch","convertLength","precision","roundPixel","resizeCanvas","props","width","height","styleWidth","styleHeight","canvasWidth","canvasHeight","hasDimensions","checkIfHasDimensions","exporting","scaleToFit","scaleToView","exportPixelRatio","bleed","devicePixelRatio","basePixelRatio","maxPixelRatio","min","trimWidth","trimHeight","ref","element","parent","innerWidth","innerHeight","getBoundingClientRect","getParentSize","parentWidth","parentHeight","result","getDimensionsFromPreset","highest","lowest","orientation","landscape","realWidth","realHeight","windowAspect","scaleToFitPadding","maxWidth","maxHeight","getCanvasContext_1","gl","attribs","names","getContext","createCanvas","ownsCanvas","newCanvas","createCanvasElement","pixelated","imageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","SketchManager","_settings","_props","_sketch","_raf","_lastRedrawResult","_isP5Resizing","_keyboardShortcuts","handler","enabled","keyCode","altKey","metaKey","ctrlKey","togglePlay","preventDefault","commit","save","addEventListener","removeEventListener","keyboardShortcuts","this$1","hotkeys","shiftKey","recording","endRecord","run","record","exportFrame","playing","pause","play","_animateHandler","_resizeHandler","resize","sketch","get","this","_computePlayhead","currentTime","duration","_computeFrame","playhead","fps","_computeCurrentFrame","_getSizeProps","started","_signalBegin","tick","cancelAnimationFrame","_lastTime","requestAnimationFrame","error","stop","deltaTime","exportOpts","_createExportOptions","frameInterval","log","_signalEnd","beginRecord","_wrapContextScale","catch","response","begin","end","wasRecording","sequence","encoding","encodingQuality","dateformat","all","preExport","commitOpts","_doExportFrame","drawResult","concat","hasDataObject","data","toDataURL","exportCanvas","layerList","curOpt","saveParam","k","savePromise","parts","saveFile","saveResult","savedEvents","eventWithOutput","find","outputName","isClient","some","isStreaming","ofSeq","postExport","cb","_preRender","_postRender","p5","scale","scaleX","scaleY","scaleContext","restore","flush","redraw","submitDrawCall","notYetSupported","oldCanvas","oldContext","timeOpts","timeProps","getTimeProps","_setupGLKey","_appendCanvasIfNeeded","draw","oldSizes","newProps","pixelDensity","styleCanvas","newSizes","changed","deepEqual_1","_sizeChanged","frameIntervalMS","deltaTimeMS","hasDuration","isNewFrame","playbackRate","newTime","timeScale","isFinished","isLoopStart","loop","lastFrame","dispatch","mount","unmount","detach","ctx","clear","clearColor","bufferData","hasTotalFrames","totalFramesFromDuration","durationFromTotalFrames","Infinity","startTime","startFrame","hasStartTime","hasStartFrame","setup","loadAndRun","newSettings","load","unload","destroy","createSketch","preload","P5Constructor","p5Sketch","isGL","WEBGL","P2D","noLoop","setAttributes","_renderer","drawingContext","loader","attach","message","CACHE","runtimeCollisions","hotID","isHot","hot","id","isInjecting","previousData","cacheGet","next","oldManager","manager","PaperSizes","conversions","system","factor","cm","pt","pc","in","ft","anchors","metric","ratio","imperial","fromUnit","toUnit","toFactor","fromFactor","isToPixel","fromUnitData","toUnitData","anchor","decimals","Number","factory","EventDispatcher","EPSILON","pow","isInteger","sign","Function","defineProperty","nextKey","listener","_listeners","listeners","hasEventListener","listenerArray","splice","dispatchEvent","event","array","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","ACESFilmicToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","KeepStencilOp","AlwaysStencilFunc","_lut","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toUpperCase","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","LN2","floorPowerOfTwo","Vector2","Quaternion","z","w","_x","_y","_z","_w","defineProperties","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","clone","constructor","v","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","tDir","_onChangeCallback","isQuaternion","quaternion","setFromEuler","euler","isEuler","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","angleTo","q","acos","rotateTowards","step","inverse","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","callback","_vector","_quaternion","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","theta","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","getZ","_canvas","_vector$1","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","setFromMatrix4","applyToBufferAttribute","count","setXYZ","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","g","getInverse","matrix","throwOnDegenerate","isMatrix4","t11","t12","t13","det","msg","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","cx","cy","rotate","translate","ImageUtils","getDataURL","image","HTMLCanvasElement","src","createElementNS","ImageData","putImageData","drawImage","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","Vector4","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLMultisampleRenderTarget","samples","create","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","xx","zz","xy","xz","yz","getW","isWebGLRenderTarget","isWebGLMultisampleRenderTarget","_v1","_m1","Matrix4","_zero","_one","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleZ","makeRotationFromEuler","af","bf","cf","de","ce","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","getMaxScaleOnAxis","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","x2","y2","z2","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","_matrix","_quaternion$1","Euler","_order","DefaultOrder","Layers","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","enableAll","toggle","disable","disableAll","layers","_object3DId","_v1$1","_q1","_m1$1","_target","_position","_scale","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","children","DefaultUp","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","background","fog","overrideMaterial","autoUpdate","__THREE_DEVTOOLS__","CustomEvent","detail","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","isLight","remove","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","updateMatrixWorld","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","serialize","library","JSON","stringify","isMesh","drawMode","isLine","isPoints","parameters","uuids","extractFromCache","values","recursive","parse","isScene","_points","_vector$2","_v0","_v1$2","_v2","_f0","_f1","_f2","_center","_extents","_triangleNormal","_testAxis","Box3","satForAxes","axes","v0","extents","j","p0","p1","p2","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","isGeometry","isBufferGeometry","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","distanceToPoint","getBoundingSphere","intersect","union","_box","Sphere","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","_vector$3","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","direction","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","denominator","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","_v0$1","_v1$3","_v2$1","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","p3","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","setFromCoplanarPoints","d4","vc","d5","d6","vb","va","_colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_hslA","_hslB","Color","setRGB","hue2rgb","SRGBToLinear","LinearToSRGB","Face3","materialIndex","vertexNormals","isColor","vertexColors","setHex","setStyle","hex","setHSL","handleAlpha","string","parseFloat","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","materialId","Material","lights","blending","side","flatShading","vertexTangents","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilFunc","stencilRef","stencilMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","toneMapped","needsUpdate","MeshBasicMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","setValues","BufferAttribute","itemSize","normalized","dynamic","updateRange","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","DirectGeometry","normals","colors","uvs","uvs2","groups","skinWeights","skinIndices","boundingBox","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","arrayMax","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","roughness","metalness","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatNormalMap","clearcoatNormalScale","matcap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","envMapIntensity","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","morphNormals","srcPlanes","dstPlanes","isMeshBasicMaterial","isBufferAttribute","onUploadCallback","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","group","faces","face","start","fromGeometry","morphTargetsPosition","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","_bufferGeometryId","_m1$2","_obj","_offset","_box$1","_boxMorphTargets","_vector$4","BufferGeometry","morphAttributes","drawRange","getIndex","setIndex","addAttribute","isInterleavedBufferAttribute","getAttribute","addGroup","clearGroups","setDrawRange","tangent","computeBoundingBox","computeBoundingSphere","positions","lineDistances","updateFromObject","direct","__directGeometry","elementsNeedUpdate","lineDistancesNeedUpdate","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","jl","computeFaceNormals","computeVertexNormals","vA","vB","vC","pA","pB","pC","indices","normalizeNormals","merge","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","attributeData","hasMorphAttributes","attributeArray","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","morphInfluences","morphTargetInfluences","influence","intersection","setDrawMode","morphTargetDictionary","ml","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","fl","faceMaterial","uvs_f","_geometryId","_m1$3","_obj$1","_offset$1","BoxGeometry","depth","widthSegments","heightSegments","depthSegments","fromBufferGeometry","BoxBufferGeometry","mergeVertices","scope","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","addFace","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","faceVertexUvs2","uvsCopy","kl","mergeMesh","mesh","verticesMap","unique","changes","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","newUvs1","newUvs2","uvs1","vertex","normalsHash","colorsHash","uvsHash","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","srcVertexNormal","destVertexNormal","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Camera","fov","zoom","focus","view","filmGauge","filmOffset","isShaderMaterial","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","currentRenderTarget","getRenderTarget","setRenderTarget","stencil","DataTexture","isWebGLRenderTargetCube","fromEquirectangularTexture","shader","tEquirect","isDataTexture","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$1","_vector$5","Frustum","p4","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsLib","diffuse","uvTransform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","lambert","phong","standard","dashed","totalSize","t2D","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","buffers","WeakMap","deleteBuffer","buffer","delete","bufferType","usage","createBuffer","bindBuffer","bytesPerElement","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","WebGLBackground","state","objects","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","setClear","getClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","vr","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","unshift","WebGLBufferRenderer","info","capabilities","mode","setMode","drawArrays","renderInstances","methodName","isWebGL2","maxInstancedCount","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","_bufferGeometry","geometryAttributes","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","reset","instanceCount","absNumericalSort","WebGLMorphtargets","influencesList","program","objectInfluences","influences","getUniforms","setValue","WebGLObjects","updateList","CubeTexture","DataTexture2DArray","wrapR","DataTexture3D","physical","transparency","sheen","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","trim","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMapping","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","tangentSpaceNormalMap","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","cachedUniforms","cachedAttributes","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","deleteShader","getAttributes","getActiveAttrib","getAttribLocation","fetchAttributeLocations","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","nVertexMatrices","allocateBones","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","WebGLRenderLists","lists","onSceneDispose","list","cameras","UniformsCache","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","has","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_objects","_frustum","_shadowMapSize","_viewportSize","_viewport","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","2","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizonal","HORIZONAL_PASS","fullScreenTri","fullScreenMesh","useMorphing","useSkinning","depthMaterial","distanceMaterial","VSMPass","mapPass","renderBufferDirect","getDepthMaterial","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","renderObject","shadowCamera","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","pars","shadowFrameExtents","getFrameExtents","isPointLightShadow","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","utils","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","setOp","stencilOp","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","blendEquationSeparate","convert","blendFuncSeparate","blendFunc","setFlipSided","frontFace","setCullFace","cullFace","setPolygonOffset","activeTexture","webglSlot","initAttributes","enableAttribute","disableUnusedAttributes","disableVertexAttribArray","getCompressedTextureFormats","formats","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","compressedTexImage2D","apply","texImage3D","WebGLTextures","_gl","_videoTextures","useOffscreenCanvas","OffscreenCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","internalFormat","filterFallback","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","glInternalFormat","setTextureParameters","mipmap","mipmapImage","setTextureCubeDynamic","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","Group","ArrayCamera","isGroup","isArrayCamera","_geometry","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","WebVRManager","renderWidth","renderHeight","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","referenceSpaceType","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraVR","isPresenting","currentPixelRatio","currentSize","eyeParameters","getEyeParameters","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","updateViewportFromBounds","bounds","getController","controller","getDevice","setDevice","setFramebufferScaleFactor","setReferenceSpaceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","leftBounds","rightBounds","hasPosition","buttonId","buttons","pressed","updateControllers","getStandingMatrix","submitFrame","setFrameOfReferenceType","WebXRManager","referenceSpace","inputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","onRequestReferenceSpace","updateCamera","setSession","updateRenderState","baseLayer","XRWebGLLayer","requestReferenceSpace","onAnimationFrameCallback","getViewerPose","views","transform","inputPose","getPose","targetRaySpace","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","getTargetPixelRatio","contextAttributes","xrCompatible","onContextLost","onContextRestore","rangeMin","rangeMax","initGLContext","xr","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","initMaterial","renderObjects","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsStateVersion","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","isFog","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","projectObject","isLOD","opaqueObjects","transparentObjects","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","InterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","isInterleavedBuffer","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA$1","_vB$1","_vC$1","_uvA$1","_uvB$1","_uvC$1","Sprite","transformVertex","vertexPosition","mvPosition","_v1$4","_v2$2","LOD","levels","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","addLevel","getObjectForDistance","bind","calculateInverses","normalizeSkinWeights","skinWeight","_offsetMatrix","_identityMatrix","Skeleton","boneInverses","Bone","linecap","linejoin","bone","isBone","getBoneByName","_start","_end","_inverseMatrix$1","_ray$1","_sphere$2","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","nbVertices","_start$1","_end$1","LineSegments","LineLoop","_inverseMatrix$2","_ray$2","_sphere$3","_position$1","Points","testPoint","localThresholdSq","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","ol","edge1","edge2","edge","edges","ParametricGeometry","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","applyRadius","centroid","uvA","uvB","uvC","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateSegment","getPointAt","B","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","threshold","params","localThreshold","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","prev","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","sum","signedArea","insertNode","removeNode","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q1","q2","an","bp","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","shape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","scalePt2","vec","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","b_x","b_y","c_x","c_y","indexD","a_x","a_y","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","uOffset","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","MATCAP","Materials","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","tracks","resetDuration","parseKeyframeTrack","json","trackType","typeName","getTrackTypeForValueTypeName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","track","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","shift","timeOffset","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","jsonTracks","frameTime","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","DefaultLoadingManager","Loader","crossOrigin","resourcePath","setCrossOrigin","setPath","setResourcePath","Handlers","handlers","regex","loading","FileLoader","AnimationLoader","CompressedTextureLoader","_parser","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","cached","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","responseType","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","open","callbacks","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setResponseType","setWithCredentials","setMimeType","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","onImageLoad","onImageError","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","_frameExtents","_viewportCount","_viewports","SpotLightShadow","SpotLight","power","PointLightShadow","_cubeDirections","_cubeUps","OrthographicCamera","DirectionalLightShadow","DirectionalLight","RectAreaLight","MaterialLoader","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","_lightPositionWorld","_lookTarget","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","viewportIndex","isSpotLightShadow","viewCamera","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","isDirectionalLightShadow","getTexture","shading","setTextures","LoaderUtils","decodeText","TextDecoder","decode","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","typedArray","TYPED_ARRAYS","bufferAttribute","drawcalls","offsets","ObjectLoader","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","bufferGeometryLoader","details","geometryShapes","LegacyJSONLoader","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","child","UVMapping","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","familyName","FontLoader","setOptions","imageBitmap","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","substring","AudioContext","webkitAudioContext","AudioLoader","SphericalHarmonics3","LightProbe","HemisphereLightProbe","sky","ground","AmbientLightProbe","bufferCopy","decodeAudioData","audioBuffer","isSphericalHarmonics3","zero","getAt","coeff","addScale","getIrradianceAt","getBasisAt","shBasis","isHemisphereLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","Clock","autoStart","oldTime","elapsedTime","running","xmin","xmax","eyeSepHalf","eyeSepOnProjection","ymax","getElapsedTime","getDelta","_position$2","_quaternion$3","_scale$1","_orientation","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","Audio","getInput","autoplay","detune","isPlaying","hasPlaybackControl","sourceType","filters","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","_position$3","_quaternion$4","_scale$2","_orientation$1","PositionalAudio","panner","createPanner","panningModel","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","saveOriginalState","originalValueOffset","getValue","restoreOriginalState","_reservedRe","RegExp","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","node","findNode","AnimationObjectGroup","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedInterleavedBuffer","Raycaster","PointCloud","ascSort","intersectObject","Spherical","Cylindrical","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCachedIndex","firstActiveObject","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","other","makeSafe","setFromCartesianCoords","_vector$6","Box2","_startP","_startEnd","Line3","ImmediateRenderObject","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","_v1$5","_v2$3","_normalMatrix$1","_keys","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","_vector$7","SpotLightHelper","cone","coneLength","coneWidth","_vector$8","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","_vector$9","_color1","_color2","HemisphereLightHelper","LightProbeHelper","GAMMA_OUTPUT","GridHelper","PolarGridHelper","radials","circles","PositionalAudioHelper","divisionsInnerAngle","divisionsOuterAngle","materialInnerAngle","materialOuterAngle","halfConeInnerAngle","halfConeOuterAngle","_v1$6","_v2$4","_normalMatrix$2","FaceNormalsHelper","_v1$7","_v2$5","_v3$1","DirectionalLightHelper","lightPlane","targetLine","_vector$a","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box$2","BoxHelper","Box3Helper","PlaneHelper","_lineGeometry","_coneGeometry","_axis","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","ClosedSplineCurve3","SplineCurve3","Spline","setColor","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","setTexturePath","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","renderReverseSided","renderSingleSided","activeMipMapLevel","standing","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","AxisHelper","BasicShadowMap","BinaryTextureLoader","BoundingBoxHelper","CanvasRenderer","CubeGeometry","CullFaceFrontBack","DecrementStencilOp","DecrementWrapStencilOp","DynamicBufferAttribute","EdgesHelper","EqualStencilFunc","Face4","FlatShading","Float32Attribute","Float64Attribute","FrontFaceDirectionCCW","FrontFaceDirectionCW","GreaterEqualStencilFunc","GreaterStencilFunc","IncrementStencilOp","IncrementWrapStencilOp","Int16Attribute","Int32Attribute","Int8Attribute","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","InvertStencilOp","JSONLoader","LensFlare","LessEqualStencilFunc","LessStencilFunc","LinePieces","LineStrip","LinearMipMapLinearFilter","LinearMipMapNearestFilter","LoopOnce","LoopPingPong","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","MeshFaceMaterial","MultiMaterial","NearestMipMapLinearFilter","NearestMipMapNearestFilter","NeverStencilFunc","NotEqualStencilFunc","Particle","ParticleBasicMaterial","ParticleSystem","ParticleSystemMaterial","PointCloudMaterial","REVISION","ReplaceStencilOp","SmoothShading","TOUCH","DOLLY_PAN","DOLLY_ROTATE","Uint16Attribute","Uint32Attribute","Uint8Attribute","Uint8ClampedAttribute","Vertex","WireframeHelper","WrapAroundEnding","XHRLoader","ZeroSlopeEnding","ZeroStencilOp","define","amd","self","quat","quatInverse","lastPosition","lastQuaternion","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","UP","BOTTOM","mouseButtons","touches","ONE","TWO","target0","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","saveState","changeEvent","STATE","NONE","rotateLeft","sphericalDelta","panOffset","zoomChanged","EPS","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","button","handleMouseDownDolly","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","handleKeyDown","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","MapControls","CANVAS_SKETCH_DEFAULT_STORAGE_KEY","location"],"mappings":"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","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// Ensure ThreeJS is in global scope for the 'examples/'\nglobal.THREE = require(\"three\");\n\n// Include any additional ThreeJS examples below\nrequire(\"three/examples/js/controls/OrbitControls\");\n\nconst canvasSketch = require(\"canvas-sketch\");\n\nconst settings = {\n  // Make the loop animated\n  animate: true,\n  // Get a WebGL canvas rather than 2D\n  context: \"webgl\",\n  // Turn on MSAA\n  attributes: { antialias: true }\n};\n\nconst sketch = ({ context }) => {\n  // Create a renderer\n  const renderer = new THREE.WebGLRenderer({\n    context\n  });\n\n  // WebGL background color\n  renderer.setClearColor(\"black\", 1);\n\n  // Setup a camera\n  const camera = new THREE.PerspectiveCamera(30, 1, 0.01, 1000);\n  camera.position.set(2, 100, -4);\n  camera.lookAt(new THREE.Vector3());\n\n  // Setup camera controller\n  const controls = new THREE.OrbitControls(camera, context.canvas);\n\n  // Setup your scene\n  const scene = new THREE.Scene();\n\n  for (let index = -500; index < 500; index++) {\n    const material = new THREE.LineBasicMaterial({\n      color: `hsl(${index * 10}, 100%, 100%)`\n    });\n    const geometry = new THREE.Geometry();\n    geometry.vertices.push(new THREE.Vector3(-10000, 0, index * 3));\n    geometry.vertices.push(new THREE.Vector3(10000, 0, index * 3));\n    const line = new THREE.Line(geometry, material);\n    scene.add(line);\n  }\n\n  // Specify an ambient/unlit colour\n  scene.add(new THREE.AmbientLight(\"#59314f\"));\n\n  // Add some light\n  const light = new THREE.PointLight(\"#45caf7\", 1, 15.5);\n  light.position.set(2, 2, -4).multiplyScalar(1.5);\n  scene.add(light);\n\n  // draw each frame\n  return {\n    // Handle resize events here\n    resize({ pixelRatio, viewportWidth, viewportHeight }) {\n      renderer.setPixelRatio(pixelRatio);\n      renderer.setSize(viewportWidth, viewportHeight);\n      camera.aspect = viewportWidth / viewportHeight;\n      camera.updateProjectionMatrix();\n    },\n    // Update & render your scene here\n    render({ time }) {\n      controls.update();\n      scene.rotation.x = time / 30;\n      // scene.rotation.z = time / 50;\n      renderer.render(scene, camera);\n    },\n    // Dispose of events & renderer for cleaner hot-reloading\n    unload() {\n      controls.dispose();\n      renderer.dispose();\n    }\n  };\n};\n\ncanvasSketch(sketch, settings);\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports =\n  global.performance &&\n  global.performance.now ? function now() {\n    return performance.now()\n  } : Date.now || function now() {\n    return +new Date\n  }\n","module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","module.exports = isNode\n\nfunction isNode (val) {\n  return (!val || typeof val !== 'object')\n    ? false\n    : (typeof window === 'object' && typeof window.Node === 'object')\n      ? (val instanceof window.Node)\n      : (typeof val.nodeType === 'number') &&\n        (typeof val.nodeName === 'string')\n}\n","// TODO: We can remove a huge chunk of bundle size by using a smaller\n// utility module for converting units.\nimport isDOM from 'is-dom';\n\nexport function getClientAPI () {\n  return typeof window !== 'undefined' && window['canvas-sketch-cli'];\n}\n\nexport function defined () {\n  for (let i = 0; i < arguments.length; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n  return undefined;\n}\n\nexport function isBrowser () {\n  return typeof document !== 'undefined';\n}\n\nexport function isWebGLContext (ctx) {\n  return typeof ctx.clear === 'function' && typeof ctx.clearColor === 'function' && typeof ctx.bufferData === 'function';\n}\n\nexport function isCanvas (element) {\n  return isDOM(element) && /canvas/i.test(element.nodeName) && typeof element.getContext === 'function';\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\n(function(global) {\n  'use strict';\n\n  var dateFormat = (function() {\n      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n      var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n      var timezoneClip = /[^-+\\dA-Z]/g;\n  \n      // Regexes and supporting functions are cached through closure\n      return function (date, mask, utc, gmt) {\n  \n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n          mask = date;\n          date = undefined;\n        }\n  \n        date = date || new Date;\n  \n        if(!(date instanceof Date)) {\n          date = new Date(date);\n        }\n  \n        if (isNaN(date)) {\n          throw TypeError('Invalid date');\n        }\n  \n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n  \n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n          mask = mask.slice(4);\n          utc = true;\n          if (maskSlice === 'GMT:') {\n            gmt = true;\n          }\n        }\n  \n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n          d:    d,\n          dd:   pad(d),\n          ddd:  dateFormat.i18n.dayNames[D],\n          dddd: dateFormat.i18n.dayNames[D + 7],\n          m:    m + 1,\n          mm:   pad(m + 1),\n          mmm:  dateFormat.i18n.monthNames[m],\n          mmmm: dateFormat.i18n.monthNames[m + 12],\n          yy:   String(y).slice(2),\n          yyyy: y,\n          h:    H % 12 || 12,\n          hh:   pad(H % 12 || 12),\n          H:    H,\n          HH:   pad(H),\n          M:    M,\n          MM:   pad(M),\n          s:    s,\n          ss:   pad(s),\n          l:    pad(L, 3),\n          L:    pad(Math.round(L / 10)),\n          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n          W:    W,\n          N:    N\n        };\n  \n        return mask.replace(token, function (match) {\n          if (match in flags) {\n            return flags[match];\n          }\n          return match.slice(1, match.length - 1);\n        });\n      };\n    })();\n\n  dateFormat.masks = {\n    'default':               'ddd mmm dd yyyy HH:MM:ss',\n    'shortDate':             'm/d/yy',\n    'mediumDate':            'mmm d, yyyy',\n    'longDate':              'mmmm d, yyyy',\n    'fullDate':              'dddd, mmmm d, yyyy',\n    'shortTime':             'h:MM TT',\n    'mediumTime':            'h:MM:ss TT',\n    'longTime':              'h:MM:ss TT Z',\n    'isoDate':               'yyyy-mm-dd',\n    'isoTime':               'HH:MM:ss',\n    'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\n    'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\n  };\n\n  // Internationalization strings\n  dateFormat.i18n = {\n    dayNames: [\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n    ],\n    monthNames: [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n    ],\n    timeNames: [\n      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'\n    ]\n  };\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) {\n    val = '0' + val;\n  }\n  return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n  // Remove time components of date\n  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n  // Change date to Thursday same week\n  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n  // Take January 4th as it is always in week 1 (see ISO 8601)\n  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n  // Change date to Thursday same week\n  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n  // Check if daylight-saving-time-switch occurred and correct for it\n  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n  targetThursday.setHours(targetThursday.getHours() - ds);\n\n  // Number of weeks between target Thursday and first Thursday\n  var weekDiff = (targetThursday - firstThursday) / (86400000*7);\n  return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n * \n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n  var dow = date.getDay();\n  if(dow === 0) {\n    dow = 7;\n  }\n  return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n  if (val === null) {\n    return 'null';\n  }\n\n  if (val === undefined) {\n    return 'undefined';\n  }\n\n  if (typeof val !== 'object') {\n    return typeof val;\n  }\n\n  if (Array.isArray(val)) {\n    return 'array';\n  }\n\n  return {}.toString.call(val)\n    .slice(8, -1).toLowerCase();\n};\n\n\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dateFormat;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = dateFormat;\n  } else {\n    global.dateFormat = dateFormat;\n  }\n})(this);\n","/*!\n * pad-left <https://github.com/jonschlinkert/pad-left>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar repeat = require('repeat-string');\n\nmodule.exports = function padLeft(str, num, ch) {\n  str = str.toString();\n\n  if (typeof num === 'undefined') {\n    return str;\n  }\n\n  if (ch === 0) {\n    ch = '0';\n  } else if (ch) {\n    ch = ch.toString();\n  } else {\n    ch = ' ';\n  }\n\n  return repeat(ch, num - str.length) + str;\n};\n","import dateformat from 'dateformat';\nimport assign from 'object-assign';\nimport padLeft from 'pad-left';\nimport { getClientAPI } from './util';\n\nconst noop = () => {};\nlet link;\nlet defaultExts = { extension: '', prefix: '', suffix: '' };\n\n// Alternative solution for saving files,\n// a bit slower and does not work in Safari\n// function fetchBlobFromDataURL (dataURL) {\n//   return window.fetch(dataURL).then(res => res.blob());\n// }\n\nconst supportedEncodings = [\n  'image/png',\n  'image/jpeg',\n  'image/webp'\n];\n\nfunction stream (isStart, opts = {}) {\n  return new Promise((resolve, reject) => {\n    opts = assign({}, defaultExts, opts);\n    const filename = resolveFilename(Object.assign({}, opts, {\n      extension: '',\n      frame: undefined\n    }));\n    const func = isStart ? 'streamStart' : 'streamEnd';\n    const client = getClientAPI();\n    if (client && client.output && typeof client[func] === 'function') {\n      return client[func](assign({}, opts, { filename }))\n        .then(ev => resolve(ev));\n    } else {\n      return resolve({ filename, client: false });\n    }\n  });\n}\n\nexport function streamStart (opts = {}) {\n  return stream(true, opts);\n}\n\nexport function streamEnd (opts = {}) {\n  return stream(false, opts);\n}\n\nexport function exportCanvas (canvas, opt = {}) {\n  const encoding = opt.encoding || 'image/png';\n  if (!supportedEncodings.includes(encoding)) throw new Error(`Invalid canvas encoding ${encoding}`);\n  let extension = (encoding.split('/')[1] || '').replace(/jpeg/i, 'jpg');\n  if (extension) extension = `.${extension}`.toLowerCase();\n  return {\n    extension,\n    type: encoding,\n    dataURL: canvas.toDataURL(encoding, opt.encodingQuality)\n  };\n}\n\nfunction createBlobFromDataURL (dataURL) {\n  return new Promise((resolve) => {\n    const splitIndex = dataURL.indexOf(',');\n    if (splitIndex === -1) {\n      resolve(new window.Blob());\n      return;\n    }\n    const base64 = dataURL.slice(splitIndex + 1);\n    const byteString = window.atob(base64);\n    const type = dataURL.slice(0, splitIndex);\n    const mimeMatch = /data:([^;]+)/.exec(type);\n    const mime = (mimeMatch ? mimeMatch[1] : '') || undefined;\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    resolve(new window.Blob([ ab ], { type: mime }));\n  });\n}\n\nexport function saveDataURL (dataURL, opts = {}) {\n  return createBlobFromDataURL(dataURL)\n    .then(blob => saveBlob(blob, opts));\n}\n\nexport function saveBlob (blob, opts = {}) {\n  return new Promise(resolve => {\n    opts = assign({}, defaultExts, opts);\n    const filename = opts.filename;\n\n    const client = getClientAPI();\n    if (client && typeof client.saveBlob === 'function' && client.output) {\n      // native saving using a CLI tool\n      return client.saveBlob(blob, assign({}, opts, { filename }))\n        .then(ev => resolve(ev));\n    } else {\n      // force download\n      if (!link) {\n        link = document.createElement('a');\n        link.style.visibility = 'hidden';\n        link.target = '_blank';\n      }\n      link.download = filename;\n      link.href = window.URL.createObjectURL(blob);\n      document.body.appendChild(link);\n      link.onclick = () => {\n        link.onclick = noop;\n        setTimeout(() => {\n          window.URL.revokeObjectURL(blob);\n          if (link.parentElement) link.parentElement.removeChild(link);\n          link.removeAttribute('href');\n          resolve({ filename, client: false });\n        });\n      };\n      link.click();\n    }\n  });\n}\n\nexport function saveFile (data, opts = {}) {\n  const parts = Array.isArray(data) ? data : [ data ];\n  const blob = new window.Blob(parts, { type: opts.type || '' });\n  return saveBlob(blob, opts);\n}\n\nexport function getTimeStamp () {\n  const dateFormatStr = `yyyy.mm.dd-HH.MM.ss`;\n  return dateformat(new Date(), dateFormatStr);\n}\n\nexport function getDefaultFile (prefix = '', suffix = '', ext) {\n  // const dateFormatStr = `yyyy.mm.dd-HH.MM.ss`;\n  const dateFormatStr = `yyyy-mm-dd 'at' h.MM.ss TT`;\n  return `${prefix}${dateformat(new Date(), dateFormatStr)}${suffix}${ext}`;\n}\n\nexport function resolveFilename (opt = {}) {\n  opt = assign({}, opt);\n\n  // Custom filename function\n  if (typeof opt.file === 'function') {\n    return opt.file(opt);\n  } else if (opt.file) {\n    return opt.file;\n  }\n\n  let frame = null;\n  let extension = '';\n  if (typeof opt.extension === 'string') extension = opt.extension;\n\n  if (typeof opt.frame === 'number') {\n    let totalFrames;\n    if (typeof opt.totalFrames === 'number') {\n      totalFrames = opt.totalFrames;\n    } else {\n      totalFrames = Math.max(1000, opt.frame);\n    }\n    frame = padLeft(String(opt.frame), String(totalFrames).length, '0');\n  }\n\n  const layerStr = isFinite(opt.totalLayers) && isFinite(opt.layer) && opt.totalLayers > 1 ? `${opt.layer}` : '';\n  if (frame != null) {\n    return [ layerStr, frame ].filter(Boolean).join('-') + extension;\n  } else {\n    const defaultFileName = opt.timeStamp;\n    return [ opt.prefix, opt.name || defaultFileName, layerStr, opt.hash, opt.suffix ].filter(Boolean).join('-') + extension;\n  }\n}\n","// Handle some common typos\nconst commonTypos = {\n  dimension: 'dimensions',\n  animated: 'animate',\n  animating: 'animate',\n  unit: 'units',\n  P5: 'p5',\n  pixellated: 'pixelated',\n  looping: 'loop',\n  pixelPerInch: 'pixels'\n};\n\n// Handle all other typos\nconst allKeys = [\n  'dimensions', 'units', 'pixelsPerInch', 'orientation',\n  'scaleToFit', 'scaleToView', 'bleed', 'pixelRatio',\n  'exportPixelRatio', 'maxPixelRatio', 'scaleContext',\n  'resizeCanvas', 'styleCanvas', 'canvas', 'context', 'attributes',\n  'parent', 'file', 'name', 'prefix', 'suffix', 'animate', 'playing',\n  'loop', 'duration', 'totalFrames', 'fps', 'playbackRate', 'timeScale',\n  'frame', 'time', 'flush', 'pixelated', 'hotkeys', 'p5', 'id',\n  'scaleToFitPadding', 'data', 'params', 'encoding', 'encodingQuality'\n];\n\n// This is fairly opinionated and forces users to use the 'data' parameter\n// if they want to pass along non-setting objects...\nexport const checkSettings = (settings) => {\n  const keys = Object.keys(settings);\n  keys.forEach(key => {\n    if (key in commonTypos) {\n      const actual = commonTypos[key];\n      console.warn(`[canvas-sketch] Could not recognize the setting \"${key}\", did you mean \"${actual}\"?`);\n    } else if (!allKeys.includes(key)) {\n      console.warn(`[canvas-sketch] Could not recognize the setting \"${key}\"`);\n    }\n  });\n};\n","const defaultUnits = 'mm';\n\nconst data = [\n  // Common Paper Sizes\n  // (Mostly North-American based)\n  [ 'postcard', 101.6, 152.4 ],\n  [ 'poster-small', 280, 430 ],\n  [ 'poster', 460, 610 ],\n  [ 'poster-large', 610, 910 ],\n  [ 'business-card', 50.8, 88.9 ],\n\n  // Photographic Print Paper Sizes\n  [ '2r', 64, 89 ],\n  [ '3r', 89, 127 ],\n  [ '4r', 102, 152 ],\n  [ '5r', 127, 178 ], // 5″x7″\n  [ '6r', 152, 203 ], // 6″x8″\n  [ '8r', 203, 254 ], // 8″x10″\n  [ '10r', 254, 305 ], // 10″x12″\n  [ '11r', 279, 356 ], // 11″x14″\n  [ '12r', 305, 381 ],\n\n  // Standard Paper Sizes\n  [ 'a0', 841, 1189 ],\n  [ 'a1', 594, 841 ],\n  [ 'a2', 420, 594 ],\n  [ 'a3', 297, 420 ],\n  [ 'a4', 210, 297 ],\n  [ 'a5', 148, 210 ],\n  [ 'a6', 105, 148 ],\n  [ 'a7', 74, 105 ],\n  [ 'a8', 52, 74 ],\n  [ 'a9', 37, 52 ],\n  [ 'a10', 26, 37 ],\n  [ '2a0', 1189, 1682 ],\n  [ '4a0', 1682, 2378 ],\n  [ 'b0', 1000, 1414 ],\n  [ 'b1', 707, 1000 ],\n  [ 'b1+', 720, 1020 ],\n  [ 'b2', 500, 707 ],\n  [ 'b2+', 520, 720 ],\n  [ 'b3', 353, 500 ],\n  [ 'b4', 250, 353 ],\n  [ 'b5', 176, 250 ],\n  [ 'b6', 125, 176 ],\n  [ 'b7', 88, 125 ],\n  [ 'b8', 62, 88 ],\n  [ 'b9', 44, 62 ],\n  [ 'b10', 31, 44 ],\n  [ 'b11', 22, 32 ],\n  [ 'b12', 16, 22 ],\n  [ 'c0', 917, 1297 ],\n  [ 'c1', 648, 917 ],\n  [ 'c2', 458, 648 ],\n  [ 'c3', 324, 458 ],\n  [ 'c4', 229, 324 ],\n  [ 'c5', 162, 229 ],\n  [ 'c6', 114, 162 ],\n  [ 'c7', 81, 114 ],\n  [ 'c8', 57, 81 ],\n  [ 'c9', 40, 57 ],\n  [ 'c10', 28, 40 ],\n  [ 'c11', 22, 32 ],\n  [ 'c12', 16, 22 ],\n\n  // Use inches for North American sizes,\n  // as it produces less float precision errors\n  [ 'half-letter', 5.5, 8.5, 'in' ],\n  [ 'letter', 8.5, 11, 'in' ],\n  [ 'legal', 8.5, 14, 'in' ],\n  [ 'junior-legal', 5, 8, 'in' ],\n  [ 'ledger', 11, 17, 'in' ],\n  [ 'tabloid', 11, 17, 'in' ],\n  [ 'ansi-a', 8.5, 11.0, 'in' ],\n  [ 'ansi-b', 11.0, 17.0, 'in' ],\n  [ 'ansi-c', 17.0, 22.0, 'in' ],\n  [ 'ansi-d', 22.0, 34.0, 'in' ],\n  [ 'ansi-e', 34.0, 44.0, 'in' ],\n  [ 'arch-a', 9, 12, 'in' ],\n  [ 'arch-b', 12, 18, 'in' ],\n  [ 'arch-c', 18, 24, 'in' ],\n  [ 'arch-d', 24, 36, 'in' ],\n  [ 'arch-e', 36, 48, 'in' ],\n  [ 'arch-e1', 30, 42, 'in' ],\n  [ 'arch-e2', 26, 38, 'in' ],\n  [ 'arch-e3', 27, 39, 'in' ]\n];\n\nexport default data.reduce((dict, preset) => {\n  const item = {\n    units: preset[3] || defaultUnits,\n    dimensions: [ preset[1], preset[2] ]\n  };\n  dict[preset[0]] = item;\n  dict[preset[0].replace(/-/g, ' ')] = item;\n  return dict;\n}, {});\n","import paperSizes from './paper-sizes';\nimport convertLength from 'convert-length';\n\nexport function getDimensionsFromPreset (dimensions, unitsTo = 'px', pixelsPerInch = 72) {\n  if (typeof dimensions === 'string') {\n    const key = dimensions.toLowerCase();\n    if (!(key in paperSizes)) {\n      throw new Error(`The dimension preset \"${dimensions}\" is not supported or could not be found; try using a4, a3, postcard, letter, etc.`)\n    }\n    const preset = paperSizes[key];\n    return preset.dimensions.map(d => {\n      return convertDistance(d, preset.units, unitsTo, pixelsPerInch);\n    });\n  } else {\n    return dimensions;\n  }\n}\n\nexport function convertDistance (dimension, unitsFrom = 'px', unitsTo = 'px', pixelsPerInch = 72) {\n  return convertLength(dimension, unitsFrom, unitsTo, {\n    pixelsPerInch,\n    precision: 4,\n    roundPixel: true\n  });\n}\n","import { getDimensionsFromPreset, convertDistance } from '../distances';\nimport { isBrowser, defined } from '../util';\n\nfunction checkIfHasDimensions (settings) {\n  if (!settings.dimensions) return false;\n  if (typeof settings.dimensions === 'string') return true;\n  if (Array.isArray(settings.dimensions) && settings.dimensions.length >= 2) return true;\n  return false;\n}\n\nfunction getParentSize (props, settings) {\n  // When no { dimension } is passed in node, we default to HTML canvas size\n  if (!isBrowser()) {\n    return [ 300, 150 ];\n  }\n\n  let element = settings.parent || window;\n\n  if (element === window ||\n      element === document ||\n      element === document.body) {\n    return [ window.innerWidth, window.innerHeight ];\n  } else {\n    const { width, height } = element.getBoundingClientRect();\n    return [ width, height ];\n  }\n}\n\nexport default function resizeCanvas (props, settings) {\n  let width, height;\n  let styleWidth, styleHeight;\n  let canvasWidth, canvasHeight;\n\n  const browser = isBrowser();\n  const dimensions = settings.dimensions;\n  const hasDimensions = checkIfHasDimensions(settings);\n  const exporting = props.exporting;\n  let scaleToFit = hasDimensions ? settings.scaleToFit !== false : false;\n  let scaleToView = (!exporting && hasDimensions) ? settings.scaleToView : true;\n  // in node, cancel both of these options\n  if (!browser) scaleToFit = scaleToView = false;\n  const units = settings.units;\n  const pixelsPerInch = (typeof settings.pixelsPerInch === 'number' && isFinite(settings.pixelsPerInch)) ? settings.pixelsPerInch : 72;\n  const bleed = defined(settings.bleed, 0);\n\n  const devicePixelRatio = browser ? window.devicePixelRatio : 1;\n  const basePixelRatio = scaleToView ? devicePixelRatio : 1;\n\n  let pixelRatio, exportPixelRatio;\n\n  // If a pixel ratio is specified, we will use it.\n  // Otherwise:\n  //  -> If dimension is specified, use base ratio (i.e. size for export)\n  //  -> If no dimension is specified, use device ratio (i.e. size for screen)\n  if (typeof settings.pixelRatio === 'number' && isFinite(settings.pixelRatio)) {\n    // When { pixelRatio } is specified, it's also used as default exportPixelRatio.\n    pixelRatio = settings.pixelRatio;\n    exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);\n  } else {\n    if (hasDimensions) {\n      // When a dimension is specified, use the base ratio rather than screen ratio\n      pixelRatio = basePixelRatio;\n      // Default to a pixel ratio of 1 so that you end up with the same dimension\n      // you specified, i.e. [ 500, 500 ] is exported as 500x500 px\n      exportPixelRatio = defined(settings.exportPixelRatio, 1);\n    } else {\n      // No dimension is specified, assume full-screen retina sizing\n      pixelRatio = devicePixelRatio;\n      // Default to screen pixel ratio, so that it's like taking a device screenshot\n      exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);\n    }\n  }\n\n  // Clamp pixel ratio\n  if (typeof settings.maxPixelRatio === 'number' && isFinite(settings.maxPixelRatio)) {\n    pixelRatio = Math.min(settings.maxPixelRatio, pixelRatio);\n  }\n\n  // Handle export pixel ratio\n  if (exporting) {\n    pixelRatio = exportPixelRatio;\n  }\n\n  // parentWidth = typeof parentWidth === 'undefined' ? defaultNodeSize[0] : parentWidth;\n  // parentHeight = typeof parentHeight === 'undefined' ? defaultNodeSize[1] : parentHeight;\n\n  let [ parentWidth, parentHeight ] = getParentSize(props, settings);\n  let trimWidth, trimHeight;\n\n  // You can specify a dimensions in pixels or cm/m/in/etc\n  if (hasDimensions) {\n    const result = getDimensionsFromPreset(dimensions, units, pixelsPerInch);\n    const highest = Math.max(result[0], result[1]);\n    const lowest = Math.min(result[0], result[1]);\n    if (settings.orientation) {\n      const landscape = settings.orientation === 'landscape';\n      width = landscape ? highest : lowest;\n      height = landscape ? lowest : highest;\n    } else {\n      width = result[0];\n      height = result[1];\n    }\n\n    trimWidth = width;\n    trimHeight = height;\n\n    // Apply bleed which is assumed to be in the same units\n    width += bleed * 2;\n    height += bleed * 2;\n  } else {\n    width = parentWidth;\n    height = parentHeight;\n    trimWidth = width;\n    trimHeight = height;\n  }\n\n  // Real size in pixels after PPI is taken into account\n  let realWidth = width;\n  let realHeight = height;\n  if (hasDimensions && units) {\n    // Convert to digital/pixel units if necessary\n    realWidth = convertDistance(width, units, 'px', pixelsPerInch);\n    realHeight = convertDistance(height, units, 'px', pixelsPerInch);\n  }\n\n  // How big to set the 'view' of the canvas in the browser (i.e. style)\n  styleWidth = Math.round(realWidth);\n  styleHeight = Math.round(realHeight);\n\n  // If we wish to scale the view to the browser window\n  if (scaleToFit && !exporting && hasDimensions) {\n    const aspect = width / height;\n    const windowAspect = parentWidth / parentHeight;\n    const scaleToFitPadding = defined(settings.scaleToFitPadding, 40);\n    const maxWidth = Math.round(parentWidth - scaleToFitPadding * 2);\n    const maxHeight = Math.round(parentHeight - scaleToFitPadding * 2);\n    if (styleWidth > maxWidth || styleHeight > maxHeight) {\n      if (windowAspect > aspect) {\n        styleHeight = maxHeight;\n        styleWidth = Math.round(styleHeight * aspect);\n      } else {\n        styleWidth = maxWidth;\n        styleHeight = Math.round(styleWidth / aspect);\n      }\n    }\n  }\n\n  canvasWidth = scaleToView ? Math.round(pixelRatio * styleWidth) : Math.round(pixelRatio * realWidth);\n  canvasHeight = scaleToView ? Math.round(pixelRatio * styleHeight) : Math.round(pixelRatio * realHeight);\n\n  const viewportWidth = scaleToView ? Math.round(styleWidth) : Math.round(realWidth);\n  const viewportHeight = scaleToView ? Math.round(styleHeight) : Math.round(realHeight);\n\n  const scaleX = canvasWidth / width;\n  const scaleY = canvasHeight / height;\n\n  // Assign to current props\n  return {\n    bleed,\n    pixelRatio,\n    width,\n    height,\n    dimensions: [ width, height ],\n    units: units || 'px',\n    scaleX,\n    scaleY,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    trimWidth,\n    trimHeight,\n    styleWidth,\n    styleHeight\n  };\n}\n","module.exports = getCanvasContext\nfunction getCanvasContext (type, opts) {\n  if (typeof type !== 'string') {\n    throw new TypeError('must specify type string')\n  }\n\n  opts = opts || {}\n\n  if (typeof document === 'undefined' && !opts.canvas) {\n    return null // check for Node\n  }\n\n  var canvas = opts.canvas || document.createElement('canvas')\n  if (typeof opts.width === 'number') {\n    canvas.width = opts.width\n  }\n  if (typeof opts.height === 'number') {\n    canvas.height = opts.height\n  }\n\n  var attribs = opts\n  var gl\n  try {\n    var names = [ type ]\n    // prefix GL contexts\n    if (type.indexOf('webgl') === 0) {\n      names.push('experimental-' + type)\n    }\n\n    for (var i = 0; i < names.length; i++) {\n      gl = canvas.getContext(names[i], attribs)\n      if (gl) return gl\n    }\n  } catch (e) {\n    gl = null\n  }\n  return (gl || null) // ensure null on fail\n}\n","import assign from 'object-assign';\nimport getCanvasContext from 'get-canvas-context';\nimport { isBrowser } from '../util';\n\nfunction createCanvasElement () {\n  if (!isBrowser()) {\n    throw new Error('It appears you are runing from Node.js or a non-browser environment. Try passing in an existing { canvas } interface instead.');\n  }\n  return document.createElement('canvas');\n}\n\nexport default function createCanvas (settings = {}) {\n  let context, canvas;\n  let ownsCanvas = false;\n  if (settings.canvas !== false) {\n    // Determine the canvas and context to create\n    context = settings.context;\n    if (!context || typeof context === 'string') {\n      let newCanvas = settings.canvas;\n      if (!newCanvas) {\n        newCanvas = createCanvasElement();\n        ownsCanvas = true;\n      }\n      const type = context || '2d';\n      if (typeof newCanvas.getContext !== 'function') {\n        throw new Error(`The specified { canvas } element does not have a getContext() function, maybe it is not a <canvas> tag?`);\n      }\n      context = getCanvasContext(type, assign({}, settings.attributes, { canvas: newCanvas }));\n      if (!context) {\n        throw new Error(`Failed at canvas.getContext('${type}') - the browser may not support this context, or a different context may already be in use with this canvas.`);\n      }\n    }\n\n    canvas = context.canvas;\n    // Ensure context matches user's canvas expectations\n    if (settings.canvas && canvas !== settings.canvas) {\n      throw new Error('The { canvas } and { context } settings must point to the same underlying canvas element');\n    }\n\n    // Apply pixelation to canvas if necessary, this is mostly a convenience utility\n    if (settings.pixelated) {\n      context.imageSmoothingEnabled = false;\n      context.mozImageSmoothingEnabled = false;\n      context.oImageSmoothingEnabled = false;\n      context.webkitImageSmoothingEnabled = false;\n      context.msImageSmoothingEnabled = false;\n      canvas.style['image-rendering'] = 'pixelated';\n    }\n  }\n  return { canvas, context, ownsCanvas };\n}\n","import assign from 'object-assign';\nimport rightNow from 'right-now';\nimport isPromise from 'is-promise';\nimport { isBrowser, defined, isWebGLContext, isCanvas, getClientAPI } from '../util';\nimport deepEqual from 'deep-equal';\nimport {\n  resolveFilename,\n  saveFile,\n  saveDataURL,\n  getTimeStamp,\n  exportCanvas,\n  streamStart,\n  streamEnd\n} from '../save';\nimport { checkSettings } from '../accessibility';\n\nimport keyboardShortcuts from './keyboardShortcuts';\nimport resizeCanvas from './resizeCanvas';\nimport createCanvas from './createCanvas';\n\nclass SketchManager {\n  constructor () {\n    this._settings = {};\n    this._props = {};\n    this._sketch = undefined;\n    this._raf = null;\n\n    // Some hacky things required to get around p5.js structure\n    this._lastRedrawResult = undefined;\n    this._isP5Resizing = false;\n\n    this._keyboardShortcuts = keyboardShortcuts({\n      enabled: () => this.settings.hotkeys !== false,\n      save: (ev) => {\n        if (ev.shiftKey) {\n          if (this.props.recording) {\n            this.endRecord();\n            this.run();\n          } else this.record();\n        } else if (!this.props.recording) {\n          this.exportFrame();\n        }\n      },\n      togglePlay: () => {\n        if (this.props.playing) this.pause();\n        else this.play();\n      },\n      commit: (ev) => {\n        this.exportFrame({ commit: true });\n      }\n    });\n\n    this._animateHandler = () => this.animate();\n\n    this._resizeHandler = () => {\n      const changed = this.resize();\n      // Only re-render when size actually changes\n      if (changed) {\n        this.render();\n      }\n    };\n  }\n\n  get sketch () {\n    return this._sketch;\n  }\n\n  get settings () {\n    return this._settings;\n  }\n\n  get props () {\n    return this._props;\n  }\n\n  _computePlayhead (currentTime, duration) {\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n    return hasDuration ? currentTime / duration : 0;\n  }\n\n  _computeFrame (playhead, time, totalFrames, fps) {\n    return (isFinite(totalFrames) && totalFrames > 1)\n      ? Math.floor(playhead * (totalFrames - 1))\n      : Math.floor(fps * time);\n  }\n\n  _computeCurrentFrame () {\n    return this._computeFrame(\n      this.props.playhead, this.props.time,\n      this.props.totalFrames, this.props.fps\n    );\n  }\n\n  _getSizeProps () {\n    const props = this.props;\n    return {\n      width: props.width,\n      height: props.height,\n      pixelRatio: props.pixelRatio,\n      canvasWidth: props.canvasWidth,\n      canvasHeight: props.canvasHeight,\n      viewportWidth: props.viewportWidth,\n      viewportHeight: props.viewportHeight\n    };\n  }\n\n  run () {\n    if (!this.sketch) throw new Error('should wait until sketch is loaded before trying to play()');\n\n    // Start an animation frame loop if necessary\n    if (this.settings.playing !== false) {\n      this.play();\n    }\n\n    // Let's let this warning hang around for a few versions...\n    if (typeof this.sketch.dispose === 'function') {\n      console.warn('In canvas-sketch@0.0.23 the dispose() event has been renamed to unload()');\n    }\n\n    // In case we aren't playing or animated, make sure we still trigger begin message...\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // Render an initial frame\n    this.tick();\n    this.render();\n    return this;\n  }\n\n  play () {\n    let animate = this.settings.animate;\n    if ('animation' in this.settings) {\n      animate = true;\n      console.warn('[canvas-sketch] { animation } has been renamed to { animate }');\n    }\n    if (!animate) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Using { animate } in Node.js is not yet supported');\n      return;\n    }\n    if (this.props.playing) return;\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // console.log('play', this.props.time)\n\n    // Start a render loop\n    this.props.playing = true;\n    if (this._raf != null) window.cancelAnimationFrame(this._raf);\n    this._lastTime = rightNow();\n    this._raf = window.requestAnimationFrame(this._animateHandler);\n  }\n\n  pause () {\n    if (this.props.recording) this.endRecord();\n    this.props.playing = false;\n\n    if (this._raf != null && isBrowser()) {\n      window.cancelAnimationFrame(this._raf);\n    }\n  }\n\n  togglePlay () {\n    if (this.props.playing) this.pause();\n    else this.play();\n  }\n\n  // Stop and reset to frame zero\n  stop () {\n    this.pause();\n    this.props.frame = 0;\n    this.props.playhead = 0;\n    this.props.time = 0;\n    this.props.deltaTime = 0;\n    this.props.started = false;\n    this.render();\n  }\n\n  record () {\n    if (this.props.recording) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Recording from Node.js is not yet supported');\n      return;\n    }\n\n    this.stop();\n    this.props.playing = true;\n    this.props.recording = true;\n\n    const exportOpts = this._createExportOptions({ sequence: true });\n\n    const frameInterval = 1 / this.props.fps;\n    // Render each frame in the sequence\n    if (this._raf != null) window.cancelAnimationFrame(this._raf);\n    const tick = () => {\n      if (!this.props.recording) return Promise.resolve();\n      this.props.deltaTime = frameInterval;\n      this.tick();\n      return this.exportFrame(exportOpts)\n        .then(() => {\n          if (!this.props.recording) return; // was cancelled before\n          this.props.deltaTime = 0;\n          this.props.frame++;\n          if (this.props.frame < this.props.totalFrames) {\n            this.props.time += frameInterval;\n            this.props.playhead = this._computePlayhead(this.props.time, this.props.duration);\n            this._raf = window.requestAnimationFrame(tick);\n          } else {\n            console.log('Finished recording');\n            this._signalEnd();\n            this.endRecord();\n            this.stop();\n            this.run();\n          }\n        });\n    };\n\n    // Trigger a start event before we begin recording\n    if (!this.props.started) {\n      this._signalBegin();\n      this.props.started = true;\n    }\n\n    // Trigger 'begin record' event\n    if (this.sketch && typeof this.sketch.beginRecord === 'function') {\n      this._wrapContextScale(props => this.sketch.beginRecord(props));\n    }\n\n    // Initiate a streaming start if necessary\n    streamStart(exportOpts)\n      .catch(err => {\n        console.error(err);\n      })\n      .then(response => {\n        this._raf = window.requestAnimationFrame(tick);\n      });\n  }\n\n  _signalBegin () {\n    if (this.sketch && typeof this.sketch.begin === 'function') {\n      this._wrapContextScale(props => this.sketch.begin(props));\n    }\n  }\n\n  _signalEnd () {\n    if (this.sketch && typeof this.sketch.end === 'function') {\n      this._wrapContextScale(props => this.sketch.end(props));\n    }\n  }\n\n  endRecord () {\n    const wasRecording = this.props.recording;\n\n    if (this._raf != null && isBrowser()) window.cancelAnimationFrame(this._raf);\n    this.props.recording = false;\n    this.props.deltaTime = 0;\n    this.props.playing = false;\n\n    // Trigger 'end record' event\n    if (wasRecording && this.sketch && typeof this.sketch.endRecord === 'function') {\n      this._wrapContextScale(props => this.sketch.endRecord(props));\n    }\n\n    // tell CLI that stream has finished\n    streamEnd()\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  _createExportOptions (opt = {}) {\n    return {\n      sequence: opt.sequence,\n      save: opt.save,\n      fps: this.props.fps,\n      frame: opt.sequence ? this.props.frame : undefined,\n      file: this.settings.file,\n      name: this.settings.name,\n      prefix: this.settings.prefix,\n      suffix: this.settings.suffix,\n      encoding: this.settings.encoding,\n      encodingQuality: this.settings.encodingQuality,\n      timeStamp: opt.timeStamp || getTimeStamp(),\n      totalFrames: isFinite(this.props.totalFrames) ? Math.max(100, this.props.totalFrames) : 1000\n    };\n  }\n\n  exportFrame (opt = {}) {\n    if (!this.sketch) return Promise.all([]);\n    if (typeof this.sketch.preExport === 'function') {\n      this.sketch.preExport();\n    }\n\n    // Options for export function\n    let exportOpts = this._createExportOptions(opt);\n\n    const client = getClientAPI();\n    let p = Promise.resolve();\n    if (client && opt.commit && typeof client.commit === 'function') {\n      const commitOpts = assign({}, exportOpts);\n      const hash = client.commit(commitOpts);\n      if (isPromise(hash)) p = hash;\n      else p = Promise.resolve(hash);\n    }\n\n    return p.then(hash => {\n      return this._doExportFrame(assign({}, exportOpts, { hash: hash || '' }));\n    }).then(result => {\n      // Most common usecase is to export a single layer,\n      // so let's optimize the user experience for that.\n      if (result.length === 1) return result[0];\n      else return result;\n    });\n  }\n\n  _doExportFrame (exportOpts = {}) {\n    this._props.exporting = true;\n\n    // Resize to output resolution\n    this.resize();\n\n    // Draw at this output resolution\n    let drawResult = this.render();\n\n    // The self owned canvas (may be undefined...!)\n    const canvas = this.props.canvas;\n\n    // Get list of results from render\n    if (typeof drawResult === 'undefined') {\n      drawResult = [ canvas ];\n    }\n    drawResult = [].concat(drawResult).filter(Boolean);\n\n    // Transform the canvas/file descriptors into a consistent format,\n    // and pull out any data URLs from canvas elements\n    drawResult = drawResult.map(result => {\n      const hasDataObject = typeof result === 'object' && result && ('data' in result || 'dataURL' in result);\n      const data = hasDataObject ? result.data : result;\n      const opts = hasDataObject ? assign({}, result, { data }) : { data };\n      if (isCanvas(data)) {\n        const encoding = opts.encoding || exportOpts.encoding;\n        const encodingQuality = defined(opts.encodingQuality, exportOpts.encodingQuality, 0.95);\n        const { dataURL, extension, type } = exportCanvas(data, { encoding, encodingQuality });\n        return Object.assign(opts, { dataURL, extension, type });\n      } else {\n        return opts;\n      }\n    });\n\n    // Now return to regular rendering mode\n    this._props.exporting = false;\n    this.resize();\n    this.render();\n\n    // And now we can save each result\n    return Promise.all(drawResult.map((result, i, layerList) => {\n      // By default, if rendering multiple layers we will give them indices\n      const curOpt = assign({\n        extension: '',\n        prefix: '',\n        suffix: ''\n      }, exportOpts, result, {\n        layer: i,\n        totalLayers: layerList.length\n      });\n\n      // If export is explicitly not saving, make sure nothing saves\n      // Otherwise default to the layer save option, or fallback to true\n      const saveParam = exportOpts.save === false ? false : result.save;\n      curOpt.save = saveParam !== false;\n\n      // Resolve a full filename from all the options\n      curOpt.filename = resolveFilename(curOpt);\n\n      // Clean up some parameters that may be ambiguous to the user\n      delete curOpt.encoding;\n      delete curOpt.encodingQuality;\n\n      // Clean it up further by just removing undefined values\n      for (let k in curOpt) {\n        if (typeof curOpt[k] === 'undefined') delete curOpt[k];\n      }\n\n      let savePromise = Promise.resolve({});\n      if (curOpt.save) {\n        // Whether to actually save (download) this fragment\n        const data = curOpt.data;\n        if (curOpt.dataURL) {\n          const dataURL = curOpt.dataURL;\n          savePromise = saveDataURL(dataURL, curOpt);\n        } else {\n          savePromise = saveFile(data, curOpt);\n        }\n      }\n      return savePromise.then(saveResult => {\n        return Object.assign({}, curOpt, saveResult);\n      });\n    })).then(ev => {\n      const savedEvents = ev.filter(e => e.save);\n      if (savedEvents.length > 0) {\n        // Log the saved exports\n        const eventWithOutput = savedEvents.find(e => e.outputName);\n        const isClient = savedEvents.some(e => e.client);\n        const isStreaming = savedEvents.some(e => e.stream);\n        let item;\n        // many files, just log how many were exported\n        if (savedEvents.length > 1) item = savedEvents.length;\n        // in CLI, we know exact path dirname\n        else if (eventWithOutput) item = `${eventWithOutput.outputName}/${savedEvents[0].filename}`;\n        // in browser, we can only know it went to \"browser download folder\"\n        else item = `${savedEvents[0].filename}`;\n        let ofSeq = '';\n        if (exportOpts.sequence) {\n          const hasTotalFrames = isFinite(this.props.totalFrames);\n          ofSeq = hasTotalFrames ? ` (frame ${exportOpts.frame + 1} / ${this.props.totalFrames})` : ` (frame ${exportOpts.frame})`;\n        } else if (savedEvents.length > 1) {\n          ofSeq = ` files`;\n        }\n        const client = isClient ? 'canvas-sketch-cli' : 'canvas-sketch';\n        const action = isStreaming ? 'Streaming into' : 'Exported';\n        console.log(`%c[${client}]%c ${action} %c${item}%c${ofSeq}`, 'color: #8e8e8e;', 'color: initial;', 'font-weight: bold;', 'font-weight: initial;');\n      }\n      if (typeof this.sketch.postExport === 'function') {\n        this.sketch.postExport();\n      }\n      return ev;\n    });\n  }\n\n  _wrapContextScale (cb) {\n    this._preRender();\n    cb(this.props);\n    this._postRender();\n  }\n\n  _preRender () {\n    const props = this.props;\n\n    // Scale context for unit sizing\n    if (!this.props.gl && props.context && !props.p5) {\n      props.context.save();\n      if (this.settings.scaleContext !== false) {\n        props.context.scale(props.scaleX, props.scaleY);\n      }\n    } else if (props.p5) {\n      props.p5.scale(props.scaleX / props.pixelRatio, props.scaleY / props.pixelRatio);\n    }\n  }\n\n  _postRender () {\n    const props = this.props;\n\n    if (!this.props.gl && props.context && !props.p5) {\n      props.context.restore();\n    }\n\n    // Flush by default, this may be revisited at a later point.\n    // We do this to ensure toDataURL can be called immediately after.\n    // Most likely browsers already handle this, so we may revisit this and\n    // remove it if it improves performance without any usability issues.\n    if (props.gl && this.settings.flush !== false && !props.p5) {\n      props.gl.flush();\n    }\n  }\n\n  tick () {\n    if (this.sketch && typeof this.sketch.tick === 'function') {\n      this._preRender();\n      this.sketch.tick(this.props);\n      this._postRender();\n    }\n  }\n\n  render () {\n    if (this.props.p5) {\n      this._lastRedrawResult = undefined;\n      this.props.p5.redraw();\n      return this._lastRedrawResult;\n    } else {\n      return this.submitDrawCall();\n    }\n  }\n\n  submitDrawCall () {\n    if (!this.sketch) return;\n\n    const props = this.props;\n    this._preRender();\n\n    let drawResult;\n\n    if (typeof this.sketch === 'function') {\n      drawResult = this.sketch(props);\n    } else if (typeof this.sketch.render === 'function') {\n      drawResult = this.sketch.render(props);\n    }\n\n    this._postRender();\n\n    return drawResult;\n  }\n\n  update (opt = {}) {\n    // Currently update() is only focused on resizing,\n    // but later we will support other options like switching\n    // frames and such.\n    const notYetSupported = [\n      'animate'\n    ];\n\n    Object.keys(opt).forEach(key => {\n      if (notYetSupported.indexOf(key) >= 0) {\n        throw new Error(`Sorry, the { ${key} } option is not yet supported with update().`);\n      }\n    });\n\n    const oldCanvas = this._settings.canvas;\n    const oldContext = this._settings.context;\n\n    // Merge new options into settings\n    for (let key in opt) {\n      const value = opt[key];\n      if (typeof value !== 'undefined') { // ignore undefined\n        this._settings[key] = value;\n      }\n    }\n\n    // Merge in time props\n    const timeOpts = Object.assign({}, this._settings, opt);\n    if ('time' in opt && 'frame' in opt) throw new Error('You should specify { time } or { frame } but not both');\n    else if ('time' in opt) delete timeOpts.frame;\n    else if ('frame' in opt) delete timeOpts.time;\n    if ('duration' in opt && 'totalFrames' in opt) throw new Error('You should specify { duration } or { totalFrames } but not both');\n    else if ('duration' in opt) delete timeOpts.totalFrames;\n    else if ('totalFrames' in opt) delete timeOpts.duration;\n\n    // Merge in user data without copying\n    if ('data' in opt) this._props.data = opt.data;\n\n    const timeProps = this.getTimeProps(timeOpts);\n    Object.assign(this._props, timeProps);\n\n    // If either canvas or context is changed, we should re-update\n    if (oldCanvas !== this._settings.canvas || oldContext !== this._settings.context) {\n      const { canvas, context } = createCanvas(this._settings);\n\n      this.props.canvas = canvas;\n      this.props.context = context;\n\n      // Delete or add a 'gl' prop for convenience\n      this._setupGLKey();\n\n      // Re-mount the new canvas if it has no parent\n      this._appendCanvasIfNeeded();\n    }\n\n    // Special case to support P5.js\n    if (opt.p5 && typeof opt.p5 !== 'function') {\n      this.props.p5 = opt.p5;\n      this.props.p5.draw = () => {\n        if (this._isP5Resizing) return;\n        this._lastRedrawResult = this.submitDrawCall();\n      };\n    }\n\n    // Update playing state if necessary\n    if ('playing' in opt) {\n      if (opt.playing) this.play();\n      else this.pause();\n    }\n\n    checkSettings(this._settings);\n\n    // Draw new frame\n    this.resize();\n    this.render();\n    return this.props;\n  }\n\n  resize () {\n    const oldSizes = this._getSizeProps();\n\n    const settings = this.settings;\n    const props = this.props;\n\n    // Recompute new properties based on current setup\n    const newProps = resizeCanvas(props, settings);\n\n    // Assign to current props\n    Object.assign(this._props, newProps);\n\n    // Now we actually update the canvas width/height and style props\n    const {\n      pixelRatio,\n      canvasWidth,\n      canvasHeight,\n      styleWidth,\n      styleHeight\n    } = this.props;\n\n    // Update canvas settings\n    const canvas = this.props.canvas;\n    if (canvas && settings.resizeCanvas !== false) {\n      if (props.p5) {\n        // P5.js specific edge case\n        if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n          this._isP5Resizing = true;\n          // This causes a re-draw :\\ so we ignore draws in the mean time... sorta hacky\n          props.p5.pixelDensity(pixelRatio);\n          props.p5.resizeCanvas(canvasWidth / pixelRatio, canvasHeight / pixelRatio, false);\n          this._isP5Resizing = false;\n        }\n      } else {\n        // Force canvas size\n        if (canvas.width !== canvasWidth) canvas.width = canvasWidth;\n        if (canvas.height !== canvasHeight) canvas.height = canvasHeight;\n      }\n      // Update canvas style\n      if (isBrowser() && settings.styleCanvas !== false) {\n        canvas.style.width = `${styleWidth}px`;\n        canvas.style.height = `${styleHeight}px`;\n      }\n    }\n\n    const newSizes = this._getSizeProps();\n    let changed = !deepEqual(oldSizes, newSizes);\n    if (changed) {\n      this._sizeChanged();\n    }\n    return changed;\n  }\n\n  _sizeChanged () {\n    // Send resize event to sketch\n    if (this.sketch && typeof this.sketch.resize === 'function') {\n      this.sketch.resize(this.props);\n    }\n  }\n\n  animate () {\n    if (!this.props.playing) return;\n    if (!isBrowser()) {\n      console.error('[canvas-sketch] WARN: Animation in Node.js is not yet supported');\n      return;\n    }\n    this._raf = window.requestAnimationFrame(this._animateHandler);\n\n    let now = rightNow();\n\n    const fps = this.props.fps;\n    const frameIntervalMS = 1000 / fps;\n    let deltaTimeMS = now - this._lastTime;\n\n    const duration = this.props.duration;\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n\n    let isNewFrame = true;\n    const playbackRate = this.settings.playbackRate;\n    if (playbackRate === 'fixed') {\n      deltaTimeMS = frameIntervalMS;\n    } else if (playbackRate === 'throttle') {\n      if (deltaTimeMS > frameIntervalMS) {\n        now = now - (deltaTimeMS % frameIntervalMS);\n        this._lastTime = now;\n      } else {\n        isNewFrame = false;\n      }\n    } else {\n      this._lastTime = now;\n    }\n\n    const deltaTime = deltaTimeMS / 1000;\n    let newTime = this.props.time + deltaTime * this.props.timeScale;\n\n    // Handle reverse time scale\n    if (newTime < 0 && hasDuration) {\n      newTime = duration + newTime;\n    }\n\n    // Re-start animation\n    let isFinished = false;\n    let isLoopStart = false;\n\n    const looping = this.settings.loop !== false;\n\n    if (hasDuration && newTime >= duration) {\n      // Re-start animation\n      if (looping) {\n        isNewFrame = true;\n        newTime = newTime % duration;\n        isLoopStart = true;\n      } else {\n        isNewFrame = false;\n        newTime = duration;\n        isFinished = true;\n      }\n\n      this._signalEnd();\n    }\n\n    if (isNewFrame) {\n      this.props.deltaTime = deltaTime;\n      this.props.time = newTime;\n      this.props.playhead = this._computePlayhead(newTime, duration);\n      const lastFrame = this.props.frame;\n      this.props.frame = this._computeCurrentFrame();\n      if (isLoopStart) this._signalBegin();\n      if (lastFrame !== this.props.frame) this.tick();\n      this.render();\n      this.props.deltaTime = 0;\n    }\n\n    if (isFinished) {\n      this.pause();\n    }\n  }\n\n  dispatch (cb) {\n    if (typeof cb !== 'function') throw new Error('must pass function into dispatch()');\n    cb(this.props);\n    this.render();\n  }\n\n  mount () {\n    this._appendCanvasIfNeeded();\n  }\n\n  unmount () {\n    if (isBrowser()) {\n      window.removeEventListener('resize', this._resizeHandler);\n      this._keyboardShortcuts.detach();\n    }\n    if (this.props.canvas.parentElement) {\n      this.props.canvas.parentElement.removeChild(this.props.canvas);\n    }\n  }\n\n  _appendCanvasIfNeeded () {\n    if (!isBrowser()) return;\n    if (this.settings.parent !== false && (this.props.canvas && !this.props.canvas.parentElement)) {\n      const defaultParent = this.settings.parent || document.body;\n      defaultParent.appendChild(this.props.canvas);\n    }\n  }\n\n  _setupGLKey () {\n    if (this.props.context) {\n      if (isWebGLContext(this.props.context)) {\n        this._props.gl = this.props.context;\n      } else {\n        delete this._props.gl;\n      }\n    }\n  }\n\n  getTimeProps (settings = {}) {\n    // Get timing data\n    let duration = settings.duration;\n    let totalFrames = settings.totalFrames;\n    const timeScale = defined(settings.timeScale, 1);\n    const fps = defined(settings.fps, 24);\n    const hasDuration = typeof duration === 'number' && isFinite(duration);\n    const hasTotalFrames = typeof totalFrames === 'number' && isFinite(totalFrames);\n\n    const totalFramesFromDuration = hasDuration ? Math.floor(fps * duration) : undefined;\n    const durationFromTotalFrames = hasTotalFrames ? (totalFrames / fps) : undefined;\n    if (hasDuration && hasTotalFrames && totalFramesFromDuration !== totalFrames) {\n      throw new Error('You should specify either duration or totalFrames, but not both. Or, they must match exactly.');\n    }\n\n    if (typeof settings.dimensions === 'undefined' && typeof settings.units !== 'undefined') {\n      console.warn(`You've specified a { units } setting but no { dimension }, so the units will be ignored.`);\n    }\n\n    totalFrames = defined(totalFrames, totalFramesFromDuration, Infinity);\n    duration = defined(duration, durationFromTotalFrames, Infinity);\n\n    const startTime = settings.time;\n    const startFrame = settings.frame;\n    const hasStartTime = typeof startTime === 'number' && isFinite(startTime);\n    const hasStartFrame = typeof startFrame === 'number' && isFinite(startFrame);\n\n    // start at zero unless user specifies frame or time (but not both mismatched)\n    let time = 0;\n    let frame = 0;\n    let playhead = 0;\n    if (hasStartTime && hasStartFrame) {\n      throw new Error('You should specify either start frame or time, but not both.');\n    } else if (hasStartTime) {\n      // User specifies time, we infer frames from FPS\n      time = startTime;\n      playhead = this._computePlayhead(time, duration);\n      frame = this._computeFrame(\n        playhead, time,\n        totalFrames, fps\n      );\n    } else if (hasStartFrame) {\n      // User specifies frame number, we infer time from FPS\n      frame = startFrame;\n      time = frame / fps;\n      playhead = this._computePlayhead(time, duration);\n    }\n\n    return {\n      playhead,\n      time,\n      frame,\n      duration,\n      totalFrames,\n      fps,\n      timeScale\n    };\n  }\n\n  setup (settings = {}) {\n    if (this.sketch) throw new Error('Multiple setup() calls not yet supported.');\n\n    this._settings = Object.assign({}, settings, this._settings);\n\n    checkSettings(this._settings);\n\n    // Get initial canvas & context\n    const { context, canvas } = createCanvas(this._settings);\n\n    const timeProps = this.getTimeProps(this._settings);\n\n    // Initial render state features\n    this._props = {\n      ...timeProps,\n      canvas,\n      context,\n      deltaTime: 0,\n      started: false,\n      exporting: false,\n      playing: false,\n      recording: false,\n      settings: this.settings,\n      data: this.settings.data,\n\n      // Export some specific actions to the sketch\n      render: () => this.render(),\n      togglePlay: () => this.togglePlay(),\n      dispatch: (cb) => this.dispatch(cb),\n      tick: () => this.tick(),\n      resize: () => this.resize(),\n      update: (opt) => this.update(opt),\n      exportFrame: opt => this.exportFrame(opt),\n      record: () => this.record(),\n      play: () => this.play(),\n      pause: () => this.pause(),\n      stop: () => this.stop()\n    };\n\n    // For WebGL sketches, a gl variable reads a bit better\n    this._setupGLKey();\n\n    // Trigger initial resize now so that canvas is already sized\n    // by the time we load the sketch\n    this.resize();\n  }\n\n  loadAndRun (canvasSketch, newSettings) {\n    return this.load(canvasSketch, newSettings).then(() => {\n      this.run();\n      return this;\n    });\n  }\n\n  unload () {\n    this.pause();\n    if (!this.sketch) return;\n    if (typeof this.sketch.unload === 'function') {\n      this._wrapContextScale(props => this.sketch.unload(props));\n    }\n    this._sketch = null;\n  }\n\n  destroy () {\n    this.unload();\n    this.unmount();\n  }\n\n  load (createSketch, newSettings) {\n    // User didn't specify a function\n    if (typeof createSketch !== 'function') {\n      throw new Error('The function must take in a function as the first parameter. Example:\\n  canvasSketcher(() => { ... }, settings)');\n    }\n\n    if (this.sketch) {\n      this.unload();\n    }\n\n    if (typeof newSettings !== 'undefined') {\n      this.update(newSettings);\n    }\n\n    // This is a bit of a tricky case; we set up the auto-scaling here\n    // in case the user decides to render anything to the context *before* the\n    // render() function... However, users should instead use begin() function for that.\n    this._preRender();\n\n    let preload = Promise.resolve();\n\n    // Because of P5.js's unusual structure, we have to do a bit of\n    // library-specific changes to support it properly.\n    if (this.settings.p5) {\n      if (!isBrowser()) {\n        throw new Error('[canvas-sketch] ERROR: Using p5.js in Node.js is not supported');\n      }\n      preload = new Promise(resolve => {\n        let P5Constructor = this.settings.p5;\n        let preload;\n        if (P5Constructor.p5) {\n          preload = P5Constructor.preload;\n          P5Constructor = P5Constructor.p5;\n        }\n\n        // The sketch setup; disable loop, set sizing, etc.\n        const p5Sketch = p5 => {\n          // Hook in preload if necessary\n          if (preload) p5.preload = () => preload(p5);\n          p5.setup = () => {\n            const props = this.props;\n            const isGL = this.settings.context === 'webgl';\n            const renderer = isGL ? p5.WEBGL : p5.P2D;\n            p5.noLoop();\n            p5.pixelDensity(props.pixelRatio);\n            p5.createCanvas(props.viewportWidth, props.viewportHeight, renderer);\n            if (isGL && this.settings.attributes) {\n              p5.setAttributes(this.settings.attributes);\n            }\n\n            this.update({ p5, canvas: p5.canvas, context: p5._renderer.drawingContext });\n            resolve();\n          };\n        };\n\n        // Support global and instance P5.js modes\n        if (typeof P5Constructor === 'function') {\n          new P5Constructor(p5Sketch);\n        } else {\n          if (typeof window.createCanvas !== 'function') {\n            throw new Error(\"{ p5 } setting is passed but can't find p5.js in global (window) scope. Maybe you did not create it globally?\\nnew p5(); // <-- attaches to global scope\");\n          }\n          p5Sketch(window);\n        }\n      });\n    }\n\n    return preload.then(() => {\n      // Load the user's sketch\n      let loader = createSketch(this.props);\n      if (!isPromise(loader)) {\n        loader = Promise.resolve(loader);\n      }\n      return loader;\n    }).then(sketch => {\n      if (!sketch) sketch = {};\n      this._sketch = sketch;\n\n      // Once the sketch is loaded we can add the events\n      if (isBrowser()) {\n        this._keyboardShortcuts.attach();\n        window.addEventListener('resize', this._resizeHandler);\n      }\n\n      this._postRender();\n\n      // The initial resize() in the constructor will not have\n      // triggered a resize() event on the sketch, since it was before\n      // the sketch was loaded. So we send the signal here, allowing\n      // users to react to the initial size before first render.\n      this._sizeChanged();\n      return this;\n    }).catch(err => {\n      console.warn('Could not start sketch, the async loading function rejected with an error:\\n    Error: ' + err.message);\n      throw err;\n    });\n  }\n}\n\nexport default SketchManager;\n","import { getClientAPI } from '../util';\n\nexport default function (opt = {}) {\n  const handler = ev => {\n    if (!opt.enabled()) return;\n\n    const client = getClientAPI();\n    if (ev.keyCode === 83 && !ev.altKey && (ev.metaKey || ev.ctrlKey)) {\n      // Cmd + S\n      ev.preventDefault();\n      opt.save(ev);\n    } else if (ev.keyCode === 32) {\n      // Space\n      // TODO: what to do with this? keep it, or remove it?\n      opt.togglePlay(ev);\n    } else if (client && !ev.altKey && ev.keyCode === 75 && (ev.metaKey || ev.ctrlKey)) {\n      // Cmd + K, only when canvas-sketch-cli is used\n      ev.preventDefault();\n      opt.commit(ev);\n    }\n  };\n\n  const attach = () => {\n    window.addEventListener('keydown', handler);\n  };\n\n  const detach = () => {\n    window.removeEventListener('keydown', handler);\n  };\n\n  return {\n    attach,\n    detach\n  };\n}\n","import SketchManager from './core/SketchManager';\nimport PaperSizes from './paper-sizes';\nimport { getClientAPI, defined } from './util';\n\nconst CACHE = 'hot-id-cache';\nconst runtimeCollisions = [];\n\nfunction isHotReload () {\n  const client = getClientAPI();\n  return client && client.hot;\n}\n\nfunction cacheGet (id) {\n  const client = getClientAPI();\n  if (!client) return undefined;\n  client[CACHE] = client[CACHE] || {};\n  return client[CACHE][id];\n}\n\nfunction cachePut (id, data) {\n  const client = getClientAPI();\n  if (!client) return undefined;\n  client[CACHE] = client[CACHE] || {};\n  client[CACHE][id] = data;\n}\n\nfunction getTimeProp (oldManager, newSettings) {\n  // Static sketches ignore the time persistency\n  return newSettings.animate ? { time: oldManager.props.time } : undefined;\n}\n\nfunction canvasSketch (sketch, settings = {}) {\n  if (settings.p5) {\n    if (settings.canvas || (settings.context && typeof settings.context !== 'string')) {\n      throw new Error(`In { p5 } mode, you can't pass your own canvas or context, unless the context is a \"webgl\" or \"2d\" string`);\n    }\n\n    // Do not create a canvas on startup, since P5.js does that for us\n    const context = typeof settings.context === 'string' ? settings.context : false;\n    settings = Object.assign({}, settings, { canvas: false, context });\n  }\n\n  const isHot = isHotReload();\n  let hotID;\n  if (isHot) {\n    // Use a magic name by default, force user to define each sketch if they\n    // require more than one in an application. Open to other ideas on how to tackle\n    // this as well...\n    hotID = defined(settings.id, '$__DEFAULT_CANVAS_SKETCH_ID__$');\n  }\n  let isInjecting = isHot && typeof hotID === 'string';\n\n  if (isInjecting && runtimeCollisions.includes(hotID)) {\n    console.warn(`Warning: You have multiple calls to canvasSketch() in --hot mode. You must pass unique { id } strings in settings to enable hot reload across multiple sketches. `, hotID);\n    isInjecting = false;\n  }\n\n  let preload = Promise.resolve();\n\n  if (isInjecting) {\n    // Mark this as already spotted in this runtime instance\n    runtimeCollisions.push(hotID);\n\n    const previousData = cacheGet(hotID);\n    if (previousData) {\n      const next = () => {\n        // Grab new props from old sketch instance\n        const newProps = getTimeProp(previousData.manager, settings);\n        // Destroy the old instance\n        previousData.manager.destroy();\n        // Pass along new props\n        return newProps;\n      };\n\n      // Move along the next data...\n      preload = previousData.load.then(next).catch(next);\n    }\n  }\n\n  return preload.then(newProps => {\n    const manager = new SketchManager();\n    let result;\n    if (sketch) {\n      // Merge with incoming data\n      settings = Object.assign({}, settings, newProps);\n\n      // Apply settings and create a canvas\n      manager.setup(settings);\n\n      // Mount to DOM\n      manager.mount();\n\n      // load the sketch first\n      result = manager.loadAndRun(sketch);\n    } else {\n      result = Promise.resolve(manager);\n    }\n    if (isInjecting) {\n      cachePut(hotID, { load: result, manager });\n    }\n    return result;\n  });\n}\n\n// TODO: Figure out a nice way to export things.\ncanvasSketch.canvasSketch = canvasSketch;\ncanvasSketch.PaperSizes = PaperSizes;\n\nexport default canvasSketch;\n","var defined = require('defined');\nvar units = [ 'mm', 'cm', 'm', 'pc', 'pt', 'in', 'ft', 'px' ];\n\nvar conversions = {\n  // metric\n  m: {\n    system: 'metric',\n    factor: 1\n  },\n  cm: {\n    system: 'metric',\n    factor: 1 / 100\n  },\n  mm: {\n    system: 'metric',\n    factor: 1 / 1000\n  },\n  // imperial\n  pt: {\n    system: 'imperial',\n    factor: 1 / 72\n  },\n  pc: {\n    system: 'imperial',\n    factor: 1 / 6\n  },\n  in: {\n    system: 'imperial',\n    factor: 1\n  },\n  ft: {\n    system: 'imperial',\n    factor: 12\n  }\n};\n\nconst anchors = {\n  metric: {\n    unit: 'm',\n    ratio: 1 / 0.0254\n  },\n  imperial: {\n    unit: 'in',\n    ratio: 0.0254\n  }\n};\n\nfunction round (value, decimals) {\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\nfunction convertDistance (value, fromUnit, toUnit, opts) {\n  if (typeof value !== 'number' || !isFinite(value)) throw new Error('Value must be a finite number');\n  if (!fromUnit || !toUnit) throw new Error('Must specify from and to units');\n\n  opts = opts || {};\n  var pixelsPerInch = defined(opts.pixelsPerInch, 96);\n  var precision = opts.precision;\n  var roundPixel = opts.roundPixel !== false;\n\n  fromUnit = fromUnit.toLowerCase();\n  toUnit = toUnit.toLowerCase();\n\n  if (units.indexOf(fromUnit) === -1) throw new Error('Invalid from unit \"' + fromUnit + '\", must be one of: ' + units.join(', '));\n  if (units.indexOf(toUnit) === -1) throw new Error('Invalid from unit \"' + toUnit + '\", must be one of: ' + units.join(', '));\n\n  if (fromUnit === toUnit) {\n    // We don't need to convert from A to B since they are the same already\n    return value;\n  }\n\n  var toFactor = 1;\n  var fromFactor = 1;\n  var isToPixel = false;\n\n  if (fromUnit === 'px') {\n    fromFactor = 1 / pixelsPerInch;\n    fromUnit = 'in';\n  }\n  if (toUnit === 'px') {\n    isToPixel = true;\n    toFactor = pixelsPerInch;\n    toUnit = 'in';\n  }\n\n  var fromUnitData = conversions[fromUnit];\n  var toUnitData = conversions[toUnit];\n\n  // source to anchor inside source's system\n  var anchor = value * fromUnitData.factor * fromFactor;\n\n  // if systems differ, convert one to another\n  if (fromUnitData.system !== toUnitData.system) {\n    // regular 'm' to 'in' and so forth\n    anchor *= anchors[fromUnitData.system].ratio;\n  }\n\n  var result = anchor / toUnitData.factor * toFactor;\n  if (isToPixel && roundPixel) {\n    result = Math.round(result);\n  } else if (typeof precision === 'number' && isFinite(precision)) {\n    result = round(result, precision);\n  }\n  return result;\n}\n\nmodule.exports = convertDistance;\nmodule.exports.units = units;\n","module.exports = function () {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i] !== undefined) return arguments[i];\n    }\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.THREE = {}));\n}(this, function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\tif ( Number.isInteger === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\t\tNumber.isInteger = function ( value ) {\n\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t\t};\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( 'name' in Function.prototype === false ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t}\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tvar REVISION = '108';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\n\tvar TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar VSMShadowMap = 3;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar Uncharted2ToneMapping = 3;\n\tvar CineonToneMapping = 4;\n\tvar ACESFilmicToneMapping = 5;\n\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar SphericalReflectionMapping = 305;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipmapNearestFilter = 1004;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipmapLinearFilter = 1005;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipmapNearestFilter = 1007;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipmapLinearFilter = 1008;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RedFormat = 1028;\n\tvar RGB_S3TC_DXT1_Format = 33776;\n\tvar RGBA_S3TC_DXT1_Format = 33777;\n\tvar RGBA_S3TC_DXT3_Format = 33778;\n\tvar RGBA_S3TC_DXT5_Format = 33779;\n\tvar RGB_PVRTC_4BPPV1_Format = 35840;\n\tvar RGB_PVRTC_2BPPV1_Format = 35841;\n\tvar RGBA_PVRTC_4BPPV1_Format = 35842;\n\tvar RGBA_PVRTC_2BPPV1_Format = 35843;\n\tvar RGB_ETC1_Format = 36196;\n\tvar RGBA_ASTC_4x4_Format = 37808;\n\tvar RGBA_ASTC_5x4_Format = 37809;\n\tvar RGBA_ASTC_5x5_Format = 37810;\n\tvar RGBA_ASTC_6x5_Format = 37811;\n\tvar RGBA_ASTC_6x6_Format = 37812;\n\tvar RGBA_ASTC_8x5_Format = 37813;\n\tvar RGBA_ASTC_8x6_Format = 37814;\n\tvar RGBA_ASTC_8x8_Format = 37815;\n\tvar RGBA_ASTC_10x5_Format = 37816;\n\tvar RGBA_ASTC_10x6_Format = 37817;\n\tvar RGBA_ASTC_10x8_Format = 37818;\n\tvar RGBA_ASTC_10x10_Format = 37819;\n\tvar RGBA_ASTC_12x10_Format = 37820;\n\tvar RGBA_ASTC_12x12_Format = 37821;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\tvar TangentSpaceNormalMap = 0;\n\tvar ObjectSpaceNormalMap = 1;\n\n\tvar ZeroStencilOp = 0;\n\tvar KeepStencilOp = 7680;\n\tvar ReplaceStencilOp = 7681;\n\tvar IncrementStencilOp = 7682;\n\tvar DecrementStencilOp = 7683;\n\tvar IncrementWrapStencilOp = 34055;\n\tvar DecrementWrapStencilOp = 34056;\n\tvar InvertStencilOp = 5386;\n\n\tvar NeverStencilFunc = 512;\n\tvar LessStencilFunc = 513;\n\tvar EqualStencilFunc = 514;\n\tvar LessEqualStencilFunc = 515;\n\tvar GreaterStencilFunc = 516;\n\tvar NotEqualStencilFunc = 517;\n\tvar GreaterEqualStencilFunc = 518;\n\tvar AlwaysStencilFunc = 519;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _lut = [];\n\n\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t}\n\n\tvar _Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t},\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * _Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * _Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tceilPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tfloorPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t}\n\n\tObject.defineProperties( Vector2.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.x = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.y = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tisVector2: true,\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tcross: function ( v ) {\n\n\t\t\treturn this.x * v.y - this.y * v.x;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function ( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Quaternion.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tw: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._w = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\n\t\tisQuaternion: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c1 = cos( x / 2 );\n\t\t\tvar c2 = cos( y / 2 );\n\t\t\tvar c3 = cos( z / 2 );\n\n\t\t\tvar s1 = sin( x / 2 );\n\t\t\tvar s2 = sin( y / 2 );\n\t\t\tvar s3 = sin( z / 2 );\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tangleTo: function ( q ) {\n\n\t\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t\t},\n\n\t\trotateTowards: function ( q, step ) {\n\n\t\t\tvar angle = this.angleTo( q );\n\n\t\t\tif ( angle === 0 ) return this;\n\n\t\t\tvar t = Math.min( 1, step / angle );\n\n\t\t\tthis.slerp( q, t );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tinverse: function () {\n\n\t\t\t// quaternion is assumed to have unit length\n\n\t\t\treturn this.conjugate();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\t\tvar s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\t\tthis.normalize();\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\t_onChange: function ( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _vector = new Vector3();\n\tvar _quaternion = new Quaternion();\n\n\tfunction Vector3( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t}\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t\t},\n\n\t\tapplyAxisAngle: function ( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix = qw * x + qy * z - qz * y;\n\t\t\tvar iy = qw * y + qz * x - qx * z;\n\t\t\tvar iz = qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t\t},\n\n\t\tunproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t\t},\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\treturn this.crossVectors( this, v );\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function ( planeNormal ) {\n\n\t\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( _vector );\n\n\t\t},\n\n\t\treflect: function ( normal ) {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t},\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function ( s ) {\n\n\t\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t\t},\n\n\t\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\t\tthis.y = Math.cos( phi ) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCylindrical: function ( c ) {\n\n\t\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t\t},\n\n\t\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\t\tthis.x = radius * Math.sin( theta );\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tvar _vector$1 = new Vector3();\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$1.x = attribute.getX( i );\n\t\t\t\t_vector$1.y = attribute.getY( i );\n\t\t\t\t_vector$1.z = attribute.getZ( i );\n\n\t\t\t\t_vector$1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, _vector$1.x, _vector$1.y, _vector$1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t},\n\n\t\tmultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\t\tvar c = Math.cos( rotation );\n\t\t\tvar s = Math.sin( rotation );\n\n\t\t\tthis.set(\n\t\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t\t0, 0, 1\n\t\t\t);\n\n\t\t},\n\n\t\tscale: function ( sx, sy ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotate: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta );\n\t\t\tvar s = Math.sin( theta );\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\t\tte[ 0 ] = c * a11 + s * a21;\n\t\t\tte[ 3 ] = c * a12 + s * a22;\n\t\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( tx, ty ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar _canvas;\n\n\tvar ImageUtils = {\n\n\t\tgetDataURL: function ( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\t\treturn image.src;\n\n\t\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar textureId = 0;\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipmapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\t\t\tthis.center.copy( source.center );\n\t\t\tthis.rotation = source.rotation;\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy( source.matrix );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tvar output = {\n\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\t\trotation: this.rotation,\n\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY,\n\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tvar url;\n\n\t\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// process single image\n\n\t\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject ) {\n\n\t\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\t\tuv.applyMatrix3( this.matrix );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t\treturn uv;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.defineProperties( Vector4.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.z = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.w = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: WebGLRenderTarget,\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author Matt DesLauriers / @mattdesl\n\t */\n\n\tfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.samples = 4;\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\t\tconstructor: WebGLMultisampleRenderTarget,\n\n\t\tisWebGLMultisampleRenderTarget: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\t\tthis.samples = source.samples;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tvar _v1 = new Vector3();\n\tvar _m1 = new Matrix4();\n\tvar _zero = new Vector3( 0, 0, 0 );\n\tvar _one = new Vector3( 1, 1, 1 );\n\tvar _x = new Vector3();\n\tvar _y = new Vector3();\n\tvar _z = new Vector3();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function ( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// bottom row\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// last column\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\treturn this.compose( _zero, q, _one );\n\n\t\t},\n\n\t\tlookAt: function ( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\t_z.subVectors( eye, target );\n\n\t\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t_z.z = 1;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t_z.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_z.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\t\t\t\t_x.crossVectors( up, _z );\n\n\t\t\t}\n\n\t\t\t_x.normalize();\n\t\t\t_y.crossVectors( _z, _x );\n\n\t\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t_v1.x = attribute.getX( i );\n\t\t\t\t_v1.y = attribute.getY( i );\n\t\t\t\t_v1.z = attribute.getZ( i );\n\n\t\t\t\t_v1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, _v1.x, _v1.y, _v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPosition: function ( x, y, z ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tte[ 12 ] = x.x;\n\t\t\t\tte[ 13 ] = x.y;\n\t\t\t\tte[ 14 ] = x.z;\n\n\t\t\t} else {\n\n\t\t\t\tte[ 12 ] = x;\n\t\t\t\tte[ 13 ] = y;\n\t\t\t\tte[ 14 ] = z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s, c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts, c, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeShear: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, y, z, 0,\n\t\t\t\tx, 1, z, 0,\n\t\t\t\tx, y, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = position.x;\n\t\t\tte[ 13 ] = position.y;\n\t\t\tte[ 14 ] = position.z;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\t_m1.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t_m1.elements[ 0 ] *= invSX;\n\t\t\t_m1.elements[ 1 ] *= invSX;\n\t\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t\t_m1.elements[ 4 ] *= invSY;\n\t\t\t_m1.elements[ 5 ] *= invSY;\n\t\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tif ( far === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _matrix = new Matrix4();\n\tvar _quaternion$1 = new Quaternion();\n\n\tfunction Euler( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || Euler.DefaultOrder;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tObject.defineProperties( Euler.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\torder: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._order;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._order = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Euler.prototype, {\n\n\t\tisEuler: true,\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = _Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function ( q, order, update ) {\n\n\t\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t\t},\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function ( newOrder ) {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\t_quaternion$1.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( _quaternion$1, newOrder );\n\n\t\t},\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_onChange: function ( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tObject.assign( Layers.prototype, {\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel | 0;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t},\n\n\t\tenableAll: function () {\n\n\t\t\tthis.mask = 0xffffffff | 0;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t},\n\n\t\tdisableAll: function () {\n\n\t\t\tthis.mask = 0;\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t} );\n\n\tvar _object3DId = 0;\n\n\tvar _v1$1 = new Vector3();\n\tvar _q1 = new Quaternion();\n\tvar _m1$1 = new Matrix4();\n\tvar _target = new Vector3();\n\n\tvar _position = new Vector3();\n\tvar _scale = new Vector3();\n\tvar _quaternion$2 = new Quaternion();\n\n\tvar _xAxis = new Vector3( 1, 0, 0 );\n\tvar _yAxis = new Vector3( 0, 1, 0 );\n\tvar _zAxis = new Vector3( 0, 0, 1 );\n\n\tvar _addedEvent = { type: 'added' };\n\tvar _removedEvent = { type: 'removed' };\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Object3D,\n\n\t\tisObject3D: true,\n\n\t\tonBeforeRender: function () {},\n\t\tonAfterRender: function () {},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tthis.matrix.premultiply( matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function ( axis, angle ) {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t\t},\n\n\t\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_v1$1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( _v1$1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslateX: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t\t},\n\n\t\ttranslateY: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t\t},\n\n\t\ttranslateZ: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t\t},\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( _m1$1.getInverse( this.matrixWorld ) );\n\n\t\t},\n\n\t\tlookAt: function ( x, y, z ) {\n\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\t_target.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\t_target.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\t_m1$1.lookAt( _position, _target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\t_m1$1.lookAt( _target, _position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\t\tthis.quaternion.premultiply( _q1.inverse() );\n\n\t\t\t}\n\n\t\t},\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push( object );\n\n\t\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tattach: function ( object ) {\n\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.getInverse( this.matrixWorld );\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t\t}\n\n\t\t\tobject.applyMatrix( _m1$1 );\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetWorldScale: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( _position, _quaternion$2, target );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t\t}\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tif ( updateChildren === true ) {\n\n\t\t\t\tvar children = this.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\t\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t\t// object specific properties\n\n\t\t\tif ( this.isMesh && this.drawMode !== TrianglesDrawMode ) object.drawMode = this.drawMode;\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\t\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Scene,\n\n\t\tisScene: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tvar _points = [\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3()\n\t];\n\tvar _vector$2 = new Vector3();\n\n\t// triangle centered vertices\n\n\tvar _v0 = new Vector3();\n\tvar _v1$2 = new Vector3();\n\tvar _v2 = new Vector3();\n\n\t// triangle edge vectors\n\n\tvar _f0 = new Vector3();\n\tvar _f1 = new Vector3();\n\tvar _f2 = new Vector3();\n\n\tvar _center = new Vector3();\n\tvar _extents = new Vector3();\n\tvar _triangleNormal = new Vector3();\n\tvar _testAxis = new Vector3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box3.prototype, {\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\tvar z = attribute.getZ( i );\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\t\tvar halfSize = _vector$2.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByObject: function ( object ) {\n\n\t\t\tvar i, l;\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t_vector$2.copy( vertices[ i ] );\n\t\t\t\t\t\t_vector$2.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\t\tthis.expandByPoint( _vector$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t_vector$2.fromBufferAttribute( attribute, i ).applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\t\t\tthis.expandByPoint( _vector$2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, _vector$2 );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn _vector$2.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t\t},\n\n\t\tintersectsTriangle: function ( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( _center );\n\t\t\t_extents.subVectors( this.max, _center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\t_v0.subVectors( triangle.a, _center );\n\t\t\t_v1$2.subVectors( triangle.b, _center );\n\t\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\t_f0.subVectors( _v1$2, _v0 );\n\t\t\t_f1.subVectors( _v2, _v1$2 );\n\t\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\t\treturn satForAxes( axes, _v0, _v1$2, _v2, _extents );\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\tvar clampedPoint = _vector$2.copy( point ).clamp( this.min, this.max );\n\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t},\n\n\t\tgetBoundingSphere: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$2 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( _points );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\tfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\t\tvar i, j;\n\n\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t_testAxis.fromArray( axes, i );\n\t\t\t// project the aabb onto the seperating axis\n\t\t\tvar r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\tvar p0 = v0.dot( _testAxis );\n\t\t\tvar p1 = v1.dot( _testAxis );\n\t\t\tvar p2 = v2.dot( _testAxis );\n\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tvar _box = new Box3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t}\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\t_box.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\ttarget.sub( this.center ).normalize();\n\t\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\t\ttarget = new Box3();\n\n\t\t\t}\n\n\t\t\ttarget.set( this.center, this.center );\n\t\t\ttarget.expandByScalar( this.radius );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t} );\n\n\tvar _vector$3 = new Vector3();\n\tvar _segCenter = new Vector3();\n\tvar _segDir = new Vector3();\n\tvar _diff = new Vector3();\n\n\tvar _edge1 = new Vector3();\n\tvar _edge2 = new Vector3();\n\tvar _normal = new Vector3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n\t}\n\n\tObject.assign( Ray.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function ( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, _vector$3 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( point, this.origin );\n\n\t\t\tvar directionDistance = target.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn target.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function ( point ) {\n\n\t\t\tvar directionDistance = _vector$3.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\t_vector$3.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn _vector$3.distanceToSquared( point );\n\n\t\t},\n\n\t\tdistanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( _segDir );\n\t\t\tvar b0 = _diff.dot( this.direction );\n\t\t\tvar b1 = - _diff.dot( _segDir );\n\t\t\tvar c = _diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t},\n\n\t\tintersectSphere: function ( sphere, target ) {\n\n\t\t\t_vector$3.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = _vector$3.dot( this.direction );\n\t\t\tvar d2 = _vector$3.dot( _vector$3 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, target ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, target );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, target ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn this.intersectBox( box, _vector$3 ) !== null;\n\n\t\t},\n\n\t\tintersectTriangle: function ( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t_edge1.subVectors( b, a );\n\t\t\t_edge2.subVectors( c, a );\n\t\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( _normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t_diff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * _diff.dot( _normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _v0$1 = new Vector3();\n\tvar _v1$3 = new Vector3();\n\tvar _v2$1 = new Vector3();\n\tvar _v3 = new Vector3();\n\n\tvar _vab = new Vector3();\n\tvar _vac = new Vector3();\n\tvar _vbc = new Vector3();\n\tvar _vap = new Vector3();\n\tvar _vbp = new Vector3();\n\tvar _vcp = new Vector3();\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tObject.assign( Triangle, {\n\n\t\tgetNormal: function ( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\t_v0$1.subVectors( a, b );\n\t\t\ttarget.cross( _v0$1 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t},\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tgetBarycoord: function ( point, a, b, c, target ) {\n\n\t\t\t_v0$1.subVectors( c, a );\n\t\t\t_v1$3.subVectors( b, a );\n\t\t\t_v2$1.subVectors( point, a );\n\n\t\t\tvar dot00 = _v0$1.dot( _v0$1 );\n\t\t\tvar dot01 = _v0$1.dot( _v1$3 );\n\t\t\tvar dot02 = _v0$1.dot( _v2$1 );\n\t\t\tvar dot11 = _v1$3.dot( _v1$3 );\n\t\t\tvar dot12 = _v1$3.dot( _v2$1 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, _v3 );\n\n\t\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t\t},\n\n\t\tgetUV: function ( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tisFrontFacing: function ( a, b, c, direction ) {\n\n\t\t\t_v0$1.subVectors( c, b );\n\t\t\t_v1$3.subVectors( a, b );\n\n\t\t\t// strictly front facing\n\t\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetArea: function () {\n\n\t\t\t_v0$1.subVectors( this.c, this.b );\n\t\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t\t},\n\n\t\tgetMidpoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tgetNormal: function ( target ) {\n\n\t\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetPlane: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tgetBarycoord: function ( point, target ) {\n\n\t\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tisFrontFacing: function ( direction ) {\n\n\t\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsTriangle( this );\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors( b, a );\n\t\t\t_vac.subVectors( c, a );\n\t\t\t_vap.subVectors( p, a );\n\t\t\tvar d1 = _vab.dot( _vap );\n\t\t\tvar d2 = _vac.dot( _vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\t_vbp.subVectors( p, b );\n\t\t\tvar d3 = _vab.dot( _vbp );\n\t\t\tvar d4 = _vac.dot( _vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t\t}\n\n\t\t\t_vcp.subVectors( p, c );\n\t\t\tvar d5 = _vab.dot( _vcp );\n\t\t\tvar d6 = _vac.dot( _vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\t_vbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t\t},\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tvar _hslA = { h: 0, s: 0, l: 0 };\n\tvar _hslB = { h: 0, s: 0, l: 0 };\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tfunction hue2rgb( p, q, t ) {\n\n\t\tif ( t < 0 ) t += 1;\n\t\tif ( t > 1 ) t -= 1;\n\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\tif ( t < 1 / 2 ) return q;\n\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\treturn p;\n\n\t}\n\n\tfunction SRGBToLinear( c ) {\n\n\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t}\n\n\tfunction LinearToSRGB( c ) {\n\n\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t}\n\n\tObject.assign( Color.prototype, {\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function ( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = _colorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopySRGBToLinear: function ( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToSRGB: function ( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertSRGBToLinear: function () {\n\n\t\t\tthis.copySRGBToLinear( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToSRGB: function () {\n\n\t\t\tthis.copyLinearToSRGB( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( target ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t\t}\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tthis.getHSL( _hslA );\n\n\t\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpHSL: function ( color, alpha ) {\n\n\t\t\tthis.getHSL( _hslA );\n\t\t\tcolor.getHSL( _hslB );\n\n\t\t\tvar h = _Math.lerp( _hslA.h, _hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( _hslA.s, _hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tObject.assign( Face3.prototype, {\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.flatShading = false;\n\t\tthis.vertexTangents = false;\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Material,\n\n\t\tisMaterial: true,\n\n\t\tonBeforeCompile: function () {},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilMask = this.stencilMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t\t// rotation (SpriteMaterial)\n\t\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\t\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\t\tif ( this.visible === false ) data.visible = false;\n\n\t\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilMask = source.stencilMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.toneMapped = source.toneMapped;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\tthis.shadowSide = source.shadowSide;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\n\t\tisBufferAttribute: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\t\tthis.array = array;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\n\tfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\n\tfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\n\tfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\n\tfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\n\tfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\n\tfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\n\tfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\n\tfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, {\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex = undefined;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction arrayMax( array ) {\n\n\t\tif ( array.length === 0 ) return - Infinity;\n\n\t\tvar max = array[ 0 ];\n\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t\t}\n\n\t\treturn max;\n\n\t}\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\n\tvar _m1$2 = new Matrix4();\n\tvar _obj = new Object3D();\n\tvar _offset = new Vector3();\n\tvar _box$1 = new Box3();\n\tvar _boxMorphTargets = new Box3();\n\tvar _vector$4 = new Vector3();\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: BufferGeometry,\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar tangent = this.attributes.tangent;\n\n\t\t\tif ( tangent !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\t// Tangent is vec4, but the '.w' component is a sign value (+1/-1).\n\t\t\t\tnormalMatrix.applyToBufferAttribute( tangent );\n\t\t\t\ttangent.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1$2.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1$2.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1$2.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1$2.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function ( vector ) {\n\n\t\t\t_obj.lookAt( vector );\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix( _obj.matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh ) {\n\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tvar position = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_box$1.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\t_vector$4.fromBufferAttribute( position, i );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t_vector$4.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) {\n\n\t\t\t\toffset = 0;\n\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$4.x = normals.getX( i );\n\t\t\t\t_vector$4.y = normals.getY( i );\n\t\t\t\t_vector$4.z = normals.getZ( i );\n\n\t\t\t\t_vector$4.normalize();\n\n\t\t\t\tnormals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute( array2, itemSize );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\t// attributes\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tgeometry2.addAttribute( name, newAttribute );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = this.morphAttributes;\n\n\t\t\tfor ( name in morphAttributes ) {\n\n\t\t\t\tvar morphArray = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = morphAttribute[ i ];\n\n\t\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = {};\n\t\t\tvar hasMorphAttributes = false;\n\n\t\t\tfor ( var key in this.morphAttributes ) {\n\n\t\t\t\tvar attributeArray = this.morphAttributes[ key ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = attributeArray[ i ];\n\n\t\t\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\t\tarray.push( attributeData );\n\n\t\t\t\t}\n\n\t\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\t\thasMorphAttributes = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphAttributes ) data.data.morphAttributes = morphAttributes;\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar name, i, l;\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( name in morphAttributes ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\t// user data\n\n\t\t\tthis.userData = source.userData;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tvar _inverseMatrix = new Matrix4();\n\tvar _ray = new Ray();\n\tvar _sphere = new Sphere();\n\n\tvar _vA = new Vector3();\n\tvar _vB = new Vector3();\n\tvar _vC = new Vector3();\n\n\tvar _tempA = new Vector3();\n\tvar _tempB = new Vector3();\n\tvar _tempC = new Vector3();\n\n\tvar _morphA = new Vector3();\n\tvar _morphB = new Vector3();\n\tvar _morphC = new Vector3();\n\n\tvar _uvA = new Vector2();\n\tvar _uvB = new Vector2();\n\tvar _uvC = new Vector2();\n\n\tvar _intersectionPoint = new Vector3();\n\tvar _intersectionPointWorld = new Vector3();\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t\t}\n\n\t\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar m, ml, name;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere );\n\t\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar uv2 = geometry.attributes.uv2;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t_uvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t_uvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t_uvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\tvar intersect;\n\n\t\tif ( material.side === BackSide ) {\n\n\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t} else {\n\n\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t}\n\n\t\tif ( intersect === null ) return null;\n\n\t\t_intersectionPointWorld.copy( point );\n\t\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\n\t}\n\n\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, uv, uv2, a, b, c ) {\n\n\t\t_vA.fromBufferAttribute( position, a );\n\t\t_vB.fromBufferAttribute( position, b );\n\t\t_vC.fromBufferAttribute( position, c );\n\n\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tvar influence = morphInfluences[ i ];\n\t\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tvar intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\t\tif ( intersection ) {\n\n\t\t\tif ( uv ) {\n\n\t\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t}\n\n\t\t\tif ( uv2 ) {\n\n\t\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t}\n\n\t\t\tvar face = new Face3( a, b, c );\n\t\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\t\tintersection.face = face;\n\n\t\t}\n\n\t\treturn intersection;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _geometryId = 0; // Geometry uses even numbers as Id\n\tvar _m1$3 = new Matrix4();\n\tvar _obj$1 = new Object3D();\n\tvar _offset$1 = new Vector3();\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: _geometryId += 2 } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Geometry,\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1$3.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1$3.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1$3.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1$3.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1$3.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function ( vector ) {\n\n\t\t\t_obj$1.lookAt( vector );\n\n\t\t\t_obj$1.updateMatrix();\n\n\t\t\tthis.applyMatrix( _obj$1.matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tfor ( var i = 0; i < positions.length; i += 3 ) {\n\n\t\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t\t];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t\t] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t\t] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset$1 ).negate();\n\n\t\t\tthis.translate( _offset$1.x, _offset$1.y, _offset$1.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tvar f, fl, face;\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\tvertices1 = this.vertices,\n\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\tfaces1 = this.faces,\n\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\tcolors1 = this.colors,\n\t\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( var i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs2 = geometry.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) this.faceVertexUvs[ i ] = [];\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs2.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs2 = faceVertexUvs2[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs2.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tuvsCopy.push( uvs2[ k ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.vertices = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar i, il, j, jl, k, kl;\n\n\t\t\t// reset\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\t\tthis.lineDistances = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// vertices\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// face vertex uvs\n\n\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargets = source.morphTargets;\n\n\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = {};\n\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t\t// morph normals\n\n\t\t\tvar morphNormals = source.morphNormals;\n\n\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphNormal = {};\n\n\t\t\t\t// vertex normals\n\n\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// face normals\n\n\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t\t}\n\n\t\t\t// skin weights\n\n\t\t\tvar skinWeights = source.skinWeights;\n\n\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// skin indices\n\n\t\t\tvar skinIndices = source.skinIndices;\n\n\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tvar lineDistances = source.lineDistances;\n\n\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// update flags\n\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// BoxGeometry\n\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\n\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\t// BoxBufferGeometry\n\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\t\tdepth = depth || 1;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar numberOfVertices = 0;\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth = width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar ix, iy;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tfunction cloneUniforms( src ) {\n\n\t\tvar dst = {};\n\n\t\tfor ( var u in src ) {\n\n\t\t\tdst[ u ] = {};\n\n\t\t\tfor ( var p in src[ u ] ) {\n\n\t\t\t\tvar property = src[ u ][ p ];\n\n\t\t\t\tif ( property && ( property.isColor ||\n\t\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn dst;\n\n\t}\n\n\tfunction mergeUniforms( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t}\n\n\t// Legacy\n\n\tvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = {};\n\n\t\tfor ( var name in this.uniforms ) {\n\n\t\t\tvar uniform = this.uniforms[ name ];\n\t\t\tvar value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tvar extensions = {};\n\n\t\tfor ( var key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Camera,\n\n\t\tisCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar fov = 90, aspect = 1;\n\n\tfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\t\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\t\tthis.update = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\t\trenderer.render( scene, cameraPX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\t\trenderer.render( scene, cameraNX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\t\trenderer.render( scene, cameraPY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\t\trenderer.render( scene, cameraNY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\t\trenderer.render( scene, cameraPZ );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\t\trenderer.render( scene, cameraNZ );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t}\n\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\tWebGLRenderTargetCube.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = texture.format;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tvar scene = new Scene();\n\n\t\tvar shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\t\"vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\",\n\n\t\t\t\t\"\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\"\tvWorldDirection = transformDirection( position, modelMatrix );\",\n\n\t\t\t\t\"\t#include <begin_vertex>\",\n\t\t\t\t\"\t#include <project_vertex>\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t\"uniform sampler2D tEquirect;\",\n\n\t\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\t\"#define RECIPROCAL_PI 0.31830988618\",\n\t\t\t\t\"#define RECIPROCAL_PI2 0.15915494\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\"\tvec3 direction = normalize( vWorldDirection );\",\n\n\t\t\t\t\"\tvec2 sampleUV;\",\n\n\t\t\t\t\"\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\",\n\n\t\t\t\t\"\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\n\n\t\t\t\t\"\tgl_FragColor = texture2D( tEquirect, sampleUV );\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( '\\n' ),\n\t\t};\n\n\t\tvar material = new ShaderMaterial( {\n\n\t\t\ttype: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tvar mesh = new Mesh( new BoxBufferGeometry( 5, 5, 5 ), material );\n\n\t\tscene.add( mesh );\n\n\t\tvar camera = new CubeCamera( 1, 10, 1 );\n\n\t\tcamera.renderTarget = this;\n\t\tcamera.renderTarget.texture.name = 'CubeCameraTexture';\n\n\t\tcamera.update( renderer, scene );\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _vector1 = new Vector3();\n\tvar _vector2 = new Vector3();\n\tvar _normalMatrix = new Matrix3();\n\n\tfunction Plane( normal, constant ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tObject.assign( Plane.prototype, {\n\n\t\tisPlane: true,\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function ( a, b, c ) {\n\n\t\t\tvar normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t\t},\n\n\t\tintersectLine: function ( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( _vector1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t},\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant -= offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _sphere$1 = new Sphere();\n\tvar _vector$5 = new Vector3();\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tObject.assign( Frustum.prototype, {\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t\t},\n\n\t\tintersectsSprite: function ( sprite ) {\n\n\t\t\t_sphere$1.center.set( 0, 0, 0 );\n\t\t\t_sphere$1.radius = 0.7071067811865476;\n\t\t\t_sphere$1.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\t_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( _vector$5 ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha  = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = normalMatrix * objectTangent;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t  vec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = saturate( clearcoat );\\tmaterial.clearcoatRoughness = clamp( clearcoatRoughness, 0.04, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, normalScale, normalMap );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec2 normalScale, in sampler2D normalMap ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy *= normalScale;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvec3 NfromST = cross( S, T );\\n\\t\\t\\tif( dot( NfromST, N ) > 0.0 ) {\\n\\t\\t\\t\\tS *= -1.0;\\n\\t\\t\\t\\tT *= -1.0;\\n\\t\\t\\t}\\n\\t\\t#else\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 vTBN = mat3( tangent, bitangent, clearcoatNormal );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = clearcoatNormalScale * mapN.xy;\\n\\t\\tclearcoatNormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatNormalScale, clearcoatNormalMap );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_normalmap_pars_fragment = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 encodeHalfRGBA ( vec2 v ) {\\n\\tvec4 encoded = vec4( 0.0 );\\n\\tconst vec2 offset = vec2( 1.0 / 255.0, 0.0 );\\n\\tencoded.xy = vec2( v.x, fract( v.x * 255.0 ) );\\n\\tencoded.xy = encoded.xy - ( encoded.yy * offset );\\n\\tencoded.zw = vec2( v.y, fract( v.y * 255.0 ) );\\n\\tencoded.zw = encoded.zw - ( encoded.ww * offset );\\n\\treturn encoded;\\n}\\nvec2 decodeHalfRGBA( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn decodeHalfRGBA( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\n\tvar uv_pars_fragment = \"#ifdef USE_UV\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSPARENCY\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSPARENCY\\n\\tuniform float transparency;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSPARENCY\\n\\t\\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_normalmap_pars_fragment: clearcoat_normalmap_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tbackground_frag: background_frag,\n\t\tbackground_vert: background_vert,\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshmatcap_frag: meshmatcap_frag,\n\t\tmeshmatcap_vert: meshmatcap_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert,\n\t\tsprite_frag: sprite_frag,\n\t\tsprite_vert: sprite_vert\n\t};\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() },\n\n\t\t\talphaMap: { value: null },\n\n\t\t},\n\n\t\tspecularmap: {\n\n\t\t\tspecularMap: { value: null },\n\n\t\t},\n\n\t\tenvmap: {\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 },\n\t\t\tmaxMipLevel: { value: 0 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tlightProbe: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {},\n\t\t\t\tshadowCameraNear: {},\n\t\t\t\tshadowCameraFar: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\t\trotation: { value: 0.0 },\n\t\t\tmap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\tmatcap: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tmatcap: { value: null }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.sprite,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t\t},\n\n\t\tbackground: {\n\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\t\tt2D: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\n\t\t},\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t},\n\n\t\tshadow: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t},\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\ttransparency: { value: 0 },\n\t\t\t\tclearcoat: { value: 0 },\n\t\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\t\tclearcoatNormalMap: { value: null },\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAnimation() {\n\n\t\tvar context = null;\n\t\tvar isAnimating = false;\n\t\tvar animationLoop = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tif ( isAnimating === false ) return;\n\n\t\t\tanimationLoop( time, frame );\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tstart: function () {\n\n\t\t\t\tif ( isAnimating === true ) return;\n\t\t\t\tif ( animationLoop === null ) return;\n\n\t\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\t\tisAnimating = true;\n\n\t\t\t},\n\n\t\t\tstop: function () {\n\n\t\t\t\tisAnimating = false;\n\n\t\t\t},\n\n\t\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\t\tanimationLoop = callback;\n\n\t\t\t},\n\n\t\t\tsetContext: function ( value ) {\n\n\t\t\t\tcontext = value;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAttributes( gl ) {\n\n\t\tvar buffers = new WeakMap();\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.dynamic ? 35048 : 35044;\n\n\t\t\tvar buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tvar type = 5126;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = 5126;\n\n\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = 5122;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = 5125;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = 5124;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = 5120;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = 5121;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( attribute.dynamic === false ) {\n\n\t\t\t\tgl.bufferData( bufferType, array, 35044 );\n\n\t\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\treturn buffers.get( attribute );\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tbuffers.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PlaneGeometry\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t// PlaneBufferGeometry\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar ix, iy;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\t\tvar clearColor = new Color( 0x000000 );\n\t\tvar clearAlpha = 0;\n\n\t\tvar planeMesh;\n\t\tvar boxMesh;\n\t\t// Store the current background texture and its `version`\n\t\t// so we can recompile the material accordingly.\n\t\tvar currentBackground = null;\n\t\tvar currentBackgroundVersion = 0;\n\n\t\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\t\tvar background = scene.background;\n\n\t\t\t// Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\t\t\tvar vr = renderer.vr;\n\t\t\tvar session = vr.getSession && vr.getSession();\n\n\t\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\t\tbackground = null;\n\n\t\t\t}\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\t\t\t\tcurrentBackground = null;\n\t\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\t\t\t\tcurrentBackground = null;\n\t\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t\t};\n\n\t\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\t\tObject.defineProperty( boxMesh.material, 'map', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.tCube.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = background.isWebGLRenderTargetCube ? background.texture : background;\n\t\t\t\tboxMesh.material.uniforms.tCube.value = texture;\n\t\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t     currentBackgroundVersion !== texture.version ) {\n\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = texture.version;\n\n\t\t\t\t}\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tbackground.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t\t   currentBackgroundVersion !== background.version ) {\n\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\n\t\t\t\t}\n\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension, methodName;\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\t\tvar maxTextures = gl.getParameter( 34930 );\n\t\tvar maxVertexTextures = gl.getParameter( 35660 );\n\t\tvar maxTextureSize = gl.getParameter( 3379 );\n\t\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\t\tvar maxAttributes = gl.getParameter( 34921 );\n\t\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\t\tvar maxVaryings = gl.getParameter( 36348 );\n\t\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\t\treturn {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\t\tmaxSamples: maxSamples\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function () {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, attributes, info ) {\n\n\t\tvar geometries = new WeakMap();\n\t\tvar wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tgeometries.delete( geometry );\n\n\t\t\tvar attribute = wireframeAttributes.get( buffergeometry );\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries.set( geometry, buffergeometry );\n\n\t\t\tinfo.memory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, 34963 );\n\n\t\t\t}\n\n\t\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateWireframeAttribute( geometry ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryPosition = geometry.attributes.position;\n\t\t\tvar version = 0;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tvar array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\t\tattribute.version = version;\n\n\t\t\tattributes.update( attribute, 34963 );\n\n\t\t\t//\n\n\t\t\tvar previousAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t\t//\n\n\t\t\twireframeAttributes.set( geometry, attribute );\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar currentAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( currentAttribute ) {\n\n\t\t\t\tvar geometryIndex = geometry.index;\n\n\t\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get( geometry );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension, methodName;\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLInfo( gl ) {\n\n\t\tvar memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\n\t\tvar render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update( count, mode, instanceCount ) {\n\n\t\t\tinstanceCount = instanceCount || 1;\n\n\t\t\trender.calls ++;\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase 4:\n\t\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 5:\n\t\t\t\tcase 6:\n\t\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\trender.frame ++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n\t}\n\n\tfunction WebGLMorphtargets( gl ) {\n\n\t\tvar influencesList = {};\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tfunction update( object, geometry, material, program ) {\n\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\t\tvar length = objectInfluences.length;\n\n\t\t\tvar influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t\t// Remove current morphAttributes\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\t// Add morphAttributes\n\n\t\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tif ( influence ) {\n\n\t\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( geometries, info ) {\n\n\t\tvar updateList = {};\n\n\t\tfunction update( object ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tupdateList = {};\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Takahiro https://github.com/takahirox\n\t */\n\n\tfunction DataTexture2DArray( data, width, height, depth ) {\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t}\n\n\tDataTexture2DArray.prototype = Object.create( Texture.prototype );\n\tDataTexture2DArray.prototype.constructor = DataTexture2DArray;\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\t/**\n\t * @author Artur Trzesiok\n\t */\n\n\tfunction DataTexture3D( data, width, height, depth ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t}\n\n\tDataTexture3D.prototype = Object.create( Texture.prototype );\n\tDataTexture3D.prototype.constructor = DataTexture3D;\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * @author tschw\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyTexture2dArray = new DataTexture2DArray();\n\tvar emptyTexture3d = new DataTexture3D();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array( 16 );\n\tvar mat3array = new Float32Array( 9 );\n\tvar mat2array = new Float32Array( 4 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\tfunction arraysEqual( a, b ) {\n\n\t\tif ( a.length !== b.length ) return false;\n\n\t\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction copyArray( a, b ) {\n\n\t\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\t\ta[ i ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( textures, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValueV1f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) return;\n\n\t\tgl.uniform1f( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValueV2f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform2fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV3f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\n\t\t\t}\n\n\t\t} else if ( v.r !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\t\tcache[ 0 ] = v.r;\n\t\t\t\tcache[ 1 ] = v.g;\n\t\t\t\tcache[ 2 ] = v.b;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV4f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\t\t\t\tcache[ 3 ] = v.w;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform4fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValueM2( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\t\tmat2array.set( elements );\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM3( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\t\tmat3array.set( elements );\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM4( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\t\tmat4array.set( elements );\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT2DArray1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n\t}\n\n\tfunction setValueT3D1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValueV1i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) return;\n\n\t\tgl.uniform1i( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\tfunction setValueV2i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValueV3i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValueV4i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8b5f: return setValueT3D1; // SAMPLER_3D\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\t\t\tcase 0x8DC1: return setValueT2DArray1; // SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\tfunction setValueV1fArray( gl, v ) {\n\n\t\tgl.uniform1fv( this.addr, v );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\tfunction setValueV1iArray( gl, v ) {\n\n\t\tgl.uniform1iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV2iArray( gl, v ) {\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV3iArray( gl, v ) {\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV4iArray( gl, v ) {\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t}\n\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 2 );\n\n\t\tgl.uniform2fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV3fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 3 );\n\n\t\tgl.uniform3fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV4fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tgl.uniform4fv( this.addr, data );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM3Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 9 );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM4Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 16 );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1Array( gl, v, textures ) {\n\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( textures, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6Array( gl, v, textures ) {\n\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( textures, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1Array; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6Array; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\t\tthis.cache = new Float32Array( data.length );\n\n\t\t}\n\n\t\tcopyArray( cache, data );\n\n\t};\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile ( true ) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\tid = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tvar n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB', '( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE', '( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getShaderErrors( gl, shader, type ) {\n\n\t\tvar status = gl.getShaderParameter( shader, 35713 );\n\t\tvar log = gl.getShaderInfoLog( shader ).trim();\n\n\t\tif ( status && log === '' ) return '';\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tvar source = gl.getShaderSource( shader );\n\n\t\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, 35721 );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n\t}\n\n\tfunction replaceClippingPlaneNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n\t}\n\n\tfunction parseIncludes( string ) {\n\n\t\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\t\tfunction replace( match, include ) {\n\n\t\t\tvar replace = ShaderChunk[ include ];\n\n\t\t\tif ( replace === undefined ) {\n\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t}\n\n\t\t\treturn parseIncludes( replace );\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction unrollLoops( string ) {\n\n\t\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\tvar unroll = '';\n\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\tunroll += snippet\n\t\t\t\t\t.replace( /\\[ i \\]/g, '[ ' + i + ' ]' )\n\t\t\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t\t\t}\n\n\t\t\treturn unroll;\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\n\n\t\tvar gl = renderer.getContext();\n\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = shader.vertexShader;\n\t\tvar fragmentShader = shader.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t\t}\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t// console.log( 'building new program ' );\n\n\t\t//\n\n\t\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\t\tprefixVertex += '\\n';\n\n\t\t\t}\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\t\tprefixFragment += '\\n';\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t( parameters.precision === 'highp' ) ? '#define HIGH_PRECISION' : '',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t( parameters.precision === 'highp' ) ? '#define HIGH_PRECISION' : '',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t( ( material.extensions ? material.extensions.shaderTextureLOD : false ) || parameters.envMap ) && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = parseIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\t\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\t\tfragmentShader = parseIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\t\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\t\tvertexShader = unrollLoops( vertexShader );\n\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\t\tif ( material.isShaderMaterial &&\n\t\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t\t}\n\n\t\t\t// GLSL 3.0 conversion\n\t\t\tprefixVertex = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define attribute in',\n\t\t\t\t'#define varying out',\n\t\t\t\t'#define texture2D texture'\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\t\tprefixFragment = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define varying in',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t\t'#define texture2D texture',\n\t\t\t\t'#define textureCube texture',\n\t\t\t\t'#define texture2DProj textureProj',\n\t\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tvar runnable = true;\n\t\t\tvar haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tvar vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tvar fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tthis.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tmaterial: material,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function () {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t//\n\n\t\tthis.name = shader.name;\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"fog\", \"useFog\", \"fogExp2\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\",\n\t\t\t\"sheen\"\n\t\t];\n\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( map.isTexture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\t\tvar precision = capabilities.precision;\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tmatcap: !! material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\t\tsheen: !! material.sheen,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.flatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\t\tarray.push( renderer.gammaOutput );\n\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function ( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = new WeakMap();\n\n\t\tfunction get( object ) {\n\n\t\t\tvar map = properties.get( object );\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set( object, map );\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tproperties.delete( object );\n\n\t\t}\n\n\t\tfunction update( object, key, value ) {\n\n\t\t\tproperties.get( object )[ key ] = value;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tproperties = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.program !== b.program ) {\n\n\t\t\treturn a.program.id - b.program.id;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\n\tfunction WebGLRenderList() {\n\n\t\tvar renderItems = [];\n\t\tvar renderItemsIndex = 0;\n\n\t\tvar opaque = [];\n\t\tvar transparent = [];\n\n\t\tvar defaultProgram = { id: - 1 };\n\n\t\tfunction init() {\n\n\t\t\trenderItemsIndex = 0;\n\n\t\t\topaque.length = 0;\n\t\t\ttransparent.length = 0;\n\n\t\t}\n\n\t\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\t\tif ( renderItem === undefined ) {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t}\n\n\t\t\trenderItemsIndex ++;\n\n\t\t\treturn renderItem;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\t}\n\n\t\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t\t}\n\n\t\tfunction sort() {\n\n\t\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tvar lists = new WeakMap();\n\n\t\tfunction onSceneDispose( event ) {\n\n\t\t\tvar scene = event.target;\n\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\t\tlists.delete( scene );\n\n\t\t}\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar cameras = lists.get( scene );\n\t\t\tvar list;\n\t\t\tif ( cameras === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.set( scene, new WeakMap() );\n\t\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t\t} else {\n\n\t\t\t\tlist = cameras.get( camera );\n\t\t\t\tif ( list === undefined ) {\n\n\t\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\t\tcameras.set( camera, list );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction UniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tvar nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\t\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n\t}\n\n\tfunction WebGLLights() {\n\n\t\tvar cache = new UniformsCache();\n\n\t\tvar state = {\n\n\t\t\tversion: 0,\n\n\t\t\thash: {\n\t\t\t\tdirectionalLength: - 1,\n\t\t\t\tpointLength: - 1,\n\t\t\t\tspotLength: - 1,\n\t\t\t\trectAreaLength: - 1,\n\t\t\t\themiLength: - 1,\n\n\t\t\t\tnumDirectionalShadows: - 1,\n\t\t\t\tnumPointShadows: - 1,\n\t\t\t\tnumSpotShadows: - 1,\n\t\t\t},\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: [],\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\n\t\t};\n\n\t\tfor ( var i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\t\tvar vector3 = new Vector3();\n\t\tvar matrix4 = new Matrix4();\n\t\tvar matrix42 = new Matrix4();\n\n\t\tfunction setup( lights, shadows, camera ) {\n\n\t\t\tvar r = 0, g = 0, b = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\t\tvar directionalLength = 0;\n\t\t\tvar pointLength = 0;\n\t\t\tvar spotLength = 0;\n\t\t\tvar rectAreaLength = 0;\n\t\t\tvar hemiLength = 0;\n\n\t\t\tvar numDirectionalShadows = 0;\n\t\t\tvar numPointShadows = 0;\n\t\t\tvar numSpotShadows = 0;\n\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tvar color = light.color;\n\t\t\t\tvar intensity = light.intensity;\n\t\t\t\tvar distance = light.distance;\n\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.ambient[ 0 ] = r;\n\t\t\tstate.ambient[ 1 ] = g;\n\t\t\tstate.ambient[ 2 ] = b;\n\n\t\t\tvar hash = state.hash;\n\n\t\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\t\thash.pointLength !== pointLength ||\n\t\t\t\thash.spotLength !== spotLength ||\n\t\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\t\thash.hemiLength !== hemiLength ||\n\t\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\t\tstate.version = nextVersion ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tstate: state\n\t\t};\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLRenderState() {\n\n\t\tvar lights = new WebGLLights();\n\n\t\tvar lightsArray = [];\n\t\tvar shadowsArray = [];\n\n\t\tfunction init() {\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t}\n\n\t\tfunction pushLight( light ) {\n\n\t\t\tlightsArray.push( light );\n\n\t\t}\n\n\t\tfunction pushShadow( shadowLight ) {\n\n\t\t\tshadowsArray.push( shadowLight );\n\n\t\t}\n\n\t\tfunction setupLights( camera ) {\n\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\t}\n\n\t\tvar state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\n\t\t\tlights: lights\n\t\t};\n\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderStates() {\n\n\t\tvar renderStates = new WeakMap();\n\n\t\tfunction onSceneDispose( event ) {\n\n\t\t\tvar scene = event.target;\n\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\t\trenderStates.delete( scene );\n\n\t\t}\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar renderState;\n\n\t\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates.set( scene, new WeakMap() );\n\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderStates.get( scene ).has( camera ) === false ) {\n\n\t\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderState = renderStates.get( scene ).get( camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn renderState;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\trenderStates = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  referencePosition: <float>,\n\t *  nearDistance: <float>,\n\t *  farDistance: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tfunction MeshDistanceMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t};\n\n\tvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n  float mean = 0.0;\\n  float squared_mean = 0.0;\\n  \\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n    #ifdef HORIZONAL_PASS\\n      vec2 distribution = decodeHalfRGBA ( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n      mean += distribution.x;\\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n    #else\\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\\n      mean += depth;\\n      squared_mean += depth * depth;\\n    #endif\\n  }\\n  mean = mean * HALF_SAMPLE_RATE;\\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\\n  float std_dev = pow( squared_mean - mean * mean, 0.5 );\\n  gl_FragColor = encodeHalfRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\t\tvar _frustum = new Frustum(),\n\n\t\t\t_shadowMapSize = new Vector2(),\n\t\t\t_viewportSize = new Vector2(),\n\n\t\t\t_viewport = new Vector4(),\n\n\t\t\t_MorphingFlag = 1,\n\t\t\t_SkinningFlag = 2,\n\n\t\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t\t_materialCache = {};\n\n\t\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\t\tvar shadowMaterialVertical = new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: { value: null },\n\t\t\t\tresolution: { value: new Vector2() },\n\t\t\t\tradius: { value: 4.0 }\n\t\t\t},\n\n\t\t\tvertexShader: vsm_vert,\n\n\t\t\tfragmentShader: vsm_frag\n\n\t\t} );\n\n\t\tvar shadowMaterialHorizonal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n\n\t\tvar fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.addAttribute(\n\t\t\t\"position\",\n\t\t\tnew BufferAttribute(\n\t\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t\t3\n\t\t\t)\n\t\t);\n\n\t\tvar fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\t\t// init\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function ( lights, scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( lights.length === 0 ) return;\n\n\t\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\t\tvar activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tvar _state = _renderer.state;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.setBlending( NoBlending );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\t\tvar shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has shadow exceeding max texture size, reducing' );\n\n\t\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tvar viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor ( var vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\t\tvar viewport = shadow.getViewport( vp );\n\n\t\t\t\t\t_viewport.set(\n\t\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t\t);\n\n\t\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\t\tshadow.updateMatrices( light, camera, vp );\n\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t\t}\n\n\t\t\t\t// do blur pass for VSM\n\n\t\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t\t};\n\n\t\tfunction VSMPass( shadow, camera ) {\n\n\t\t\tvar geometry = _objects.update( fullScreenMesh );\n\n\t\t\t// vertical pass\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t\t// horizonal pass\n\n\t\t\tshadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );\n\n\t\t}\n\n\t\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( light.isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif ( type === VSMShadowMap ) {\n\n\t\t\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : material.side;\n\n\t\t\t} else {\n\n\t\t\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t\t}\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( light.isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar enabledCapabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentProgram = null;\n\n\t\tvar currentBlendingEnabled = null;\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar maxTextures = gl.getParameter( 35661 );\n\n\t\tvar lineWidthAvailable = false;\n\t\tvar version = 0;\n\t\tvar glVersion = gl.getParameter( 7938 );\n\n\t\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t\t}\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, 10241, 9728 );\n\t\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\t\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t\t// init\n\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\tdepthBuffer.setClear( 1 );\n\t\tstencilBuffer.setClear( 0 );\n\n\t\tenable( 2929 );\n\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\tsetFlipSided( false );\n\t\tsetCullFace( CullFaceBack );\n\t\tenable( 2884 );\n\n\t\tsetBlending( NoBlending );\n\n\t\t//\n\n\t\tfunction initAttributes() {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getCompressedTextureFormats() {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( 34467 );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t}\n\n\t\tfunction useProgram( program ) {\n\n\t\t\tif ( currentProgram !== program ) {\n\n\t\t\t\tgl.useProgram( program );\n\n\t\t\t\tcurrentProgram = program;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending === NoBlending ) {\n\n\t\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\t\tdisable( 3042 );\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\t\tenable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = true;\n\n\t\t\t}\n\n\t\t\tif ( blending !== CustomBlending ) {\n\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// custom blending\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\n\t\t}\n\n\t\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( 2884 )\n\t\t\t\t: enable( 2884 );\n\n\t\t\tvar flipSided = ( material.side === BackSide );\n\t\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\t\tsetFlipSided( flipSided );\n\n\t\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t\t? setBlending( NoBlending )\n\t\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tvar stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest( stencilWrite );\n\t\t\tif ( stencilWrite ) {\n\n\t\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilMask );\n\t\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t\t}\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( 2884 );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 2884 );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( 32823 );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 32823 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( 3089 );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 3089 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tenabledCapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentProgram = null;\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\t\tuseProgram: useProgram,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\t\tvar _videoTextures = new WeakMap();\n\t\tvar _canvas;\n\n\t\t//\n\n\t\tvar useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined';\n\n\t\tfunction createCanvas( width, height ) {\n\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\t\treturn useOffscreenCanvas ?\n\t\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t}\n\n\t\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\t\tvar scale = 1;\n\n\t\t\t// handle case if texture exceeds max size\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t}\n\n\t\t\t// only perform resize if necessary\n\n\t\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t\t// only perform resize for certain image types\n\n\t\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\t\tvar floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor;\n\n\t\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\n\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\t\treturn canvas;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t\t_gl.generateMipmap( target );\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t\t}\n\n\t\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\t\tvar internalFormat = glFormat;\n\n\t\t\tif ( glFormat === 6403 ) {\n\n\t\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t\t}\n\n\t\t\tif ( glFormat === 6407 ) {\n\n\t\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t\t}\n\n\t\t\tif ( glFormat === 6408 ) {\n\n\t\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t\t}\n\n\t\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t\t} else if ( internalFormat === 34843 || internalFormat === 34837 ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' );\n\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\t\treturn 9728;\n\n\t\t\t}\n\n\t\t\treturn 9729;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t\t_videoTextures.delete( texture );\n\n\t\t\t}\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.remove( renderTarget.texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tvar textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\n\t\t\ttextureUnits = 0;\n\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\n\t\t\tvar textureUnit = textureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture2DArray( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture3D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tif ( texture.image.length !== 6 ) return;\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\t\tvar mipmaps;\n\n\t\t\t\tif ( isCompressed ) {\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\t\tvar mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( supportsMips ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) );\n\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, utils.convert( texture.wrapR ) );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initTexture( textureProperties, texture ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tvar textureType = 3553;\n\n\t\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\n\t\t\tvar supportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( 34067, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( 3553, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t\tvar width = renderTarget.width;\n\t\t\t\t\tvar height = renderTarget.height;\n\t\t\t\t\tvar mask = 16384;\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\t\treturn ( capabilities.isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\t\tMath.min( capabilities.maxSamples, renderTarget.samples ) : 0;\n\n\t\t}\n\n\t\tfunction updateVideoTexture( texture ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\t// Check the last frame we updated the VideoTexture\n\n\t\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t\t_videoTextures.set( texture, frame );\n\t\t\t\ttexture.update();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// backwards compatibility\n\n\t\tvar warnedTexture2D = false;\n\t\tvar warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarnedTexture2D = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( texture, slot );\n\n\t\t}\n\n\t\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarnedTextureCube = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\tsetTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\t\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\n\t}\n\n\t/**\n\t * @author thespite / http://www.twitter.com/thespite\n\t */\n\n\tfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\t\tfunction convert( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === RepeatWrapping ) return 10497;\n\t\t\tif ( p === ClampToEdgeWrapping ) return 33071;\n\t\t\tif ( p === MirroredRepeatWrapping ) return 33648;\n\n\t\t\tif ( p === NearestFilter ) return 9728;\n\t\t\tif ( p === NearestMipmapNearestFilter ) return 9984;\n\t\t\tif ( p === NearestMipmapLinearFilter ) return 9986;\n\n\t\t\tif ( p === LinearFilter ) return 9729;\n\t\t\tif ( p === LinearMipmapNearestFilter ) return 9985;\n\t\t\tif ( p === LinearMipmapLinearFilter ) return 9987;\n\n\t\t\tif ( p === UnsignedByteType ) return 5121;\n\t\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\t\tif ( p === ByteType ) return 5120;\n\t\t\tif ( p === ShortType ) return 5122;\n\t\t\tif ( p === UnsignedShortType ) return 5123;\n\t\t\tif ( p === IntType ) return 5124;\n\t\t\tif ( p === UnsignedIntType ) return 5125;\n\t\t\tif ( p === FloatType ) return 5126;\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) return 5131;\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) return 6406;\n\t\t\tif ( p === RGBFormat ) return 6407;\n\t\t\tif ( p === RGBAFormat ) return 6408;\n\t\t\tif ( p === LuminanceFormat ) return 6409;\n\t\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\t\tif ( p === DepthFormat ) return 6402;\n\t\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\t\tif ( p === RedFormat ) return 6403;\n\n\t\t\tif ( p === AddEquation ) return 32774;\n\t\t\tif ( p === SubtractEquation ) return 32778;\n\t\t\tif ( p === ReverseSubtractEquation ) return 32779;\n\n\t\t\tif ( p === ZeroFactor ) return 0;\n\t\t\tif ( p === OneFactor ) return 1;\n\t\t\tif ( p === SrcColorFactor ) return 768;\n\t\t\tif ( p === OneMinusSrcColorFactor ) return 769;\n\t\t\tif ( p === SrcAlphaFactor ) return 770;\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return 771;\n\t\t\tif ( p === DstAlphaFactor ) return 772;\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return 773;\n\n\t\t\tif ( p === DstColorFactor ) return 774;\n\t\t\tif ( p === OneMinusDstColorFactor ) return 775;\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return 776;\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn p;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return 32775;\n\t\t\t\t\tif ( p === MaxEquation ) return 32776;\n\n\t\t\t\t}\n\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) return 34042;\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\treturn { convert: convert };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group,\n\n\t\tisGroup: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ArrayCamera( array ) {\n\n\t\tPerspectiveCamera.call( this );\n\n\t\tthis.cameras = array || [];\n\n\t}\n\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\t\tconstructor: ArrayCamera,\n\n\t\tisArrayCamera: true\n\n\t} );\n\n\t/**\n\t * @author jsantell / https://www.jsantell.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar cameraLPos = new Vector3();\n\tvar cameraRPos = new Vector3();\n\n\t/**\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */\n\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\tvar projL = cameraL.projectionMatrix.elements;\n\t\tvar projR = cameraR.projectionMatrix.elements;\n\n\t\t// VR systems will have identical far and near planes, and\n\t\t// most likely identical top and bottom frustum extents.\n\t\t// Use the left camera for these values.\n\t\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\tvar left = near * leftFov;\n\t\tvar right = near * rightFov;\n\n\t\t// Calculate the new camera's position offset from the\n\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\tvar zOffset = ipd / ( - leftFov + rightFov );\n\t\tvar xOffset = zOffset * - leftFov;\n\n\t\t// TODO: Better way to apply this offset?\n\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.translateX( xOffset );\n\t\tcamera.translateZ( zOffset );\n\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t// Find the union of the frustum values of the cameras and scale\n\t\t// the values so that the near plane's position does not change in world space,\n\t\t// although must now be relative to the new union camera.\n\t\tvar near2 = near + zOffset;\n\t\tvar far2 = far + zOffset;\n\t\tvar left2 = left - xOffset;\n\t\tvar right2 = right + ( ipd - xOffset );\n\t\tvar top2 = topFov * far / far2 * near2;\n\t\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebVRManager( renderer ) {\n\n\t\tvar renderWidth, renderHeight;\n\t\tvar scope = this;\n\n\t\tvar device = null;\n\t\tvar frameData = null;\n\n\t\tvar poseTarget = null;\n\n\t\tvar controllers = [];\n\t\tvar standingMatrix = new Matrix4();\n\t\tvar standingMatrixInverse = new Matrix4();\n\n\t\tvar framebufferScaleFactor = 1.0;\n\n\t\tvar referenceSpaceType = 'local-floor';\n\n\t\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\t\tframeData = new window.VRFrameData();\n\t\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t\t}\n\n\t\tvar matrixWorldInverse = new Matrix4();\n\t\tvar tempQuaternion = new Quaternion();\n\t\tvar tempPosition = new Vector3();\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.viewport = new Vector4();\n\t\tcameraL.layers.enable( 1 );\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.viewport = new Vector4();\n\t\tcameraR.layers.enable( 2 );\n\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\t//\n\n\t\tfunction isPresenting() {\n\n\t\t\treturn device !== null && device.isPresenting === true;\n\n\t\t}\n\n\t\tvar currentSize = new Vector2(), currentPixelRatio;\n\n\t\tfunction onVRDisplayPresentChange() {\n\n\t\t\tif ( isPresenting() ) {\n\n\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\t\trenderWidth = 2 * eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\t\trenderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\trenderer.setDrawingBufferSize( renderWidth, renderHeight, 1 );\n\n\t\t\t\tcameraL.viewport.set( 0, 0, renderWidth / 2, renderHeight );\n\t\t\t\tcameraR.viewport.set( renderWidth / 2, 0, renderWidth / 2, renderHeight );\n\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t} else {\n\n\t\t\t\tif ( scope.enabled ) {\n\n\t\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t\t}\n\n\t\t\t\tanimation.stop();\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar triggers = [];\n\n\t\tfunction findGamepad( id ) {\n\n\t\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\t\tgamepad.id.startsWith( 'HTC Vive Focus' ) ||\n\t\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\t\tj ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateControllers() {\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tvar controller = controllers[ i ];\n\n\t\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t\t// Pose\n\n\t\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\t// Trigger\n\n\t\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\t\tif ( triggers[ i ] === undefined ) triggers[ i ] = false;\n\n\t\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontroller.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateViewportFromBounds( viewport, bounds ) {\n\n\t\t\tif ( bounds !== null && bounds.length === 4 ) {\n\n\t\t\t\tviewport.set( bounds[ 0 ] * renderWidth, bounds[ 1 ] * renderHeight, bounds[ 2 ] * renderWidth, bounds[ 3 ] * renderHeight );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.getController = function ( id ) {\n\n\t\t\tvar controller = controllers[ id ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new Group();\n\t\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t\tcontrollers[ id ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller;\n\n\t\t};\n\n\t\tthis.getDevice = function () {\n\n\t\t\treturn device;\n\n\t\t};\n\n\t\tthis.setDevice = function ( value ) {\n\n\t\t\tif ( value !== undefined ) device = value;\n\n\t\t\tanimation.setContext( value );\n\n\t\t};\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t};\n\n\t\tthis.setPoseTarget = function ( object ) {\n\n\t\t\tif ( object !== undefined ) poseTarget = object;\n\n\t\t};\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tvar userHeight = referenceSpaceType === 'local-floor' ? 1.6 : 0;\n\n\t\t\tif ( isPresenting() === false ) {\n\n\t\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\t\tcamera.rotation.set( 0, 0, 0 );\n\n\t\t\t\treturn camera;\n\n\t\t\t}\n\n\t\t\tdevice.depthNear = camera.near;\n\t\t\tdevice.depthFar = camera.far;\n\n\t\t\tdevice.getFrameData( frameData );\n\n\t\t\t//\n\n\t\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\t\tif ( stageParameters ) {\n\n\t\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar pose = frameData.pose;\n\t\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\t\tposeObject.matrix.copy( standingMatrix );\n\t\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\t\tif ( pose.orientation !== null ) {\n\n\t\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t\t}\n\n\t\t\tif ( pose.position !== null ) {\n\n\t\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\t\ttempPosition.fromArray( pose.position );\n\t\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\t\tposeObject.position.add( tempPosition );\n\n\t\t\t}\n\n\t\t\tposeObject.updateMatrixWorld();\n\n\t\t\t//\n\n\t\t\tcameraL.near = camera.near;\n\t\t\tcameraR.near = camera.near;\n\n\t\t\tcameraL.far = camera.far;\n\t\t\tcameraR.far = camera.far;\n\n\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t\t// TODO (mrdoob) Double check this code\n\n\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tvar parent = poseObject.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t//\n\n\t\t\tvar layers = device.getLayers();\n\n\t\t\tif ( layers.length ) {\n\n\t\t\t\tvar layer = layers[ 0 ];\n\n\t\t\t\tupdateViewportFromBounds( cameraL.viewport, layer.leftBounds );\n\t\t\t\tupdateViewportFromBounds( cameraR.viewport, layer.rightBounds );\n\n\t\t\t}\n\n\t\t\tupdateControllers();\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getStandingMatrix = function () {\n\n\t\t\treturn standingMatrix;\n\n\t\t};\n\n\t\tthis.isPresenting = isPresenting;\n\n\t\t// Animation Loop\n\n\t\tvar animation = new WebGLAnimation();\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tanimation.setAnimationLoop( callback );\n\n\t\t\tif ( isPresenting() ) animation.start();\n\n\t\t};\n\n\t\tthis.submitFrame = function () {\n\n\t\t\tif ( isPresenting() ) device.submitFrame();\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tthis.setFrameOfReferenceType = function () {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t\t};\n\n\t}\n\n\tObject.assign( WebVRManager.prototype, EventDispatcher.prototype );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebXRManager( renderer, gl ) {\n\n\t\tvar scope = this;\n\n\t\tvar session = null;\n\n\t\tvar referenceSpace = null;\n\t\tvar referenceSpaceType = 'local-floor';\n\n\t\tvar pose = null;\n\n\t\tvar controllers = [];\n\t\tvar inputSources = [];\n\n\t\tfunction isPresenting() {\n\n\t\t\treturn session !== null && referenceSpace !== null;\n\n\t\t}\n\n\t\t//\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.getController = function ( id ) {\n\n\t\t\tvar controller = controllers[ id ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new Group();\n\t\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t\tcontrollers[ id ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller;\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tif ( inputSources[ i ] === event.inputSource ) {\n\n\t\t\t\t\tcontrollers[ i ].dispatchEvent( { type: event.type } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\trenderer.setFramebuffer( null );\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\t\tanimation.stop();\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tfunction onRequestReferenceSpace( value ) {\n\n\t\t\treferenceSpace = value;\n\n\t\t\tanimation.setContext( session );\n\t\t\tanimation.start();\n\n\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\t\tsession.updateRenderState( { baseLayer: new XRWebGLLayer( session, gl ) } );\n\n\t\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t\t//\n\n\t\t\t\tinputSources = session.inputSources;\n\n\t\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\t\tinputSources = session.inputSources;\n\t\t\t\t\tconsole.log( inputSources );\n\n\t\t\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tvar controller = controllers[ i ];\n\t\t\t\t\t\tcontroller.userData.inputSource = inputSources[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t}\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tif ( isPresenting() ) {\n\n\t\t\t\tvar parent = camera.parent;\n\t\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera and its children\n\n\t\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\t\tvar children = camera.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t\t}\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t\treturn cameraVR;\n\n\t\t\t}\n\n\t\t\treturn camera;\n\n\t\t};\n\n\t\tthis.isPresenting = isPresenting;\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tvar views = pose.views;\n\t\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tvar view = views[ i ];\n\t\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\t\t\t\t\tvar viewMatrix = view.transform.inverse.matrix;\n\n\t\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tvar controller = controllers[ i ];\n\n\t\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\t\tif ( inputSource ) {\n\n\t\t\t\t\tvar inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\tcontroller.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t\t// DEPRECATED\n\n\t\tthis.getStandingMatrix = function () {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\t\treturn new Matrix4();\n\n\t\t};\n\n\t\tthis.getDevice = function () {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: getDevice() has been deprecated.' );\n\n\t\t};\n\n\t\tthis.setDevice = function () {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: setDevice() has been deprecated.' );\n\n\t\t};\n\n\t\tthis.setFrameOfReferenceType = function () {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t\t};\n\n\t\tthis.submitFrame = function () {};\n\n\t}\n\n\tObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tvar currentRenderList = null;\n\t\tvar currentRenderState = null;\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t\t_isContextLost = false,\n\n\t\t\t// internal state cache\n\n\t\t\t_framebuffer = null,\n\n\t\t\t_currentActiveCubeFace = 0,\n\t\t\t_currentActiveMipmapLevel = 0,\n\t\t\t_currentRenderTarget = null,\n\t\t\t_currentFramebuffer = null,\n\t\t\t_currentMaterialId = - 1,\n\n\t\t\t// geometry and program caching\n\n\t\t\t_currentGeometryProgram = {\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false\n\t\t\t},\n\n\t\t\t_currentCamera = null,\n\t\t\t_currentArrayCamera = null,\n\n\t\t\t_currentViewport = new Vector4(),\n\t\t\t_currentScissor = new Vector4(),\n\t\t\t_currentScissorTest = null,\n\n\t\t\t//\n\n\t\t\t_width = _canvas.width,\n\t\t\t_height = _canvas.height,\n\n\t\t\t_pixelRatio = 1,\n\n\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissorTest = false,\n\n\t\t\t// frustum\n\n\t\t\t_frustum = new Frustum(),\n\n\t\t\t// clipping\n\n\t\t\t_clipping = new WebGLClipping(),\n\t\t\t_clippingEnabled = false,\n\t\t\t_localClippingEnabled = false,\n\n\t\t\t// camera matrices cache\n\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_vector3 = new Vector3();\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\n\t\t\t\txrCompatible: true\n\t\t\t};\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tvar extensions, capabilities, state, info;\n\t\tvar properties, textures, attributes, geometries, objects;\n\t\tvar programCache, renderLists, renderStates;\n\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tvar utils;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\t\textensions.get( 'OES_texture_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\t\tobjects = new WebGLObjects( geometries, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates();\n\n\t\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// vr\n\n\t\tvar vr = ( typeof navigator !== 'undefined' && 'xr' in navigator && 'supportsSession' in navigator.xr ) ? new WebXRManager( _this, _gl ) : new WebVRManager( _this );\n\n\t\tthis.vr = vr;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\t\tthis.shadowMap = shadowMap;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\tif ( vr.isPresenting() ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\t\ttarget = new Vector4();\n\n\t\t\t}\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn background.getClearColor();\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= 16384;\n\t\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tobjects.dispose();\n\n\t\t\tvr.dispose();\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tinitGLContext();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tfunction renderObjectImmediate( object, program ) {\n\n\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( 34963, attribute.buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = Infinity;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) return;\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( 0 );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry && ! capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.material ) {\n\n\t\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( vr.isPresenting() ) return;\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\tvr.setAnimationLoop( callback );\n\n\t\t\tanimation.start();\n\n\t\t};\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tvar renderTarget, forceClear;\n\n\t\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t\t}\n\n\t\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\t\tforceClear = arguments[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost ) return;\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tcamera = vr.getCamera( camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\tcurrentRenderList.init();\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t\t// render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tvr.submitFrame();\n\n\t\t\t}\n\n\t\t\t// _gl.finish();\n\n\t\t\tcurrentRenderList = null;\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\tstate.setMaterial( material );\n\n\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t\t_currentGeometryProgram.program = null;\n\t\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\t\trenderObjectImmediate( object, program );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar lights = currentRenderState.state.lights;\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tvar lightsStateVersion = lights.state.version;\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\t\tprogramChange = false;\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.fog = fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tvar materialProperties = properties.get( material );\n\t\t\tvar lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate === false ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.lights && materialProperties.lightsStateVersion !== lights.state.version ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\t\tm_uniforms.color.value.copy( material.color );\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t\t}\n\n\t\t\t\t// RectAreaLight Texture\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif ( material.color ) {\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t\t}\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( material.specularMap ) {\n\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _height * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniforms.transparency.value = material.transparency;\n\n\t\t}\n\n\t\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\t\tif ( material.matcap ) {\n\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\n\t\t}\n\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t//\n\t\tthis.setFramebuffer = function ( value ) {\n\n\t\t\tif ( _framebuffer !== value ) _gl.bindFramebuffer( 36160, value );\n\n\t\t\t_framebuffer = value;\n\n\t\t};\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipmapLevel ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar framebuffer = _framebuffer;\n\t\t\tvar isCube = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipmapLevel || 0 );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\t\tvar width = texture.image.width;\n\t\t\tvar height = texture.image.height;\n\t\t\tvar glFormat = utils.convert( texture.format );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\t\tvar width = srcTexture.image.width;\n\t\t\tvar height = srcTexture.image.height;\n\t\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tObject.assign( FogExp2.prototype, {\n\n\t\tisFogExp2: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new FogExp2( this.color, this.density );\n\n\t\t},\n\n\t\ttoJSON: function ( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tObject.assign( Fog.prototype, {\n\n\t\tisFog: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new Fog( this.color, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\n\t\tisInterleavedBuffer: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\t\tthis.array = array;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\t\tcount: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.count;\n\n\t\t\t}\n\n\t\t},\n\n\t\tarray: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.array;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBufferAttribute.prototype, {\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  rotation: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar _geometry;\n\n\tvar _intersectPoint = new Vector3();\n\tvar _worldScale = new Vector3();\n\tvar _mvPosition = new Vector3();\n\n\tvar _alignedPosition = new Vector2();\n\tvar _rotatedPosition = new Vector2();\n\tvar _viewWorldMatrix = new Matrix4();\n\n\tvar _vA$1 = new Vector3();\n\tvar _vB$1 = new Vector3();\n\tvar _vC$1 = new Vector3();\n\n\tvar _uvA$1 = new Vector2();\n\tvar _uvB$1 = new Vector2();\n\tvar _uvC$1 = new Vector2();\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tvar float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t\t}\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t\t_uvA$1.set( 0, 0 );\n\t\t\t_uvB$1.set( 1, 0 );\n\t\t\t_uvC$1.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t\t_uvB$1.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\t\treturn this;\n\n\t\t}\n\n\n\t} );\n\n\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t// to check if rotation is not zero\n\t\tif ( sin !== undefined ) {\n\n\t\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t\t} else {\n\n\t\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t\t}\n\n\n\t\tvertexPosition.copy( mvPosition );\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y;\n\n\t\t// transform to world space\n\t\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n\t}\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _v1$4 = new Vector3();\n\tvar _v2$2 = new Vector3();\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tisLOD: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\t_v1$4.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( _v1$4 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t},\n\n\t\tupdate: function ( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t_v1$4.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t_v2$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = _v1$4.distanceTo( _v2$2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material ) {\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tbind: function ( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tvar vector = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\t\tvector.x = skinWeight.getX( i );\n\t\t\t\tvector.y = skinWeight.getY( i );\n\t\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tvar _offsetMatrix = new Matrix4();\n\tvar _identityMatrix = new Matrix4();\n\n\tfunction Skeleton( bones, boneInverses ) {\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone, i, il;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t},\n\n\t\tgetBoneByName: function ( name ) {\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar bone = this.bones[ i ];\n\n\t\t\t\tif ( bone.name === name ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _start = new Vector3();\n\tvar _end = new Vector3();\n\tvar _inverseMatrix$1 = new Matrix4();\n\tvar _ray$1 = new Ray();\n\tvar _sphere$2 = new Sphere();\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere );\n\t\t\t_sphere$2.applyMatrix4( matrixWorld );\n\t\t\t_sphere$2.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$1.getInverse( matrixWorld );\n\t\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _start$1 = new Vector3();\n\tvar _end$1 = new Vector3();\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true,\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t_start$1.copy( vertices[ i ] );\n\t\t\t\t\t_end$1.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mgreter / http://github.com/mgreter\n\t */\n\n\tfunction LineLoop( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineLoop,\n\n\t\tisLineLoop: true,\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t *\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar _inverseMatrix$2 = new Matrix4();\n\tvar _ray$2 = new Ray();\n\tvar _sphere$3 = new Sphere();\n\tvar _position$1 = new Vector3();\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t\t_sphere$3.applyMatrix4( matrixWorld );\n\t\t\t_sphere$3.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$2.getInverse( matrixWorld );\n\t\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t_position$1.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t_position$1.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( _position$1, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar m, ml, name;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\tfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\t\tvar rayPointDistanceSq = _ray$2.distanceSqToPoint( point );\n\n\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\t_ray$2.closestPointToPoint( point, intersectPoint );\n\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.format = format !== undefined ? format : RGBFormat;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\t\tconstructor: VideoTexture,\n\n\t\tisVideoTexture: true,\n\n\t\tupdate: function () {\n\n\t\t\tvar video = this.image;\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar i, j, l, o, ol;\n\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\t\tvar vertex;\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tvar position, indices, groups;\n\t\t\tvar group, start, count;\n\t\t\tvar index1, index2;\n\n\t\t\tvertex = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\t\t\t\tindices = geometry.index;\n\t\t\t\tgroups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\t\tstart = group.start;\n\t\t\t\t\tcount = group.count;\n\n\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( key in edges ) {\n\n\t\t\t\t\te = edges[ key ];\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\n\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\t// ParametricGeometry\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t// ParametricBufferGeometry\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar EPS = 0.00001;\n\n\t\tvar normal = new Vector3();\n\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\tvar pu = new Vector3(), pv = new Vector3();\n\n\t\tvar i, j;\n\n\t\tif ( func.length < 3 ) {\n\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t\t}\n\n\t\t// generate vertices, normals and uvs\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tvar u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tfunc( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\tvar a = i * sliceCount + j;\n\t\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PolyhedronGeometry\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t// PolyhedronBufferGeometry\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\tvar i, j;\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TetrahedronGeometry\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t// TetrahedronBufferGeometry\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// OctahedronGeometry\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t// OctahedronBufferGeometry\n\n\tfunction OctahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// IcosahedronGeometry\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t// IcosahedronBufferGeometry\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// DodecahedronGeometry\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t// DodecahedronBufferGeometry\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t, 0, - r, t,\n\t\t\t 0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\t r, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */\n\n\t// TubeGeometry\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t// TubeBufferGeometry\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar P = new Vector3();\n\n\t\tvar i, j;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin = Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\tTubeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */\n\n\t// TorusKnotGeometry\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t// TorusKnotBufferGeometry\n\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, j;\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TorusGeometry\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t// TorusBufferGeometry\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * Port from https://github.com/mapbox/earcut (v2.1.5)\n\t */\n\n\tvar Earcut = {\n\n\t\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\t\tdim = dim || 2;\n\n\t\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\t\ttriangles = [];\n\n\t\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\t\tif ( data.length > 80 * dim ) {\n\n\t\t\t\tminX = maxX = data[ 0 ];\n\t\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\t\tx = data[ i ];\n\t\t\t\t\ty = data[ i + 1 ];\n\t\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t\t}\n\n\t\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t\t}\n\n\t\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\t\treturn triangles;\n\n\t\t}\n\n\t};\n\n\t// create a circular doubly linked list from polygon points in the specified winding order\n\tfunction linkedList( data, start, end, dim, clockwise ) {\n\n\t\tvar i, last;\n\n\t\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t\t} else {\n\n\t\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t\t}\n\n\t\tif ( last && equals( last, last.next ) ) {\n\n\t\t\tremoveNode( last );\n\t\t\tlast = last.next;\n\n\t\t}\n\n\t\treturn last;\n\n\t}\n\n\t// eliminate colinear or duplicate points\n\tfunction filterPoints( start, end ) {\n\n\t\tif ( ! start ) return start;\n\t\tif ( ! end ) end = start;\n\n\t\tvar p = start,\n\t\t\tagain;\n\t\tdo {\n\n\t\t\tagain = false;\n\n\t\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\t\tremoveNode( p );\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif ( p === p.next ) break;\n\t\t\t\tagain = true;\n\n\t\t\t} else {\n\n\t\t\t\tp = p.next;\n\n\t\t\t}\n\n\t\t} while ( again || p !== end );\n\n\t\treturn end;\n\n\t}\n\n\t// main ear slicing loop which triangulates a polygon (given as a linked list)\n\tfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\t\tif ( ! ear ) return;\n\n\t\t// interlink polygon nodes in z-order\n\t\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\t\tvar stop = ear,\n\t\t\tprev, next;\n\n\t\t// iterate through ears, slicing them one by one\n\t\twhile ( ear.prev !== ear.next ) {\n\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push( prev.i / dim );\n\t\t\t\ttriangles.push( ear.i / dim );\n\t\t\t\ttriangles.push( next.i / dim );\n\n\t\t\t\tremoveNode( ear );\n\n\t\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tear = next;\n\n\t\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\t\tif ( ear === stop ) {\n\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif ( ! pass ) {\n\n\t\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// check whether a polygon node forms a valid ear with adjacent nodes\n\tfunction isEar( ear ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t\t// now make sure we don't have other points inside the potential ear\n\t\tvar p = ear.next.next;\n\n\t\twhile ( p !== ear.prev ) {\n\n\t\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\t\tp = p.next;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t\t// triangle bbox; min & max are calculated like this for speed\n\t\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t\t// z-order range for the current triangle bbox;\n\t\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t\tvar p = ear.prevZ,\n\t\t\tn = ear.nextZ;\n\n\t\t// look for points inside the triangle in both directions\n\t\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\t\tp = p.prevZ;\n\n\t\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\t// look for remaining points in decreasing z-order\n\t\twhile ( p && p.z >= minZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\t\tp = p.prevZ;\n\n\t\t}\n\n\t\t// look for remaining points in increasing z-order\n\t\twhile ( n && n.z <= maxZ ) {\n\n\t\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t// go through all polygon nodes and cure small local self-intersections\n\tfunction cureLocalIntersections( start, triangles, dim ) {\n\n\t\tvar p = start;\n\t\tdo {\n\n\t\t\tvar a = p.prev,\n\t\t\t\tb = p.next.next;\n\n\t\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\t\ttriangles.push( a.i / dim );\n\t\t\t\ttriangles.push( p.i / dim );\n\t\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t\t// remove two nodes involved\n\t\t\t\tremoveNode( p );\n\t\t\t\tremoveNode( p.next );\n\n\t\t\t\tp = start = b;\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn p;\n\n\t}\n\n\t// try splitting polygon into two and triangulate them independently\n\tfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tvar a = start;\n\t\tdo {\n\n\t\t\tvar b = a.next.next;\n\t\t\twhile ( b !== a.prev ) {\n\n\t\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t\t// filter colinear points around the cuts\n\t\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t\t// run earcut on each half\n\t\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\n\t\t\t}\n\n\t\t\ta = a.next;\n\n\t\t} while ( a !== start );\n\n\t}\n\n\t// link every hole into the outer loop, producing a single-ring polygon without holes\n\tfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\t\tvar queue = [],\n\t\t\ti, len, start, end, list;\n\n\t\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\t\tstart = holeIndices[ i ] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\t\tlist = linkedList( data, start, end, dim, false );\n\t\t\tif ( list === list.next ) list.steiner = true;\n\t\t\tqueue.push( getLeftmost( list ) );\n\n\t\t}\n\n\t\tqueue.sort( compareX );\n\n\t\t// process holes from left to right\n\t\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\t\teliminateHole( queue[ i ], outerNode );\n\t\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t\t}\n\n\t\treturn outerNode;\n\n\t}\n\n\tfunction compareX( a, b ) {\n\n\t\treturn a.x - b.x;\n\n\t}\n\n\t// find a bridge between vertices that connects hole with an outer ring and and link it\n\tfunction eliminateHole( hole, outerNode ) {\n\n\t\touterNode = findHoleBridge( hole, outerNode );\n\t\tif ( outerNode ) {\n\n\t\t\tvar b = splitPolygon( outerNode, hole );\n\t\t\tfilterPoints( b, b.next );\n\n\t\t}\n\n\t}\n\n\t// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\tfunction findHoleBridge( hole, outerNode ) {\n\n\t\tvar p = outerNode,\n\t\t\thx = hole.x,\n\t\t\thy = hole.y,\n\t\t\tqx = - Infinity,\n\t\t\tm;\n\n\t\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\t\tdo {\n\n\t\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\t\tqx = x;\n\t\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== outerNode );\n\n\t\tif ( ! m ) return null;\n\n\t\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tvar stop = m,\n\t\t\tmx = m.x,\n\t\t\tmy = m.y,\n\t\t\ttanMin = Infinity,\n\t\t\ttan;\n\n\t\tp = m.next;\n\n\t\twhile ( p !== stop ) {\n\n\t\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t\treturn m;\n\n\t}\n\n\t// interlink polygon nodes in z-order\n\tfunction indexCurve( start, minX, minY, invSize ) {\n\n\t\tvar p = start;\n\t\tdo {\n\n\t\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\n\t\tsortLinked( p );\n\n\t}\n\n\t// Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\tfunction sortLinked( list ) {\n\n\t\tvar i, p, q, e, tail, numMerges, pSize, qSize,\n\t\t\tinSize = 1;\n\n\t\tdo {\n\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile ( p ) {\n\n\t\t\t\tnumMerges ++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\t\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\t\tpSize ++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif ( ! q ) break;\n\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize --;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize --;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\t\telse list = e;\n\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\n\t\t} while ( numMerges > 1 );\n\n\t\treturn list;\n\n\t}\n\n\t// z-order of a point given coords and inverse of the longer side of data bbox\n\tfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * ( x - minX ) * invSize;\n\t\ty = 32767 * ( y - minY ) * invSize;\n\n\t\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\t\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\t\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\t\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\t\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\t\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\t\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\t\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\t\treturn x | ( y << 1 );\n\n\t}\n\n\t// find the leftmost node of a polygon ring\n\tfunction getLeftmost( start ) {\n\n\t\tvar p = start,\n\t\t\tleftmost = start;\n\t\tdo {\n\n\t\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn leftmost;\n\n\t}\n\n\t// check if a point lies within a convex triangle\n\tfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\t\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t   ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t   ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n\t}\n\n\t// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\tfunction isValidDiagonal( a, b ) {\n\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\t\t   locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n\t}\n\n\t// signed area of a triangle\n\tfunction area( p, q, r ) {\n\n\t\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n\t}\n\n\t// check if two points are equal\n\tfunction equals( p1, p2 ) {\n\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\n\t}\n\n\t// check if two segments intersect\n\tfunction intersects( p1, q1, p2, q2 ) {\n\n\t\tif ( ( equals( p1, p2 ) && equals( q1, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\t\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t   area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n\t}\n\n\t// check if a polygon diagonal intersects any polygon segments\n\tfunction intersectsPolygon( a, b ) {\n\n\t\tvar p = a;\n\t\tdo {\n\n\t\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn false;\n\n\t}\n\n\t// check if a polygon diagonal is locally inside the polygon\n\tfunction locallyInside( a, b ) {\n\n\t\treturn area( a.prev, a, a.next ) < 0 ?\n\t\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n\t}\n\n\t// check if the middle point of a polygon diagonal is inside the polygon\n\tfunction middleInside( a, b ) {\n\n\t\tvar p = a,\n\t\t\tinside = false,\n\t\t\tpx = ( a.x + b.x ) / 2,\n\t\t\tpy = ( a.y + b.y ) / 2;\n\t\tdo {\n\n\t\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\t\tinside = ! inside;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn inside;\n\n\t}\n\n\t// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\tfunction splitPolygon( a, b ) {\n\n\t\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\t\tan = a.next,\n\t\t\tbp = b.prev;\n\n\t\ta.next = b;\n\t\tb.prev = a;\n\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\n\t\treturn b2;\n\n\t}\n\n\t// create a node and optionally link it with previous one (in a circular doubly linked list)\n\tfunction insertNode( i, x, y, last ) {\n\n\t\tvar p = new Node( i, x, y );\n\n\t\tif ( ! last ) {\n\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\n\t\t} else {\n\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\n\t\t}\n\n\t\treturn p;\n\n\t}\n\n\tfunction removeNode( p ) {\n\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\n\t\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\t\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n\t}\n\n\tfunction Node( i, x, y ) {\n\n\t\t// vertex index in coordinates array\n\t\tthis.i = i;\n\n\t\t// vertex coordinates\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\t// previous and next vertex nodes in a polygon ring\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\n\t\t// z-order curve value\n\t\tthis.z = null;\n\n\t\t// previous and next nodes in z-order\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null;\n\n\t\t// indicates whether this is a steiner point\n\t\tthis.steiner = false;\n\n\t}\n\n\tfunction signedArea( data, start, end, dim ) {\n\n\t\tvar sum = 0;\n\t\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\t\tj = i;\n\n\t\t}\n\n\t\treturn sum;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\t\tvar holeIndices = []; // array of hole indices\n\t\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\taddContour( vertices, contour );\n\n\t\t\t//\n\n\t\t\tvar holeIndex = contour.length;\n\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\t\tholeIndices.push( holeIndex );\n\t\t\t\tholeIndex += holes[ i ].length;\n\t\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t\t}\n\n\t\t\treturn faces;\n\n\t\t}\n\n\t};\n\n\tfunction removeDupEndPts( points ) {\n\n\t\tvar l = points.length;\n\n\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.pop();\n\n\t\t}\n\n\t}\n\n\tfunction addContour( vertices, contour ) {\n\n\t\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\t\tvertices.push( contour[ i ].x );\n\t\t\tvertices.push( contour[ i ].y );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  depth: <float>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float>, // how far from shape outline does bevel start\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\t// ExtrudeGeometry\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\tExtrudeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t// ExtrudeBufferGeometry\n\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tvar scope = this;\n\n\t\tvar verticesArray = [];\n\t\tvar uvArray = [];\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar placeholder = [];\n\n\t\t\t// options\n\n\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tvar extrudePath = options.extrudePath;\n\n\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar extrudePts, extrudeByPath = false;\n\t\t\tvar splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tvar ahole, h, hl; // looping of holes\n\n\t\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tvar vertices = shapePoints.shape;\n\t\t\tvar holes = shapePoints.holes;\n\n\t\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tvar b, bs, t, z,\n\t\t\t\tvert, vlen = vertices.length,\n\t\t\t\tface, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tvar contourMovements = [];\n\n\t\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tvar holesMovements = [],\n\t\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tt = b / bevelSegments;\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tvar s;\n\n\t\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tt = b / bevelSegments;\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\t\t\t\tvar layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tvar j, k;\n\t\t\t\ti = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tj = i;\n\t\t\t\t\tk = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tvar s = 0,\n\t\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n\tExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t//\n\n\tvar WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\tfunction toJSON( shapes, options, data ) {\n\n\t\t//\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float> // how far from text outline does bevel start\n\t * }\n\t */\n\n\t// TextGeometry\n\n\tfunction TextGeometry( text, parameters ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t// TextBufferGeometry\n\n\tfunction TextBufferGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// SphereGeometry\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t// SphereBufferGeometry\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tvar ix, iy;\n\n\t\tvar index = 0;\n\t\tvar grid = [];\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tvar uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tvar u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// RingGeometry\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t// RingBufferGeometry\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 0.5;\n\t\touterRadius = outerRadius || 1;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// some helper variables\n\n\t\tvar segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// LatheGeometry\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t// LatheBufferGeometry\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar base;\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// ShapeGeometry\n\n\tfunction ShapeGeometry( shapes, curveSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\tShapeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t// ShapeBufferGeometry\n\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tcurveSegments = curveSegments || 12;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar groupStart = 0;\n\t\tvar groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar i, l, shapeHole;\n\n\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\t\tvar shapeVertices = points.shape;\n\t\t\tvar shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n\tShapeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t//\n\n\tfunction toJSON$1( shapes, data ) {\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t\t// prepare source geometry\n\n\t\tvar geometry2;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar sourceVertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\tvar e = edges[ key ];\n\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// CylinderGeometry\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t// CylinderBufferGeometry\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\t\theight = height || 1;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\t// ConeGeometry\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t// ConeBufferGeometry\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */\n\n\t// CircleGeometry\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t// CircleBufferGeometry\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, s;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  color: <THREE.Color>\n\t * }\n\t */\n\n\tfunction ShadowMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( Material.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\tShadowMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t *  clearcoat: <float>\n\t *  clearcoatRoughness: <float>\n\t *\n\t *  sheen: <Color>\n\t *\n\t *  clearcoatNormalScale: <Vector2>,\n\t *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatRoughness = 0.0;\n\n\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.transparency = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\n\t\tif ( source.sheen ) this.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\t\telse this.sheen = null;\n\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.transparency = source.transparency;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  gradientMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tfunction MeshToonMaterial( parameters ) {\n\n\t\tMeshPhongMaterial.call( this );\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.gradientMap = null;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  matcap: new THREE.Texture( <Image> ),\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshMatcapMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshMatcapMaterial.prototype = Object.create( Material.prototype );\n\tMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\tMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tLineBasicMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function ( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function ( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function ( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function ( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function ( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tevaluate: function ( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[ i1 ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function () {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function ( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\t\tthrow new Error( 'call to abstract method' );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( Interpolant.prototype, {\n\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t}\n\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Static methods\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\ttoJSON: function ( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( KeyframeTrack.prototype, {\n\n\t\tconstructor: KeyframeTrack,\n\n\t\tTimeBufferType: Float32Array,\n\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function ( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInterpolation: function () {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function () {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function ( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function ( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function ( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t\t++ from;\n\n\t\t\t}\n\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t\t-- to;\n\n\t\t\t}\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function () {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\twriteIndex = 1,\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tkeep = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\t\tvar TypedKeyframeTrack = this.constructor;\n\t\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\t\treturn track;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrack.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n\tfunction parseKeyframeTrack( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t}\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\t\ttoJSON: function ( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\ti,\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\ttimes, values\n\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t\t},\n\n\t\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function ( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || - 1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( AnimationClip.prototype, {\n\n\t\tresetDuration: function () {\n\n\t\t\tvar tracks = this.tracks, duration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttrim: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\toptimize: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\n\t\tclone: function () {\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( this.name, this.duration, tracks );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false;\n\t\tvar itemsLoaded = 0;\n\t\tvar itemsTotal = 0;\n\t\tvar urlModifier = undefined;\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\t\t\treturn this;\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\n\t}\n\n\tObject.assign( Loader.prototype, {\n\n\t\tload: function ( /* url, onLoad, onProgress, onError */ ) {},\n\n\t\tparse: function ( /* data */ ) {},\n\n\t\tsetCrossOrigin: function ( crossOrigin ) {\n\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( path ) {\n\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( resourcePath ) {\n\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tLoader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar loading = {};\n\n\tfunction FileLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FileLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check if request is duplicate\n\n\t\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\t\tdata = decodeURIComponent( data );\n\n\t\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Initialise array for duplicate requests\n\n\t\t\t\tloading[ url ] = [];\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = this.response;\n\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t\t}\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMimeType: function ( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRequestHeader: function ( value ) {\n\n\t\t\tthis.requestHeader = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io/\n\t */\n\n\tfunction AnimationLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tAnimationLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: AnimationLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tCompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: CompressedTextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tfunction DataTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tDataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: DataTextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipmapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tImageLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ImageLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\t\tfunction onImageLoad() {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\tfunction onImageError( event ) {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tCubeTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: CubeTextureLoader,\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: TextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new Texture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\ttexture.image = image;\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\tObject.assign( Curve.prototype, {\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t, optionalTarget );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function ( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\tvar i, u, theta;\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tu = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX || 0;\n\t\tthis.aY = aY || 0;\n\n\t\tthis.xRadius = xRadius || 1;\n\t\tthis.yRadius = yRadius || 1;\n\n\t\tthis.aStartAngle = aStartAngle || 0;\n\t\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\t\tthis.aClockwise = aClockwise || false;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t};\n\n\tEllipseCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\n\tEllipseCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t};\n\n\tEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\n\tfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points || [];\n\t\tthis.closed = closed || false;\n\t\tthis.curveType = curveType || 'centripetal';\n\t\tthis.tension = tension || 0.5;\n\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\tCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\n\t\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tp1 = points[ intPoint % l ];\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t};\n\n\tCatmullRomCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t};\n\n\tCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\t\tthis.v3 = v3 || new Vector2();\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\t\tthis.v3 = v3 || new Vector3();\n\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\tLineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tLineCurve3.prototype = Object.create( Curve.prototype );\n\tLineCurve3.prototype.constructor = LineCurve3;\n\n\tLineCurve3.prototype.isLineCurve3 = true;\n\n\tLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points || [];\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar points = this.points;\n\t\tvar p = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar p1 = points[ intPoint ];\n\t\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tSplineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tSplineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t};\n\n\tSplineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurve.prototype.copy.call( this, source );\n\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = source.curves[ i ];\n\n\t\t\t\tthis.curves.push( curve.clone() );\n\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = this.curves[ i ];\n\t\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = json.curves[ i ];\n\t\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tconstructor: Path,\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape( points ) {\n\n\t\tPath.call( this, points );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tPath.prototype.copy.call( this, source );\n\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = source.holes[ i ];\n\n\t\t\t\tthis.holes.push( hole.clone() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = this.holes[ i ];\n\t\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = json.holes[ i ];\n\t\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\t_projScreenMatrix: new Matrix4(),\n\n\t\t_lightPositionWorld: new Vector3(),\n\n\t\t_lookTarget: new Vector3(),\n\n\t\tgetViewportCount: function () {\n\n\t\t\treturn this._viewportCount;\n\n\t\t},\n\n\t\tgetFrustum: function () {\n\n\t\t\treturn this._frustum;\n\n\t\t},\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tvar shadowCamera = this.camera,\n\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\tshadowCamera.lookAt( lookTarget );\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromMatrix( projScreenMatrix );\n\n\t\t\tshadowMatrix.set(\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t);\n\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t},\n\n\t\tgetViewport: function ( viewportIndex ) {\n\n\t\t\treturn this._viewports[ viewportIndex ];\n\n\t\t},\n\n\t\tgetFrameExtents: function () {\n\n\t\t\treturn this._frameExtents;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdateMatrices: function ( light, viewCamera, viewportIndex ) {\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tLightShadow.prototype.updateMatrices.call( this, light, viewCamera, viewportIndex );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction PointLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tPointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: PointLightShadow,\n\n\t\tisPointLightShadow: true,\n\n\t\tupdateMatrices: function ( light, viewCamera, viewportIndex ) {\n\n\t\t\tvar camera = this.camera,\n\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\n\t\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tcamera.position.copy( lightPositionWorld );\n\n\t\t\tlookTarget.copy( camera.position );\n\t\t\tlookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\t\tcamera.lookAt( lookTarget );\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t\tshadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );\n\n\t\t\tprojScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromMatrix( projScreenMatrix );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = ( left !== undefined ) ? left : - 1;\n\t\tthis.right = ( right !== undefined ) ? right : 1;\n\t\tthis.top = ( top !== undefined ) ? top : 1;\n\t\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow() {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow,\n\n\t\tisDirectionalLightShadow: true,\n\n\t\tupdateMatrices: function ( light, viewCamera, viewportIndex ) {\n\n\t\t\tLightShadow.prototype.updateMatrices.call( this, light, viewCamera, viewportIndex );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true\n\n\t} );\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction RectAreaLight( color, intensity, width, height ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t}\n\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: RectAreaLight,\n\n\t\tisRectAreaLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.textures = {};\n\n\t}\n\n\tMaterialLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: MaterialLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\t\tif ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;\n\t\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t\t// Shader Material\n\n\t\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\t\tif ( json.extensions !== undefined ) {\n\n\t\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Deprecated\n\n\t\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Don McCurdy / https://www.donmccurdy.com\n\t */\n\n\tvar LoaderUtils = {\n\n\t\tdecodeText: function ( array ) {\n\n\t\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\t\treturn new TextDecoder().decode( array );\n\n\t\t\t}\n\n\t\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\t\tvar s = '';\n\n\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t\t} catch ( e ) { // see #16358\n\n\t\t\t\treturn s;\n\n\t\t\t}\n\n\t\t},\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar index = url.lastIndexOf( '/' );\n\n\t\t\tif ( index === - 1 ) return './';\n\n\t\t\treturn url.substr( 0, index + 1 );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\t\tconstructor: InstancedBufferGeometry,\n\n\t\tisInstancedBufferGeometry: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\t\tdata.maxInstancedCount = this.maxInstancedCount;\n\n\t\t\tdata.isInstancedBufferGeometry = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\t\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\t\tconstructor: InstancedBufferAttribute,\n\n\t\tisInstancedBufferAttribute: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ()\t{\n\n\t\t\tvar data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\tdata.isInstancedBufferAttribute = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tBufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: BufferGeometryLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tvar bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\tgeometry.addAttribute( key, bufferAttribute );\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\t\tif ( morphAttributes ) {\n\n\t\t\t\tfor ( var key in morphAttributes ) {\n\n\t\t\t\t\tvar attributeArray = morphAttributes[ key ];\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar attribute = attributeArray[ i ];\n\t\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\tif ( json.name ) geometry.name = json.name;\n\t\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tObjectLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ObjectLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar shapes = this.parseShape( json.shapes );\n\t\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseShape: function ( json ) {\n\n\t\t\tvar shapes = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t},\n\n\t\tparseGeometries: function ( json, shapes ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar cache = {}; // MultiMaterial\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t\t// Deprecated\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar url = image.url;\n\n\t\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// load single image\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function ( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.drawMode !== undefined ) object.setDrawMode( data.drawMode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t}\n\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif ( data.shadow ) {\n\n\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tvar children = data.children;\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\t/**\n\t * @author thespite / http://clicktorelease.com/\n\t */\n\n\n\tfunction ImageBitmapLoader( manager ) {\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.options = undefined;\n\n\t}\n\n\tImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ImageBitmapLoader,\n\n\t\tsetOptions: function setOptions( options ) {\n\n\t\t\tthis.options = options;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tfetch( url ).then( function ( res ) {\n\n\t\t\t\treturn res.blob();\n\n\t\t\t} ).then( function ( blob ) {\n\n\t\t\t\tif ( scope.options === undefined ) {\n\n\t\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\n\t\t\t\t\treturn createImageBitmap( blob );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t\t}\n\n\t\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\t\tCache.add( url, imageBitmap );\n\n\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} ).catch( function ( e ) {\n\n\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/\n\n\tfunction ShapePath() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tObject.assign( ShapePath.prototype, {\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction Font( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size ) {\n\n\t\t\tif ( size === undefined ) size = 100;\n\n\t\t\tvar shapes = [];\n\t\t\tvar paths = createPaths( text, size, this.data );\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\tfunction createPaths( text, size, data ) {\n\n\t\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\t\tvar scale = size / data.resolution;\n\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\tvar paths = [];\n\n\t\tvar offsetX = 0, offsetY = 0;\n\n\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\tvar char = chars[ i ];\n\n\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY -= line_height;\n\n\t\t\t} else {\n\n\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\tpaths.push( ret.path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn paths;\n\n\t}\n\n\tfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\t\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\t\tif ( ! glyph ) {\n\n\t\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar path = new ShapePath();\n\n\t\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\t\tif ( glyph.o ) {\n\n\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFontLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FontLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _context;\n\n\tvar AudioContext = {\n\n\t\tgetContext: function () {\n\n\t\t\tif ( _context === undefined ) {\n\n\t\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn _context;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\t_context = value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tAudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: AudioLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tvar context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Primary reference:\n\t *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *   https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\n\t// 3-band SH defined by 9 coefficients\n\n\tfunction SphericalHarmonics3() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tObject.assign( SphericalHarmonics3.prototype, {\n\n\t\tisSphericalHarmonics3: true,\n\n\t\tset: function ( coefficients ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tzero: function () {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\t\tgetAt: function ( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tvar coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t\t// band 1\n\t\t\ttarget.addScale( coeff[ 1 ], 0.488603 * y );\n\t\t\ttarget.addScale( coeff[ 2 ], 0.488603 * z );\n\t\t\ttarget.addScale( coeff[ 3 ], 0.488603 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScale( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\t\ttarget.addScale( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\t\ttarget.addScale( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\t\ttarget.addScale( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\t\ttarget.addScale( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t\tgetIrradianceAt: function ( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tvar coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t\t// band 1\n\t\t\ttarget.addScale( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\t\ttarget.addScale( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\t\ttarget.addScale( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScale( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\t\ttarget.addScale( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\t\ttarget.addScale( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\t\ttarget.addScale( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\t\ttarget.addScale( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tadd: function ( sh ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\n\t\tscale: function ( s ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( sh, alpha ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sh ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcopy: function ( sh ) {\n\n\t\t\treturn this.set( sh.coefficients );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( SphericalHarmonics3, {\n\n\t\t// evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\t\tgetBasisAt: function ( normal, shBasis ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\t// band 0\n\t\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t\t// band 1\n\t\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t\t// band 2\n\t\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * A LightProbe is a source of indirect-diffuse light\n\t */\n\n\tfunction LightProbe( sh, intensity ) {\n\n\t\tLight.call( this, undefined, intensity );\n\n\t\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n\t}\n\n\tLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: LightProbe,\n\n\t\tisLightProbe: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.sh.copy( source.sh );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\t\tLightProbe.call( this, undefined, intensity );\n\n\t\tvar color1 = new Color().set( skyColor );\n\t\tvar color2 = new Color().set( groundColor );\n\n\t\tvar sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tvar ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tvar c0 = Math.sqrt( Math.PI );\n\t\tvar c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n\tHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\t\tconstructor: HemisphereLightProbe,\n\n\t\tisHemisphereLightProbe: true,\n\n\t\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction AmbientLightProbe( color, intensity ) {\n\n\t\tLightProbe.call( this, undefined, intensity );\n\n\t\tvar color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n\tAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\t\tconstructor: AmbientLightProbe,\n\n\t\tisAmbientLightProbe: true,\n\n\t\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\tvar _eyeRight = new Matrix4();\n\tvar _eyeLeft = new Matrix4();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: function ( camera ) {\n\n\t\t\tvar cache = this._cache;\n\n\t\t\tvar needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tvar eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tvar ymax = ( cache.near * Math.tan( _Math.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tObject.assign( Clock.prototype, {\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _position$2 = new Vector3();\n\tvar _quaternion$3 = new Quaternion();\n\tvar _scale$1 = new Vector3();\n\tvar _orientation = new Vector3();\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );\n\n\t\t\t_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( _position$2.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( _position$2.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( _position$2.x, _position$2.y, _position$2.z );\n\t\t\t\tlistener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.startTime = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tsource.start( this.startTime, this.offset, this.duration );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\tthis.setDetune( this.detune );\n\t\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\t\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\t\tthis.isPlaying = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDetune: function ( value ) {\n\n\t\t\tthis.detune = value;\n\n\t\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDetune: function () {\n\n\t\t\treturn this.detune;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _position$3 = new Vector3();\n\tvar _quaternion$4 = new Quaternion();\n\tvar _scale$2 = new Vector3();\n\tvar _orientation$1 = new Vector3();\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\t\tthis.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );\n\n\t\t\t_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( _position$3.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( _position$3.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( _position$3.x, _position$3.y, _position$3.z );\n\t\t\t\tpanner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tbufferType = Array;\n\t\t\t\tmixFunction = this._select;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tObject.assign( PropertyMixer.prototype, {\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function ( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function ( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function () {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function () {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tvar _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\tvar _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\tvar _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\tvar _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\tvar _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\tvar _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n\t// Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\tvar _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n\t// Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\tvar _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\n\tvar _trackRe = new RegExp( ''\n\t\t+ '^'\n\t\t+ _directoryRe\n\t\t+ _nodeRe\n\t\t+ _objectRe\n\t\t+ _propertyRe\n\t\t+ '$'\n\t);\n\n\tvar _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tObject.assign( Composite.prototype, {\n\n\t\tgetValue: function ( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function ( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tObject.assign( PropertyBinding, {\n\n\t\tComposite: Composite,\n\n\t\tcreate: function ( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: function ( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t\t},\n\n\t\tparseTrackName: function ( trackName ) {\n\n\t\t\tvar matches = _trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t},\n\n\t\tfindNode: function ( root, nodeName ) {\n\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function () {},\n\t\t_setValue_unavailable: function () {},\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t],\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function () {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( PropertyBinding.prototype, {\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t} );\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *  - Add objects you would otherwise pass as 'root' to the\n\t *    constructor or the .clipAction method of AnimationMixer.\n\t *\n\t *  - Instead pass this object as 'root'.\n\t *\n\t *  - You can also add and remove objects later when the mixer\n\t *    is running.\n\t *\n\t * Note:\n\t *\n\t *    Objects of this class appear as one object to the mixer,\n\t *    so cache control of the individual objects must be done\n\t *    on the group.\n\t *\n\t * Limitation:\n\t *\n\t *  - The animated properties must be compatible among the\n\t *    all objects in the group.\n\t *\n\t *  - A single property can either be controlled through a\n\t *    target group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup() {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tObject.assign( AnimationObjectGroup.prototype, {\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length,\n\t\t\t\tknownObject = undefined;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function ( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\tObject.assign( AnimationAction.prototype, {\n\n\t\t// State & Scheduling\n\n\t\tplay: function () {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function () {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0; // restart clip\n\t\t\tthis._loopCount = - 1;// forget previous loops\n\t\t\tthis._startTime = null;// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function () {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function () {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function ( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function ( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function ( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function () {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif ( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function () {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function () {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function ( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function ( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function ( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function () {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function () {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function () {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function () {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function ( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function ( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function ( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\t\t\tvar duration = this._clip.duration;\n\t\t\tvar loop = this.loop;\n\t\t\tvar loopCount = this._loopCount;\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( deltaTime === 0 ) {\n\n\t\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t\t}\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\n\t\t\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: AnimationMixer,\n\n\t\t_bindAction: function ( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function ( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function ( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function () {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function ( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function ( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function ( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function ( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function () {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function () {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function ( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function () {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function ( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function ( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tUniform.prototype.clone = function () {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\t\tconstructor: InstancedInterleavedBuffer,\n\n\t\tisInstancedInterleavedBuffer: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\t\tthis.camera = null;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Raycaster.prototype, {\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axiz.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Spherical.prototype, {\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function () {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */\n\n\tfunction Cylindrical( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Cylindrical.prototype, {\n\n\t\tset: function ( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _vector$6 = new Vector2();\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box2.prototype, {\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\t\tvar halfSize = _vector$6.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\tvar clampedPoint = _vector$6.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t},\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _startP = new Vector3();\n\tvar _startEnd = new Vector3();\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tObject.assign( Line3.prototype, {\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function ( point, clampToLine ) {\n\n\t\t\t_startP.subVectors( point, this.start );\n\t\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = _startEnd.dot( _startEnd );\n\t\t\tvar startEnd_startP = _startEnd.dot( _startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( /* renderCallback */ ) {};\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _v1$5 = new Vector3();\n\tvar _v2$3 = new Vector3();\n\tvar _normalMatrix$1 = new Matrix3();\n\tvar _keys = [ 'a', 'b', 'c' ];\n\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n\tVertexNormalsHelper.prototype.update = function () {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\t_normalMatrix$1.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ _keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t_v1$5.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t_v2$3.copy( normal ).applyMatrix3( _normalMatrix$1 ).normalize().multiplyScalar( this.size ).add( _v1$5 );\n\n\t\t\t\t\tposition.setXYZ( idx, _v1$5.x, _v1$5.y, _v1$5.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, _v2$3.x, _v2$3.y, _v2$3.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t_v1$5.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t_v2$3.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t_v2$3.applyMatrix3( _normalMatrix$1 ).normalize().multiplyScalar( this.size ).add( _v1$5 );\n\n\t\t\t\tposition.setXYZ( idx, _v1$5.x, _v1$5.y, _v1$5.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, _v2$3.x, _v2$3.y, _v2$3.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _vector$7 = new Vector3();\n\n\tfunction SpotLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$7.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$7 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tvar _vector$8 = new Vector3();\n\tvar _boneMatrix = new Matrix4();\n\tvar _matrixWorldInv = new Matrix4();\n\n\tfunction getBoneList( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object && object.isBone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tvar bones = getBoneList( object );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar color1 = new Color( 0, 0, 1 );\n\t\tvar color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$8.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$8.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize, color ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t *  This helper must be added as a child of the light\n\t */\n\n\tfunction RectAreaLightHelper( light, color ) {\n\n\t\tthis.type = 'RectAreaLightHelper';\n\n\t\tthis.light = light;\n\n\t\tthis.color = color; // optional hardwired color for the helper\n\n\t\tvar positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tLine.call( this, geometry, material );\n\n\t\t//\n\n\t\tvar positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tvar geometry2 = new BufferGeometry();\n\t\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\t\tthis.update();\n\n\t}\n\n\tRectAreaLightHelper.prototype = Object.create( Line.prototype );\n\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n\tRectAreaLightHelper.prototype.update = function () {\n\n\t\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\t\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t\t// prevent hue shift\n\t\t\tvar c = this.material.color;\n\t\t\tvar max = Math.max( c.r, c.g, c.b );\n\t\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\n\n\t\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t\t}\n\n\t};\n\n\tRectAreaLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tvar _vector$9 = new Vector3();\n\tvar _color1 = new Color();\n\tvar _color2 = new Color();\n\n\tfunction HemisphereLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\t\tvar colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$9.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction LightProbeHelper( lightProbe, size ) {\n\n\t\tthis.lightProbe = lightProbe;\n\n\t\tthis.size = size;\n\n\t\tvar defines = {};\n\t\tdefines[ 'GAMMA_OUTPUT' ] = \"\";\n\n\t\t// material\n\t\tvar material = new ShaderMaterial( {\n\n\t\t\tdefines: defines,\n\n\t\t\tuniforms: {\n\n\t\t\t\tsh: { value: this.lightProbe.sh.coefficients }, // by reference\n\n\t\t\t\tintensity: { value: this.lightProbe.intensity }\n\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t'varying vec3 vNormal;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvNormal = normalize( normalMatrix * normal );',\n\n\t\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t\t\t'}',\n\n\t\t\t].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t'#define RECIPROCAL_PI 0.318309886',\n\n\t\t\t\t'vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {',\n\n\t\t\t\t'\t// matrix is assumed to be orthogonal',\n\n\t\t\t\t'\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );',\n\n\t\t\t\t'}',\n\n\t\t\t\t'vec3 linearToOutput( in vec3 a ) {',\n\n\t\t\t\t'\t#ifdef GAMMA_OUTPUT',\n\n\t\t\t\t'\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\treturn a;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'}',\n\n\t\t\t\t'// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf',\n\t\t\t\t'vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {',\n\n\t\t\t\t'\t// normal is assumed to have unit length',\n\n\t\t\t\t'\tfloat x = normal.x, y = normal.y, z = normal.z;',\n\n\t\t\t\t'\t// band 0',\n\t\t\t\t'\tvec3 result = shCoefficients[ 0 ] * 0.886227;',\n\n\t\t\t\t'\t// band 1',\n\t\t\t\t'\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;',\n\t\t\t\t'\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;',\n\t\t\t\t'\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;',\n\n\t\t\t\t'\t// band 2',\n\t\t\t\t'\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;',\n\t\t\t\t'\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;',\n\t\t\t\t'\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );',\n\t\t\t\t'\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;',\n\t\t\t\t'\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );',\n\n\t\t\t\t'\treturn result;',\n\n\t\t\t\t'}',\n\n\t\t\t\t'uniform vec3 sh[ 9 ]; // sh coefficients',\n\n\t\t\t\t'uniform float intensity; // light probe intensity',\n\n\t\t\t\t'varying vec3 vNormal;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvec3 normal = normalize( vNormal );',\n\n\t\t\t\t'\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );',\n\n\t\t\t\t'\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );',\n\n\t\t\t\t'\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;',\n\n\t\t\t\t'\toutgoingLight = linearToOutput( outgoingLight );',\n\n\t\t\t\t'\tgl_FragColor = vec4( outgoingLight, 1.0 );',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' )\n\n\t\t} );\n\n\t\tvar geometry = new SphereBufferGeometry( 1, 32, 16 );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.onBeforeRender();\n\n\t}\n\n\tLightProbeHelper.prototype = Object.create( Mesh.prototype );\n\tLightProbeHelper.prototype.constructor = LightProbeHelper;\n\n\tLightProbeHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tLightProbeHelper.prototype.onBeforeRender = function () {\n\n\t\tthis.position.copy( this.lightProbe.position );\n\n\t\tthis.scale.set( 1, 1, 1 ).multiplyScalar( this.size );\n\n\t\tthis.material.uniforms.intensity.value = this.lightProbe.intensity;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tsize = size || 10;\n\t\tdivisions = divisions || 10;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = size / divisions;\n\t\tvar halfSize = size / 2;\n\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\t\tconstructor: GridHelper,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\t\tthis.geometry.copy( source.geometry );\n\t\t\tthis.material.copy( source.material );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */\n\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\t\tradius = radius || 10;\n\t\tradials = radials || 16;\n\t\tcircles = circles || 8;\n\t\tdivisions = divisions || 64;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar x, z;\n\t\tvar v, i, j, r, color;\n\n\t\t// create the radials\n\n\t\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * radius;\n\t\t\tz = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tr = radius - ( radius / circles * i );\n\n\t\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tfunction PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) {\n\n\t\tthis.audio = audio;\n\t\tthis.range = range || 1;\n\t\tthis.divisionsInnerAngle = divisionsInnerAngle || 16;\n\t\tthis.divisionsOuterAngle = divisionsOuterAngle || 2;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n\t\tvar positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tvar materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\n\t\tvar materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\n\n\t\tLine.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] );\n\n\t\tthis.update();\n\n\t}\n\n\tPositionalAudioHelper.prototype = Object.create( Line.prototype );\n\tPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\n\tPositionalAudioHelper.prototype.update = function () {\n\n\t\tvar audio = this.audio;\n\t\tvar range = this.range;\n\t\tvar divisionsInnerAngle = this.divisionsInnerAngle;\n\t\tvar divisionsOuterAngle = this.divisionsOuterAngle;\n\n\t\tvar coneInnerAngle = _Math.degToRad( audio.panner.coneInnerAngle );\n\t\tvar coneOuterAngle = _Math.degToRad( audio.panner.coneOuterAngle );\n\n\t\tvar halfConeInnerAngle = coneInnerAngle / 2;\n\t\tvar halfConeOuterAngle = coneOuterAngle / 2;\n\n\t\tvar start = 0;\n\t\tvar count = 0;\n\t\tvar i, stride;\n\n\t\tvar geometry = this.geometry;\n\t\tvar positionAttribute = geometry.attributes.position;\n\n\t\tgeometry.clearGroups();\n\n\t\t//\n\n\t\tfunction generateSegment( from, to, divisions, materialIndex ) {\n\n\t\t\tvar step = ( to - from ) / divisions;\n\n\t\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\n\t\t\tcount ++;\n\n\t\t\tfor ( i = from; i < to; i += step ) {\n\n\t\t\t\tstride = start + count;\n\n\t\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\n\t\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\n\t\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\n\n\t\t\t\tcount += 3;\n\n\t\t\t}\n\n\t\t\tgeometry.addGroup( start, count, materialIndex );\n\n\t\t\tstart += count;\n\t\t\tcount = 0;\n\n\t\t}\n\n\t\t//\n\n\t\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\n\t\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\n\t\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\n\n\t\t//\n\n\t\tpositionAttribute.needsUpdate = true;\n\n\t\tif ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false;\n\n\t};\n\n\tPositionalAudioHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material[ 0 ].dispose();\n\t\tthis.material[ 1 ].dispose();\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _v1$6 = new Vector3();\n\tvar _v2$4 = new Vector3();\n\tvar _normalMatrix$2 = new Matrix3();\n\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t}\n\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n\tFaceNormalsHelper.prototype.update = function () {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\t_normalMatrix$2.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\t_v1$6.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t_v2$4.copy( normal ).applyMatrix3( _normalMatrix$2 ).normalize().multiplyScalar( this.size ).add( _v1$6 );\n\n\t\t\tposition.setXYZ( idx, _v1$6.x, _v1$6.y, _v1$6.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, _v2$4.x, _v2$4.y, _v2$4.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _v1$7 = new Vector3();\n\tvar _v2$5 = new Vector3();\n\tvar _v3$1 = new Vector3();\n\n\tfunction DirectionalLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\t_v1$7.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2$5.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3$1.subVectors( _v2$5, _v1$7 );\n\n\t\tthis.lightPlane.lookAt( _v2$5 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2$5 );\n\t\tthis.targetLine.scale.z = _v3$1.length();\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tvar _vector$a = new Vector3();\n\tvar _camera = new Camera();\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\tvar colorCone = new Color( 0xff0000 );\n\t\tvar colorUp = new Color( 0x00aaff );\n\t\tvar colorTarget = new Color( 0xffffff );\n\t\tvar colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar pointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n\tfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t\t_vector$a.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], _vector$a.x, _vector$a.y, _vector$a.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tvar _box$2 = new Box3();\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tthis.object = object;\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = function ( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box$2.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box$2.isEmpty() ) return;\n\n\t\tvar min = _box$2.min;\n\t\tvar max = _box$2.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t};\n\n\tBoxHelper.prototype.setFromObject = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t};\n\n\tBoxHelper.prototype.copy = function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t};\n\n\tBoxHelper.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3Helper( box, color ) {\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.box = box;\n\n\t\tcolor = color || 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\n\tBox3Helper.prototype.constructor = Box3Helper;\n\n\tBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction PlaneHelper( plane, size, hex ) {\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = ( size === undefined ) ? 1 : size;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\t//\n\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tvar geometry2 = new BufferGeometry();\n\t\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n\t}\n\n\tPlaneHelper.prototype = Object.create( Line.prototype );\n\tPlaneHelper.prototype.constructor = PlaneHelper;\n\n\tPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar _axis = new Vector3();\n\tvar _lineGeometry, _coneGeometry;\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tif ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\n\t\tif ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = function ( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tvar radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t};\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t};\n\n\tArrowHelper.prototype.copy = function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t};\n\n\tArrowHelper.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxesHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tvar colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tAxesHelper.prototype = Object.create( LineSegments.prototype );\n\tAxesHelper.prototype.constructor = AxesHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n\t}\n\n\tvar LineStrip = 0;\n\n\tvar LinePieces = 1;\n\n\tfunction MeshFaceMaterial( materials ) {\n\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\treturn materials;\n\n\t}\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tif ( materials === undefined ) materials = [];\n\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\t\tmaterials.clone = function () {\n\n\t\t\treturn materials.slice();\n\n\t\t};\n\t\treturn materials;\n\n\t}\n\n\tfunction PointCloud( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction Particle( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\treturn new Sprite( material );\n\n\t}\n\n\tfunction ParticleSystem( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction PointCloudMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleBasicMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleSystemMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction Vertex( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\n\t}\n\n\t//\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t}\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\treturn new Int8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\treturn new Uint8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\treturn new Int16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\treturn new Uint16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\treturn new Int32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\treturn new Uint32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\treturn new Float64BufferAttribute( array, itemSize );\n\n\t}\n\n\t//\n\n\tCurve.create = function ( construct, getPoint ) {\n\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\n\t\treturn construct;\n\n\t};\n\n\t//\n\n\tObject.assign( CurvePath.prototype, {\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from equidistant sampling along the path\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Path.prototype, {\n\n\t\tfromPoints: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction SplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction Spline( points ) {\n\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\tObject.assign( Spline.prototype, {\n\n\t\tinitFromArray: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t\t},\n\t\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t\t},\n\t\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction AxisHelper( size ) {\n\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\t\treturn new AxesHelper( size );\n\n\t}\n\n\tfunction BoundingBoxHelper( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\treturn new BoxHelper( object, color );\n\n\t}\n\n\tfunction EdgesHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n\t};\n\n\tfunction WireframeHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\t//\n\n\tObject.assign( Loader.prototype, {\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t\t}\n\n\t} );\n\n\tfunction XHRLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\treturn new FileLoader( manager );\n\n\t}\n\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\treturn new DataTextureLoader( manager );\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\t\treturn this.setResourcePath( value );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tLine3.prototype.center = function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t};\n\n\tObject.assign( _Math, {\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\t\treturn _Math.floorPowerOfTwo( value );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\textractPosition: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\n\t\t},\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tgetPosition: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n\t\t},\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\n\t\t},\n\t\tmultiplyToArray: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\trotateAxis: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\ttranslate: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t\t},\n\t\trotateX: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t\t},\n\t\trotateY: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t\t},\n\t\trotateZ: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t\t},\n\t\trotateByAxis: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t\t},\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t\t},\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t\t}\n\n\t} );\n\n\tPlane.prototype.isIntersectionLine = function ( line ) {\n\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\n\t};\n\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t};\n\n\tObject.assign( Ray.prototype, {\n\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tarea: function () {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\t\treturn this.getArea();\n\n\t\t},\n\t\tbarycoordFromPoint: function ( point, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn this.getBarycoord( point, target );\n\n\t\t},\n\t\tmidpoint: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\t\treturn this.getMidpoint( target );\n\n\t\t},\n\t\tnormal: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn this.getNormal( target );\n\n\t\t},\n\t\tplane: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\t\treturn this.getPlane( target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle, {\n\n\t\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t\t},\n\t\tnormal: function ( a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\t\treturn this.extractPoints( divisions );\n\n\t\t},\n\t\textrude: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tsetEulerFromRotationMatrix: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t\t},\n\t\tapplyProjection: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\treturn this.applyMatrix4( m );\n\n\t\t},\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Geometry.prototype, {\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeLineDistances: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Object3D.prototype, {\n\n\t\tgetChildByName: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\n\t\t},\n\t\trenderDepth: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\n\t\t},\n\t\tgetWorldRotation: function () {\n\n\t\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\n\t\teulerOrder: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\n\t\tobjects: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tSkinnedMesh.prototype.initBones = function () {\n\n\t\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n\t};\n\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\treturn this.arcLengthDivisions;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\tthis.arcLengthDivisions = value;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\n\t\tlength: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\treturn this.array.length;\n\n\t\t\t}\n\t\t},\n\t\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\n\t\taddIndex: function ( index ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\t\tif ( indexOffset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\n\t\t},\n\t\tclearDrawCalls: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\n\t\t},\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeOffsets: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\t\tgetArrays: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t\t},\n\n\t\taddShapeList: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t\t},\n\n\t\taddShape: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\n\t\tdynamic: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\n\t\twrapAround: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t\toverdraw: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t\twrapRGB: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\n\t\t\t}\n\t\t},\n\n\t\tshading: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\t\tmetal: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\n\t\tderivatives: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\n\t\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t},\n\t\tanimate: function ( callback ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\t\tthis.setAnimationLoop( callback );\n\n\t\t},\n\t\tgetCurrentRenderTarget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\treturn this.getRenderTarget();\n\n\t\t},\n\t\tgetMaxAnisotropy: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t\t},\n\t\tgetPrecision: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\t\treturn this.capabilities.precision;\n\n\t\t},\n\t\tresetGLState: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\t\treturn this.state.reset();\n\n\t\t},\n\t\tsupportsFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\treturn this.capabilities.vertexTextures;\n\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\n\t\t},\n\t\tinitMaterial: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t\t},\n\t\taddPrePlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t\t},\n\t\taddPostPlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t\t},\n\t\tupdateShadowMap: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t\t},\n\t\tsetFaceCulling: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t\t},\n\t\tallocTextureUnit: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t\t},\n\t\tsetTexture: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t\t},\n\t\tsetTexture2D: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t\t},\n\t\tsetTextureCube: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t\t},\n\t\tgetActiveMipMapLevel: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\t\t\treturn this.getActiveMipmapLevel();\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.enabled;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\t\treturn this.getContext();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\n\t\tcullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* cullFace */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTargetCube.prototype, {\n\n\t\tactiveCubeFace: {\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t\t}\n\t\t},\n\t\tactiveMipMapLevel: {\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\t\twrapS: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebVRManager.prototype, {\n\n\t\tstanding: {\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tuserHeight: {\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tAudio.prototype.load = function ( file ) {\n\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\tvar scope = this;\n\t\tvar audioLoader = new AudioLoader();\n\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\tscope.setBuffer( buffer );\n\n\t\t} );\n\t\treturn this;\n\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\n\t};\n\n\t//\n\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\t\treturn this.update( renderer, scene );\n\n\t};\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\t//\n\n\tfunction CanvasRenderer() {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n\t}\n\n\t//\n\n\tfunction JSONLoader() {\n\n\t\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n\t}\n\n\t//\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tattach: function ( /* child, scene, parent */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction LensFlare() {\n\n\t\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeGeometry = BoxGeometry;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.Face3 = Face3;\n\texports.Face4 = Face4;\n\texports.FaceColors = FaceColors;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GammaEncoding = GammaEncoding;\n\texports.Geometry = Geometry;\n\texports.GeometryUtils = GeometryUtils;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.LightProbeHelper = LightProbeHelper;\n\texports.LightShadow = LightShadow;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = _Math;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PositionalAudioHelper = PositionalAudioHelper;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RectAreaLightHelper = RectAreaLightHelper;\n\texports.RedFormat = RedFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.Spline = Spline;\n\texports.SplineCurve = SplineCurve;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StereoCamera = StereoCamera;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.ROTATE, MIDDLE: THREE.MOUSE.DOLLY, RIGHT: THREE.MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: THREE.TOUCH.ROTATE, TWO: THREE.TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyIn( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tswitch ( scope.mouseButtons.LEFT ) {\n\n\t\t\t\t\tcase THREE.MOUSE.ROTATE:\n\n\t\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MOUSE.PAN:\n\n\t\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.mouseButtons.MIDDLE ) {\n\n\t\t\t\t\tcase THREE.MOUSE.DOLLY:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.mouseButtons.RIGHT ) {\n\n\t\t\t\t\tcase THREE.MOUSE.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MOUSE.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase THREE.TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase THREE.TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nTHREE.MapControls = function ( object, domElement ) {\n\n\tTHREE.OrbitControls.call( this, object, domElement );\n\n\tthis.mouseButtons.LEFT = THREE.MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = THREE.MOUSE.ROTATE;\n\n\tthis.touches.ONE = THREE.TOUCH.PAN;\n\tthis.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;\n\n};\n\nTHREE.MapControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.MapControls.prototype.constructor = THREE.MapControls;\n","\nglobal.CANVAS_SKETCH_DEFAULT_STORAGE_KEY = window.location.href;\n"]}